{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":677,\"hp\":10,\"max_hp\":10,\"strength\":1,\"defense\":1,\"dexterity\":1,\"agility\":1,\"charisma\":1,\"intelligence\":0,\"hacking_chance_mult\":1.4941466866731734,\"hacking_speed_mult\":1.4866844760707618,\"hacking_money_mult\":2.4966588186269916,\"hacking_grow_mult\":1.4951843446083313,\"hacking_exp\":5572430.047017705,\"strength_exp\":0,\"defense_exp\":0,\"dexterity_exp\":0,\"agility_exp\":0,\"charisma_exp\":0,\"intelligence_exp\":0,\"hacking_mult\":2.2804540778689075,\"strength_mult\":1.3755695970396646,\"defense_mult\":1.196147475686665,\"dexterity_mult\":1.588782884580813,\"agility_mult\":1.2559548494709984,\"charisma_mult\":1.4353769708239978,\"hacking_exp_mult\":3.010695902794103,\"strength_exp_mult\":1.5131265567436314,\"defense_exp_mult\":1.5131265567436314,\"dexterity_exp_mult\":1.5131265567436314,\"agility_exp_mult\":1.5131265567436314,\"charisma_exp_mult\":1.5131265567436314,\"company_rep_mult\":1.196147475686665,\"faction_rep_mult\":1.196147475686665,\"money\":22036634728.280224,\"city\":\"New Tokyo\",\"location\":\"Global Pharmaceuticals\",\"jobs\":{},\"companyName\":\"\",\"currentServer\":\"home\",\"purchasedServers\":[\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115899.79999966468,\"ram\":64,\"totalMoneyGenerated\":1887560806.783267,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115898.9999996647,\"ram\":64,\"totalMoneyGenerated\":1912705593.802014,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115898.9999996647,\"ram\":64,\"totalMoneyGenerated\":1915462447.1729171,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115898.9999996647,\"ram\":64,\"totalMoneyGenerated\":1915282924.630644,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115898.9999996647,\"ram\":64,\"totalMoneyGenerated\":1942080008.5361793,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115841.99999966472,\"ram\":64,\"totalMoneyGenerated\":1938703298.7924807,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115841.99999966472,\"ram\":64,\"totalMoneyGenerated\":1938185637.5454576,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115841.99999966472,\"ram\":64,\"totalMoneyGenerated\":1937672582.5963771,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115841.99999966472,\"ram\":64,\"totalMoneyGenerated\":1937183710.272032,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115841.99999966472,\"ram\":64,\"totalMoneyGenerated\":1936627098.4496777,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115841.99999966472,\"ram\":64,\"totalMoneyGenerated\":1936150691.2094986,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":115841.99999966472,\"ram\":64,\"totalMoneyGenerated\":1929084936.6164248,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":102242.5999996866,\"ram\":64,\"totalMoneyGenerated\":1915445496.2347305,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":102242.5999996866,\"ram\":64,\"totalMoneyGenerated\":1915269870.847215,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":82291.39999969972,\"ram\":64,\"totalMoneyGenerated\":1500589309.1441948,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":55374.79999990194,\"ram\":64,\"totalMoneyGenerated\":1345561390.288441,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":55374.79999990194,\"ram\":64,\"totalMoneyGenerated\":1345164139.1478302,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":55374.79999990194,\"ram\":64,\"totalMoneyGenerated\":1344775592.4724915,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":55374.79999990194,\"ram\":64,\"totalMoneyGenerated\":1344398647.048087,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":27667.96961254437,\"onlineTimeSeconds\":29179.600000030066,\"ram\":64,\"totalMoneyGenerated\":786413208.4285511,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":2,\"moneyGainRatePerSecond\":9.050388217522844,\"onlineTimeSeconds\":17404.80000000419,\"ram\":1,\"totalMoneyGenerated\":157520.1968484383,\"name\":\"hacknet-node-20\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"Sector-12\",\"CyberSec\",\"Netburners\",\"NiteSec\",\"The Black Hand\",\"Tian Di Hui\",\"BitRunners\"],\"factionInvitations\":[],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Speech Enhancement\"}],\"augmentations\":[{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":18,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"The Black Hand\"}],\"sourceFiles\":[],\"numPeopleKilled\":0,\"karma\":-5.25,\"crime_money_mult\":1.196147475686665,\"crime_success_mult\":1.196147475686665,\"isWorking\":true,\"focus\":false,\"workType\":\"Working for Faction\",\"workCostMult\":7,\"workExpMult\":4,\"currentWorkFactionName\":\"BitRunners\",\"currentWorkFactionDescription\":\"carrying out hacking contracts\",\"workHackExpGainRate\":0.45160438541911546,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":1.5611604853621313,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":39718.60569758842,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":136320.41717902877,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":400,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":17590000,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":72000000,\"work_money_mult\":1.196147475686665,\"hacknet_node_money_mult\":3.016796072507615,\"hacknet_node_purchase_cost_mult\":0.6384030275093168,\"hacknet_node_ram_cost_mult\":0.8345137614500874,\"hacknet_node_core_cost_mult\":0.8345137614500874,\"hacknet_node_level_cost_mult\":0.7093366972325742,\"hasWseAccount\":true,\"hasTixApiAccess\":true,\"has4SData\":true,\"has4SDataTixApi\":true,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":1,\"lastUpdate\":1645756317748,\"lastSave\":1645756304775,\"totalPlaytime\":730177000,\"playtimeSinceLastAug\":116024600,\"playtimeSinceLastBitnode\":730177000,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":675000000,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":900245543.7085819,\"hacknet\":34624474910.80156,\"hacknet_expenses\":-7055877057.051467,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-514543.43093086686,\"total\":22035634728.28023,\"work\":0,\"servers\":-5498240000,\"other\":-38900000,\"augmentations\":-1570554125}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-2372308.8000014806,\"codingcontract\":2550000000,\"corporation\":0,\"crime\":1428267.0322101316,\"gang\":0,\"hacking\":26869764451.02646,\"hacknet\":159871200808.04755,\"hacknet_expenses\":-37121615391.31213,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-18414202479.93384,\"total\":30863255110.587696,\"work\":27067547.626382735,\"servers\":-35420978016.59504,\"other\":-5980599972.905751,\"augmentations\":-61516437813.08989}},\"scriptProdSinceLastAug\":807368406.5690691,\"exploits\":[],\"achievements\":[{\"ID\":\"FROZE\",\"unlockedOn\":1645026146788},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1645028434786},{\"ID\":\"NS2\",\"unlockedOn\":1645044319911},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1645045831181},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1645056200950},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1645056560955},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1645066283086},{\"ID\":\"TOR\",\"unlockedOn\":1645066643085},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1645070003093},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1645097626865},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1645155279886},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1645183682014},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1645190539010},{\"ID\":\"TRAVEL\",\"unlockedOn\":1645202118069},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1645206439756},{\"ID\":\"WORKOUT\",\"unlockedOn\":1645274022801},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1645310391987},{\"ID\":\"NITESEC\",\"unlockedOn\":1645372344826},{\"ID\":\"4S\",\"unlockedOn\":1645407697058},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1645449421121},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1645451161327},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1645492247503},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1645588414067}],\"terminalCommandHistory\":[\"alias init=\\\"wget http://localhost:8000/init.js init.js; wget http://localhost:8000/deployment/self-update.js deployment/self-update.js\\\"\",\"init\",\"ls\",\"ls deployment/\",\"init\",\"run deployment/self-update.js\",\"init\",\"run init.js\",\"vim init.js\",\"run init.js\",\"ls\",\"run init.js\",\"init\",\"run init\",\"run init.js\",\"ls\",\"run deployment/\",\"ls deployment/\",\"run deployment/redeploy.js\",\"run deployment/self-update.js\",\"restart\",\"find run4\",\"connect hong-fang-tea; connect nectar-net; connect neo-net; connect johnson-ortho; connect syscore; connect lexo-corp; connect snap-fitness; connect omnia; connect icarus; connect nova-med; connect run4theh111z\",\"analyze\",\"home\",\"crackall\",\"hackall\",\"ls advanced/\",\"run test.js\",\"ls\",\"ls advanced/\",\"ls basic\",\"ls lib\",\"ls\",\"ls basic/\",\"ls\",\"ls advanced/\",\"run official/custom-stats.js\",\"run official/find_server.js run4theh11z\",\"find run4\",\"run official/find_server.js run4theh111z\",\"connect hong-fang-tea; connect nectar-net; connect neo-net; connect johnson-ortho; connect syscore; connect lexo-corp; connect snap-fitness; connect omnia; connect icarus; connect nova-med; connect run4theh111z\",\"analyze\",\"backdoor\",\"home\",\"ls\",\"ls advanced/\",\"ls\",\"ls contracts/\",\"restart\"],\"identifier\":\"afc61675d036e\",\"factionWorkType\":\"Faction Hacking Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":2,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"41.2.4.6\",\"isConnectedTo\":true,\"maxRam\":1024,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"DeepscanV1.exe\",\"AutoLink.exe\",\"ServerProfiler.exe\",\"DeepscanV2.exe\",\"HTTPWorm.exe\"],\"ramUsed\":159.5999999999999,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/advanced/daemon.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.41000000000042,\"pid\":9713,\"ramUsage\":2.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/advanced/daemon.js\",\"url\":\"blob:file:///6f2e8454-5916-4eb3-8f94-64db1f98df72\",\"moduleSequenceNumber\":136176}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/hacknet/daemon.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.41000000000042,\"pid\":9715,\"ramUsage\":5.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/hacknet/daemon.js\",\"url\":\"blob:file:///7fe2d4ec-db10-4110-a259-b250ba8fb2cb\",\"moduleSequenceNumber\":789}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[21194,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":21194,\"onlineRunningTime\":142.41000000000048,\"pid\":9721,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.2100000000005,\"pid\":9722,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[185843,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":185843,\"onlineRunningTime\":142.0100000000005,\"pid\":9723,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9724,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9725,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9726,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9727,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9728,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9729,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9730,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9731,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9732,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9733,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9734,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9735,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9736,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9737,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9738,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9739,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9740,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9741,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9742,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9743,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9744,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[375473,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":375473,\"onlineRunningTime\":142.0100000000005,\"pid\":9745,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9746,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":142.0100000000005,\"pid\":9747,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/basic/hack.js\",\"url\":\"blob:file:///6bb4962f-87bb-4a80-a066-2de56d276dab\",\"moduleSequenceNumber\":477}],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"home\",\"moduleSequenceNumber\":100401,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    let target = ns.args[0].toString();\\r\\n    if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\r\\n        ns.tprint(\\\"Opening ssh port\\\");\\r\\n        ns.brutessh(target);\\r\\n    }\\r\\n    if (ns.fileExists(\\\"FTPCrack.exe\\\", \\\"home\\\")) {\\r\\n        ns.tprint(\\\"Opening ftp port\\\");\\r\\n        ns.ftpcrack(target);\\r\\n    }\\r\\n    if (ns.fileExists(\\\"relaySMTP.exe\\\", \\\"home\\\")) {\\r\\n        ns.tprint(\\\"Opening smtp port\\\");\\r\\n        ns.relaysmtp(target);\\r\\n    }\\r\\n    if (ns.fileExists(\\\"HTTPWorm.exe\\\", \\\"home\\\")) {\\r\\n        ns.tprint(\\\"Opening http port\\\");\\r\\n        ns.httpworm(target);\\r\\n    }\\r\\n    if (ns.fileExists(\\\"SQLInject.exe\\\", \\\"home\\\")) {\\r\\n        ns.tprint(\\\"Opening sql port\\\");\\r\\n        ns.sqlinject(target);\\r\\n    }\\r\\n    if (!ns.hasRootAccess(target)) {\\r\\n        ns.nuke(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/nuke.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/basic/nuke.js\",\"url\":\"blob:file:///085a9bbd-81fc-4fc4-a4c5-554e5ed513d8\",\"moduleSequenceNumber\":43952}],\"dependents\":[],\"ramUsage\":2.05,\"server\":\"home\",\"moduleSequenceNumber\":100405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    let servers = ns.scan();\\n    let level = ns.getHackingLevel();\\n    for(let i = 0; i < servers.length; i++) {\\n        let server = servers[i];\\n        if (server !== 'home') {\\n            let required_level = ns.getServerRequiredHackingLevel(server);\\n            if (required_level <= level) {\\n                ns.run(\\\"ServerProfiler.exe\\\", 1, server);\\n            }\\n        }\\n    }\\n}\",\"filename\":\"/wip/profileAll.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"profileAll.js\",\"url\":\"blob:file:///f6ee0f7f-fd90-495d-b459-a29aefa7ca8e\",\"moduleSequenceNumber\":1512}],\"dependents\":[],\"ramUsage\":2.95,\"server\":\"home\",\"moduleSequenceNumber\":396,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    while (true) {\\n        let money = ns.getServerMoneyAvailable('home');\\n        let nodeCount = ns.hacknet.numNodes();\\n        let nodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\n        // only count 1% of cash\\n        if (money * 0.01 >= nodeCost && nodeCount < ns.hacknet.maxNumNodes()) {\\n            ns.hacknet.purchaseNode();\\n            continue;\\n        }\\n\\n        for (let i = 0; i < nodeCount; i++) {\\n            money = ns.getPlayer().money;\\n            let levelCost = ns.hacknet.getLevelUpgradeCost(i, 1);\\n            if (money >= levelCost) {\\n                ns.hacknet.upgradeLevel(i, 1);\\n                continue;\\n            }\\n            let memoryCost = ns.hacknet.getRamUpgradeCost(i, 1);\\n            if (money >= memoryCost) {\\n                ns.hacknet.upgradeRam(i, 1);\\n                continue;\\n            }\\n            let coreCost = ns.hacknet.getCoreUpgradeCost(i, 1);\\n            if (money >= coreCost) {\\n                ns.hacknet.upgradeCore(i, 1);\\n                continue;\\n            }\\n        }\\n        await ns.sleep(100000);\\n    }\\n}\",\"filename\":\"/hacknet/old_hacknet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/expansion/hacknet.js\",\"url\":\"blob:file:///1d729809-db82-436a-8005-801904660658\",\"moduleSequenceNumber\":705}],\"dependents\":[],\"ramUsage\":6.2,\"server\":\"home\",\"moduleSequenceNumber\":397,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///d4b66491-6b5f-4603-8b19-c74b7ceece4b\",\"moduleSequenceNumber\":136180}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"home\",\"moduleSequenceNumber\":136180,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @module crawler */\\nimport { crawl, NodeType } from 'crawler.js';\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    // should we run the share version?\\n    const flags = ns.flags([\\n        ['share', false],\\n    ]);\\n    // const shouldShare = ns.args[0] === \\\"--share\\\";\\n    const shouldShare = flags.share\\n    // SANITY CHECK\\n    if (shouldShare) {\\n        ns.tprint('Sharing flag detected!');\\n    } else {\\n        ns.tprint('Sharing flag not detected!');\\n    }\\n    // SANITY CHECK\\n\\n    const scriptName = shouldShare ? \\\"hacknshare.js\\\" : \\\"hack.js\\\";\\n\\n    /** @param {NS} ns */\\n    function hack(ns, server) {\\n        ns.kill(scriptName, ns.getHostname(), server);\\n        ns.run(scriptName, 1, server);\\n    }\\n\\n    await crawl(ns, null, null, hack, 0, NodeType.Hackable);\\n}\",\"filename\":\"/archive/hackall.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"crawler.js\",\"url\":\"blob:file:///e8aa63ac-e0a1-441f-ae83-2e2715d3ea4d\",\"moduleSequenceNumber\":5829},{\"filename\":\"hackall.js\",\"url\":\"blob:file:///f9d01910-61e7-488e-9af8-901716b244f8\",\"moduleSequenceNumber\":7166}],\"dependents\":[],\"ramUsage\":6.35,\"server\":\"home\",\"moduleSequenceNumber\":399,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { crawl, NodeType } from 'crawler.js';\\n\\nconst sleepTime = 1000;\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    // should we run the share version?\\n\\n    const flags = ns.flags([\\n        ['share', false],\\n    ]);\\n\\n    // const shouldShare = ns.args[0] === \\\"--share\\\";\\n    const shouldShare = flags.share\\n    // SANITY CHECK\\n    if (shouldShare) {\\n        ns.tprint('Sharing flag detected!');\\n    } else {\\n        ns.tprint('Sharing flag not detected!');\\n    }\\n    // SANITY CHECK\\n\\n    /**\\n     * @param {NS} ns\\n     * @param {string} host\\n     */\\n    async function startHack(ns, host) {\\n        ns.tprint(`starting hack from ${host}`);\\n        ns.run('cpall.js', 1, host);\\n        const scriptName = shouldShare ? \\\"hacknshare.js\\\" : \\\"hack.js\\\";\\n        ns.exec('hackall.js', host, 1, ...ns.args);\\n        await ns.sleep(sleepTime);\\n    }\\n\\n    await crawl(ns, null, null, startHack, 0, NodeType.Runnable);\\n}\",\"filename\":\"/archive/crawl.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"crawler.js\",\"url\":\"blob:file:///89ae83a9-957f-4b96-ae7d-f919d10d913c\",\"moduleSequenceNumber\":5829},{\"filename\":\"crawl.js\",\"url\":\"blob:file:///6e0be8e7-410c-4eed-aff4-9c0c38123e61\",\"moduleSequenceNumber\":8287}],\"dependents\":[],\"ramUsage\":7,\"server\":\"home\",\"moduleSequenceNumber\":400,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nexport async function main(ns) {\\n  solveContract(ns, ns.args[0], ns.args[1], 1);\\n}\\n\\nexport function solveContract(ns, host, filename, logLevel = 0) {\\n  var type = ns.codingcontract.getContractType(filename, host);\\n  var desc = ns.codingcontract.getDescription(filename, host);\\n  var data = ns.codingcontract.getData(filename, host);\\n\\n  ns.tprint(host + ' ' + filename);\\n  ns.tprint(type);\\n\\n  if (logLevel >= 1) {\\n    ns.tprint(desc);\\n    ns.tprint(data);\\n  }\\n\\n  var answer;\\n\\n  switch (type) {\\n    case 'Minimum Path Sum in a Triangle':\\n      answer = minPathSumInTriangle(ns, data);\\n      break;\\n    case 'Find Largest Prime Factor':\\n      answer = largestPrimeFactor(ns, data);\\n      break;\\n    case 'Unique Paths in a Grid I':\\n      answer = uniquePathInGrid1(ns, data);\\n      break;\\n    case 'Unique Paths in a Grid II':\\n      answer = uniquePathInGrid2(ns, data);\\n      break;\\n    case 'Spiralize Matrix':\\n      answer = spiralizeMatrix(ns, data);\\n      break;\\n    case 'Total Ways to Sum':\\n      answer = totalWayToSum(ns, data);\\n      break;\\n    case 'Algorithmic Stock Trader I':\\n      answer = algorithmicStockTrader1(ns, data);\\n      break;\\n    case 'Algorithmic Stock Trader II':\\n      answer = algorithmicStockTrader2(ns, data);\\n      break;\\n    case 'Algorithmic Stock Trader III':\\n      answer = algorithmicStockTrader3(ns, data);\\n      break;\\n    case 'Algorithmic Stock Trader IV':\\n      answer = algorithmicStockTrader4(ns, data);\\n      break;\\n    case 'Array Jumping Game':\\n      answer = arrayJumpingGame(ns, data);\\n      break;\\n    case 'Subarray with Maximum Sum':\\n      answer = subarrayWithMaxSum(ns, data);\\n      break;\\n    case 'Generate IP Addresses':\\n      answer = generateIpAddresses(ns, data);\\n      break;\\n    case 'Merge Overlapping Intervals':\\n      answer = mergeOverlappingIntervals(ns, data);\\n      break;\\n    case 'Find All Valid Math Expressions':\\n      answer = findAllValidMathExpr(ns, data);\\n      break;\\n    case 'Sanitize Parentheses in Expression':\\n      answer = sanitizeParentheses(ns, data);\\n      break;\\n    default:\\n      ns.tprint('unknown type: ' + type);\\n      return;\\n  }\\n\\n  if (answer && !(answer instanceof String) && Object.keys(answer).length > 20) {\\n    ns.tprint('answer size too large to print: ' + Object.keys(answer).length);\\n  } else {\\n    ns.tprint(answer);\\n  }\\n\\n  var opts = {};\\n  opts.returnReward = true;\\n  var reward = ns.codingcontract.attempt(answer, filename, host, opts);\\n\\n  if (reward) {\\n    ns.tprint(reward);\\n  } else {\\n    ns.tprint('failed!');\\n  }\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction sanitizeParentheses(ns, data) {\\n\\n  var context = { 'maxLeftLength': 0 }\\n\\n  var exprs = findSanitized(ns, data, 0, context);\\n\\n  exprs = exprs.filter(e => e.length >= context['maxLeftLength']).sort();\\n\\n  for (var i = 0; i < exprs.length - 1; i++) {\\n\\n    while (exprs == exprs[i + 1]) {\\n\\n      exprs.splice(i + 1, 1);\\n\\n    }\\n\\n  }\\n\\n  return exprs;\\n\\n}\\n\\n\\nfunction findSanitized(ns, s, pos, context) {\\n\\n  // ns.tprint(s, ' ', pos, ' ', context['maxLeftLength'], ' ', validateParentheses(s));\\n\\n  if (s.length < context['maxLeftLength']) {\\n\\n    return [];\\n\\n  }\\n\\n\\n  if (pos == s.length) {\\n\\n    if (validateParentheses(s)) {\\n\\n      if (s.length > context['maxLeftLength']) {\\n\\n        context['maxLeftLength'] = s.length;\\n\\n      }\\n\\n      return [s];\\n\\n    } else {\\n\\n      return [];\\n\\n    }\\n\\n  }\\n\\n\\n  var results = [];\\n\\n  var c = s[pos];\\n\\n  if (c == '(' || c == ')') {\\n\\n    results = results.concat(\\n\\n      findSanitized(ns, s, pos + 1, context),\\n\\n      findSanitized(ns, s.slice(0, pos) + s.slice(pos + 1), pos, context)\\n\\n    );\\n\\n  } else {\\n\\n    results = results.concat(\\n\\n      findSanitized(ns, s, pos + 1, context)\\n\\n    );\\n\\n  }\\n\\n  return results;\\n\\n}\\n\\n\\nfunction validateParentheses(s) {\\n\\n  var n = 0;\\n\\n  for (var i = 0; i < s.length; i++) {\\n\\n    if (s == '(') {\\n\\n      n++;\\n\\n    }\\n\\n    if (s == ')') {\\n\\n      n--;\\n\\n    }\\n\\n    if (n < 0) {\\n\\n      return false;\\n\\n    }\\n\\n  }\\n\\n  return n == 0;\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction findAllValidMathExpr(ns, data) {\\n\\n  var s = data[0];\\n\\n  var n = data[1];\\n\\n  return findExpr(s, n, '');\\n\\n}\\n\\n\\nfunction findExpr(s, n, expr) {\\n\\n  if (s.length == 0) {\\n\\n    if (eval(expr) == n) {\\n\\n      return [expr]\\n\\n    } else {\\n\\n      return []\\n\\n    }\\n\\n  }\\n\\n\\n  var results = [];\\n\\n  if (s.startsWith('0')) {\\n\\n    var sliced = s.slice(1);\\n\\n    if (expr.length == 0) {\\n\\n      return findExpr(sliced, n, expr + '0');\\n\\n    }\\n\\n    results = results.concat(\\n\\n      findExpr(sliced, n, expr + '+0'),\\n\\n      findExpr(sliced, n, expr + '-0'),\\n\\n      findExpr(sliced, n, expr + '*0'),\\n\\n    );\\n\\n    return results;\\n\\n  }\\n\\n\\n  var maxLength = s.length;\\n\\n  var ops = [];\\n\\n  if (expr.length == 0) {\\n\\n    ops = ['', '-'];\\n\\n  } else {\\n\\n    ops = ['-', '+', '*'];\\n\\n  }\\n\\n  for (var op of ops) {\\n\\n    for (var i = 1; i <= maxLength; i++) {\\n\\n      results = results.concat(\\n\\n        findExpr(s.slice(i), n, expr + op + s.slice(0, i))\\n\\n      );\\n\\n    }\\n\\n  }\\n\\n  return results;\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction mergeOverlappingIntervals(ns, data) {\\n\\n  var intervals = data.slice();\\n\\n  for (var i = 0; i < intervals.length; i++) {\\n\\n    for (var j = i + 1; j < intervals.length;) {\\n\\n      var merged = mergeInterval(intervals, intervals[j]);\\n\\n      if (merged !== null) {\\n\\n        intervals = merged;\\n\\n        intervals.splice(j, 1);\\n\\n        j = i + 1;\\n\\n      } else {\\n\\n        j++\\n\\n      }\\n\\n    }\\n\\n  }\\n\\n  intervals.sort((a, b) => a[0] - b[0]);\\n\\n  return intervals;\\n\\n}\\n\\n\\nfunction mergeInterval(a, b) {\\n\\n  if (a[1] < b[0] || a[0] > b[1]) {\\n\\n    return null;\\n\\n  }\\n\\n  return [Math.min(a[0], b[0]), Math.max(a[1], b[1])];\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction generateIpAddresses(ns, data) {\\n\\n  return parseIpNum(ns, data, []);\\n\\n}\\n\\n\\n/** @param {String} s\\n\\n * @Param {Array} parts**/\\n\\nfunction parseIpNum(ns, s, parts) {\\n\\n  if (parts.length == 4) {\\n\\n    if (s.length == 0) {\\n\\n      return [parts[0] + '.' + parts[1] + '.' + parts[2] + '.' + parts[3]];\\n\\n    } else {\\n\\n      return [];\\n\\n    }\\n\\n  }\\n\\n  if (s.length == 0) {\\n\\n    return [];\\n\\n  }\\n\\n  var results = [];\\n\\n  if (s.startsWith('0')) {\\n\\n    parts.push(0);\\n\\n    results = parseIpNum(ns, s.slice(1), parts);\\n\\n    parts.pop();\\n\\n    return results;\\n\\n  }\\n\\n  for (var i = 1; i <= 3 && i <= s.length; i++) {\\n\\n    var n = parseInt(s.slice(0, i));\\n\\n    if (n > 255) {\\n\\n      break;\\n\\n    }\\n\\n    parts.push(n);\\n\\n    results = results.concat(parseIpNum(ns, s.slice(i), parts));\\n\\n    parts.pop();\\n\\n  }\\n\\n  return results;\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction uniquePathInGrid2(ns, data) {\\n\\n  var maxY = data.length;\\n\\n  var maxX = data[0].length;\\n\\n  var c = Array(maxY);\\n\\n  for (var y = 0; y < maxY; y++) {\\n\\n    var row = data[y];\\n\\n    c[y] = Array(maxX);\\n\\n    for (var x = 0; x < row.length; x++) {\\n\\n      var s = 0;\\n\\n      if (row[x] == 0) {\\n\\n        if (x == 0 && y == 0) {\\n\\n          s = 1;\\n\\n        }\\n\\n        if (y > 0) {\\n\\n          s += c[y - 1][x];\\n\\n        }\\n\\n        if (x > 0) {\\n\\n          s += c[y][x - 1];\\n\\n        }\\n\\n      }\\n\\n      c[y][x] = s;\\n\\n    }\\n\\n  }\\n\\n  return c[maxY - 1][maxX - 1];\\n\\n}\\n\\n\\nfunction countPathInGrid(data, x, y) {\\n\\n  var obstacle = data[y][x];\\n\\n  if (obstacle == 1) {\\n\\n    return 0;\\n\\n  }\\n\\n  if (x == data[y].length - 1 && y == data.length) {\\n\\n    return 1;\\n\\n  }\\n\\n  var count = 0;\\n\\n  if (x < data[y].length - 1) {\\n\\n    count += countPathInGrid(data, x + 1, y);\\n\\n  }\\n\\n  if (y < data.length - 1) {\\n\\n    count += countPathInGrid(data, x, y + 1);\\n\\n  }\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction subarrayWithMaxSum(ns, data) {\\n\\n  return findMaxSubArraySum(data);\\n\\n}\\n\\n\\nfunction findMaxSubArraySum(arr) {\\n\\n  if (arr.length == 0) {\\n\\n    return 0;\\n\\n  }\\n\\n  if (arr.length == 1) {\\n\\n    return arr[0];\\n\\n  }\\n\\n  var sum = findMaxSubArraySum(arr.slice(1));\\n\\n  var s = 0;\\n\\n  for (var i = 0; i < arr.length; i++) {\\n\\n    s += arr;\\n\\n    if (s > sum) {\\n\\n      sum = s;\\n\\n    }\\n\\n  }\\n\\n  return sum;\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction arrayJumpingGame(ns, data) {\\n\\n  return findJump(data, 0);\\n\\n}\\n\\n\\nfunction findJump(data, pos) {\\n\\n  var maxJump = data[pos];\\n\\n  if (pos + maxJump >= data.length - 1) {\\n\\n    return 1;\\n\\n  }\\n\\n  for (var i = 1; i <= maxJump; i++) {\\n\\n    if (findJump(data, pos + i) == 1) {\\n\\n      return 1;\\n\\n    }\\n\\n  }\\n\\n  return 0;\\n\\n}\\n\\n\\n\\n\\n// Script to Solve Coding Contracts (Part 2)\\n/** @param {NS} ns **/\\n\\nfunction algorithmicStockTrader1(ns, data) {\\n\\n  if (data.length == 0) {\\n\\n    return 0;\\n\\n  }\\n\\n  var chances = findProfitChances(data);\\n\\n  var mergedChances = mergeChances(chances);\\n\\n  var profit = Math.max(...(mergedChances.map(cs => Math.max(...(cs.map(c => c[1] - c[0]))))));\\n\\n  return profit;\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction algorithmicStockTrader2(ns, data) {\\n\\n  if (data.length == 0) {\\n\\n    return 0;\\n\\n  }\\n\\n  var chances = findProfitChances(data);\\n\\n  var profit = chances.map(c => c[1] - c[0]).reduce((a, b) => a + b, 0);\\n\\n  return profit;\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction algorithmicStockTrader3(ns, data) {\\n\\n  if (data.length == 0) {\\n\\n    return 0;\\n\\n  }\\n\\n  var chances = findProfitChances(data);\\n\\n  // var mergedChances = mergeChances(chances);\\n\\n  // var mp = mergedChances.map(cs=>cs.map(c=>c[1]-c[0]));\\n\\n  return maxProfit(chances, 2);\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction algorithmicStockTrader4(ns, data) {\\n\\n  if (data[1].length == 0) {\\n\\n    return 0;\\n\\n  }\\n\\n  var chances = findProfitChances(data[1]);\\n\\n  // var mergedChances = mergeChances(chances);\\n\\n  // var mp = mergedChances.map(cs=>cs.map(c=>c[1]-c[0]));\\n\\n  return maxProfit(chances, data[0]);\\n\\n}\\n\\n\\nfunction maxProfit(chances, k) {\\n\\n  if (k == 0 || chances.length == 0) {\\n\\n    return 0;\\n\\n  }\\n\\n  var c0 = chances[0];\\n\\n  if (chances.length == 1) {\\n\\n    return c0[1] - c0[0];\\n\\n  }\\n\\n  var profit = maxProfit(chances.slice(1), k);\\n\\n  for (var i = 0; i < chances.length; i++) {\\n\\n    var p = chances[1] - chances[0][0] + maxProfit(chances.slice(i + 1), k - 1);\\n\\n    if (p > profit) {\\n\\n      profit = p;\\n\\n    }\\n\\n  }\\n\\n  return profit;\\n\\n}\\n\\n\\nfunction findProfitChances(data) {\\n\\n  var start = data[0];\\n\\n  var end = start;\\n\\n  var chances = [];\\n\\n  for (var i = 1; i < data.length; i++) {\\n\\n    var now = data;\\n\\n    if (end < now) {\\n\\n      end = now;\\n\\n    }\\n\\n    if (end > now) {\\n\\n      if (end > start) {\\n\\n        chances.push([start, end]);\\n\\n      }\\n\\n      start = now;\\n\\n      end = start;\\n\\n    }\\n\\n  }\\n\\n  if (end > start) {\\n\\n    chances.push([start, end]);\\n\\n  }\\n\\n  return chances;\\n\\n}\\n\\n\\nfunction mergeChances(chances) {\\n\\n  var n = chances.length;\\n\\n  var mc = [];\\n\\n  var cs = chances.slice();\\n\\n  mc.push(cs);\\n\\n  while (cs.length > 1) {\\n\\n    var ncs = [];\\n\\n    for (var i = 0; i < cs.length - 1; i++) {\\n\\n      ncs.push([cs[i][0], cs[i + 1][1]]);\\n\\n    }\\n\\n    mc.push(ncs);\\n\\n    cs = ncs;\\n\\n  }\\n\\n  mc.reverse();\\n\\n  return mc;\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction minPathSumInTriangle(ns, data) {\\n\\n  var length = data.length;\\n\\n  if (length == 1) {\\n\\n    return data[0][0];\\n\\n  }\\n\\n  var r = data[length - 1].slice();\\n\\n  for (var i = length - 2; i >= 0; i--) {\\n\\n    var row = data;\\n\\n    var nr = [];\\n\\n    for (var j = 0; j < i + 1; j++) {\\n\\n      nr.push(Math.min(r[j] + row[j], r[j + 1] + row[j]));\\n\\n    }\\n\\n    r = nr;\\n\\n  }\\n\\n  return r[0];\\n\\n}\\n\\n\\n/** @param {NS} ns **/\\n\\nfunction largestPrimeFactor(ns, data) {\\n\\n  var factor = 0;\\n\\n  var k = data;\\n\\n  var rk = Math.sqrt(k);\\n\\n  for (var i = 2; i < rk;) {\\n\\n    if (k % i == 0) {\\n\\n      factor = i;\\n\\n      k /= i;\\n\\n      rk = Math.sqrt(k);\\n\\n    } else {\\n\\n      i++;\\n\\n    }\\n\\n  }\\n\\n  if (k > factor) {\\n\\n    factor = k;\\n\\n  }\\n\\n  return factor;\\n\\n}\\n\\n\\nfunction uniquePathInGrid1(ns, data) {\\n\\n  var a = data[0];\\n\\n  var b = data[1];\\n\\n  if (a > b) {\\n\\n    a = data[1];\\n\\n    b = data[0];\\n\\n  }\\n\\n  a = a - 1;\\n\\n  b = b - 1;\\n\\n  var n = a + b;\\n\\n\\n  var c = 1;\\n\\n  for (var i = 1; i <= a; i++) {\\n\\n    c = c * n / i;\\n\\n    n--;\\n\\n  }\\n\\n  return c;\\n\\n}\\n\\n\\nfunction spiralizeMatrix(ns, data) {\\n\\n  var s = 0;\\n\\n  var m = [];\\n\\n  for (var i = 0; i < data.length; i++) {\\n\\n    m.push(data.slice());\\n\\n  }\\n\\n  var a = [];\\n\\n  while (m.length > 0 && m[0].length > 0) {\\n    switch (s) {\\n      case 0:\\n        a = a.concat(m[0]);\\n        m = m.slice(1);\\n        s = 1;\\n        break;\\n      case 1:\\n        for (var i = 0; i < m.length; i++) {\\n          a.push(m.pop());\\n        }\\n        s = 2;\\n        break;\\n      case 2:\\n        a = a.concat(m.pop().reverse());\\n        s = 3;\\n        break;\\n      case 3:\\n        for (let i = m.length - 1; i >= 0; i--) {\\n          a.push(m[0]);\\n          m = m.slice(1);\\n        }\\n        s = 0;\\n        break;\\n    }\\n  }\\n\\n  return a;\\n\\n}\\n\\n\\nfunction totalWayToSum(ns, data) {\\n\\n  var cache = {};\\n\\n  var n = data;\\n\\n  return twts(n, n, cache) - 1;\\n\\n}\\n\\n\\nfunction twts(limit, n, cache) {\\n\\n  if (n < 1) {\\n\\n    return 1;\\n\\n  }\\n\\n  if (limit == 1) {\\n\\n    return 1;\\n\\n  }\\n\\n  if (n < limit) {\\n    return twts(n, n, cache);\\n  }\\n\\n  if (n in cache) {\\n    var c = cache[n];\\n    if (limit in c) {\\n      return c[limit];\\n    }\\n  }\\n\\n  var s = 0;\\n\\n  for (var i = 1; i <= limit; i++) {\\n    s += twts(i, n - i, cache);\\n  }\\n\\n  if (!(n in cache)) {\\n    cache[n] = {};\\n  }\\n  cache[n][limit] = s; return s;\\n}\",\"filename\":\"/contracts/solve-contract.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"solve-contract.js\",\"url\":\"blob:file:///2cd6a0ca-c561-44f8-93c0-ae9a63d0a286\",\"moduleSequenceNumber\":4907}],\"dependents\":[],\"ramUsage\":26.6,\"server\":\"home\",\"moduleSequenceNumber\":401,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getDescription\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { solveContract } from \\\"contracts/solve-contract.js\\\";\\n\\n/** @param {NS} ns **/\\n\\nexport async function main(ns) {\\n  while (true) {\\n    await dfs(ns, null, \\\"home\\\", trySolveContracts, 0);\\n    await ns.sleep(1000);\\n  }\\n}\\n\\n/** @param {NS} ns **/\\n\\nasync function dfs(ns, parent, current, f, depth, ...args) {\\n  var hosts = ns.scan(current);\\n\\n  if (parent != null) {\\n    const index = hosts.indexOf(parent);\\n\\n    if (index > -1) {\\n      hosts.splice(index, 1);\\n    }\\n  }\\n\\n  await f(ns, current, depth, ...args);\\n\\n  for (let index = 0, len = hosts.length; index < len; ++index) {\\n    const host = hosts[index];\\n\\n    await dfs(ns, current, host, f, depth + 1, ...args);\\n  }\\n}\\n\\n/** @param {NS} ns **/\\n\\nasync function trySolveContracts(ns, host, depth) {\\n  var contracts = ns.ls(host, \\\"cct\\\");\\n\\n  for (var contract of contracts) {\\n    solveContract(ns, host, contract, 0);\\n  }\\n}\",\"filename\":\"/contracts/contract-auto-solver.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/contracts/solve-contract.js\",\"url\":\"blob:file:///82635338-02d3-487b-9c4f-01143f77e024\",\"moduleSequenceNumber\":66},{\"filename\":\"/contracts/contract-auto-solver.js\",\"url\":\"blob:file:///846881be-3ae5-4c65-9d6c-ee844c10f761\",\"moduleSequenceNumber\":2737}],\"dependents\":[],\"ramUsage\":27,\"server\":\"home\",\"moduleSequenceNumber\":402,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getDescription\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await purchaseServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function purchaseServer(ns, ram = 1024) {\\n    let numServers = ns.getPurchasedServers().length;\\n\\n    while (numServers < ns.getPurchasedServerLimit()) {\\n        // Check if we have enough money to purchase a server\\n        // only use 1% of cash for purchases\\n        if (ns.getServerMoneyAvailable(\\\"home\\\") * 0.01 > ns.getPurchasedServerCost(ram )) {\\n            // If we have enough money, then:\\n            //  1. Purchase the server\\n            //  2. Copy our hacking script onto the newly-purchased server\\n            //  3. Run our hacking script on the newly-purchased server with 3 threads\\n            //  4. Increment our iterator to indicate that we've bought a new server\\n            var hostname = ns.purchaseServer(\\\"pserv-\\\" + numServers, ram);\\n            numServers++;\\n        }\\n        await ns.sleep(1000);\\n    }\\n}\",\"filename\":\"/server-expansion/daemon.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/server-expansion/daemon.js\",\"url\":\"blob:file:///703e58d4-7327-4643-9dca-028e1ea73f4b\",\"moduleSequenceNumber\":136178}],\"dependents\":[],\"ramUsage\":6.5,\"server\":\"home\",\"moduleSequenceNumber\":136178,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @module: crawler */\\n\\n/**\\n * Crawler module - tools to aid in crawling through nodes.\\n */\\n\\n/**\\n * crawlCallback - function called for each appropriate node.\\n * @callback crawlCallback\\n * @param {NS} ns - the ns library.\\n * @param {string} current - the current node being worked on.\\n * @param {number} depth - the current depth of the search.\\n * @param {...*} args - any other arguments you want.\\n */\\n\\n/** \\n * Crawl through the node tree running the provided function\\n * @param {NS} ns - the ns library.\\n * @param {string} parent - the parent node (usually null).\\n * @param {string} current - the current node (can be null for the running host).\\n * @param {crawlCallback} f - the function to call on appropriate nodes.\\n * @param {number} depth - the depth that we are at (usually starts at 0).\\n * @param {NodeType} mode - The type of node we will execute the function for.\\n * @param {...*} args - any arguments to be passed to the callback\\n */\\n\\nexport async function crawl(ns, parent, current, f, depth, mode, ...args) {\\n    ns.tprint(`Crawling through ${mode} nodes`);\\n    // Get the list of hosts for the current node\\n    /** @type {string[]} */\\n    let hosts;\\n    if (current !== null) {\\n        hosts = ns.scan(current);\\n    } else {\\n        hosts = ns.scan();\\n    }\\n\\n    // if there is a parent remove it from the list of hosts\\n    if (parent != null) {\\n        const index = hosts.indexOf(parent);\\n\\n        if (index > -1) {\\n            hosts.splice(index, 1);\\n        }\\n    }\\n\\n    /** @type {NodeType[]} */\\n    let nodeTypes = getTypes(ns, current);\\n\\n    switch (mode) {\\n        case NodeType.Crackable:\\n            if (nodeTypes.includes(NodeType.Crackable)) {\\n                ns.tprint(`Crackable node ${current} found!`)\\n                await f(ns, current, depth, ...args);\\n            }\\n            break;\\n        case NodeType.Hackable:\\n            if (nodeTypes.includes(NodeType.Hackable)) {\\n                ns.tprint(`Hackable node ${current} found!`)\\n                await f(ns, current, depth, ...args);\\n            }\\n            break;\\n        case NodeType.Runnable:\\n            if (nodeTypes.includes(NodeType.Runnable)) {\\n                ns.tprint(`Runnable node ${current} found!`)\\n                await f(ns, current, depth, ...args);\\n            }\\n            break;\\n    }\\n\\n    for (let host of hosts) {\\n        await crawl(ns, current, host, f, depth + 1, mode, ...args);\\n        await ns.sleep(1000);\\n    }\\n}\\n\\n/**\\n * Analyze a node and get the node types it belongs to.\\n * @function getTypes\\n * @param {NS} ns - the ns library used to analyze the node\\n * @param {string} name - the name of the node to analyze.\\n * @returns {NodeType[]} - the node types that the node can be classified as.\\n */\\nfunction getTypes(ns, name) {\\n    /** @type {NodeType[]} */\\n    let types = [];\\n    /** @type {number} */\\n    let openablePorts = getOpenablePorts(ns);\\n\\n    if (!ns.serverExists(name)) return [NodeType.Invalid];\\n\\n    if (ns.hasRootAccess(name)) types.push(NodeType.Runnable);\\n    else if (ns.getServerNumPortsRequired(name) <= openablePorts) types.push(NodeType.Crackable);\\n\\n    if (ns.getServerRequiredHackingLevel(name) <= ns.getHackingLevel() && ns.hasRootAccess(name)) types.push(NodeType.Hackable);\\n\\n    return types;\\n}\\n\\n/**\\n * Get the number of ports the user can open.\\n * @param {NS} ns - the ns library.\\n * @returns {number} - the number of ports that can be opened by the user.\\n */\\nexport function getOpenablePorts(ns) {\\n    /** @type {number} */\\n    let result = 0;\\n    if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n        result++;\\n    }\\n    if (ns.fileExists(\\\"FTPCrack.exe\\\", \\\"home\\\")) {\\n        result++;\\n    }\\n    if (ns.fileExists(\\\"relaySMTP.exe\\\", \\\"home\\\")) {\\n        result++;\\n    }\\n    if (ns.fileExists(\\\"HTTPWorm.exe\\\", \\\"home\\\")) {\\n        result++;\\n    }\\n    if (ns.fileExists(\\\"SQLInject.exe\\\", \\\"home\\\")) {\\n        result++;\\n    }\\n    return result;\\n}\\n\\n/** Enumeration Class representing the type of node you want \\n * @enum {string}\\n*/\\nexport const NodeType = {\\n    /**\\n     * A Hackable node is one that can be hacked or backdoored.\\n     * @static\\n     */\\n    Hackable: 'Hackable',\\n    /**\\n     * A Crackable node is one that needs NUKEd and has the proper number of ports openned.\\n     * @static\\n     */\\n    Crackable: 'Crackable',\\n    /**\\n     * A Runnable node is one that has already been NUKEd.\\n     * We have root access and can run scripts on the server.\\n     * @static\\n     */\\n    Runnable: 'Runnable',\\n\\n    /**\\n     * An Invalid node is not a node at all but a string that thinks it's a node.\\n     * @static\\n     */\\n    Invalid: 'Invalid',\\n};\",\"filename\":\"/archive/crawler.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/archive/crawler.js\",\"url\":\"blob:file:///bb9db0bd-a8ea-4cb0-b03e-288b0fedeff7\",\"moduleSequenceNumber\":2125}],\"dependents\":[],\"ramUsage\":2.3,\"server\":\"home\",\"moduleSequenceNumber\":404,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    // the target server\\r\\n    const target = ns.args[0].toString();\\r\\n    // The files to copy to each server node\\r\\n    const files = [\\r\\n        \\\"/basic/hacknshare.js\\\",\\r\\n        \\\"/basic/grownshare.js\\\",\\r\\n        \\\"/basic/hack.js\\\",\\r\\n        \\\"/basic/backdoor.js\\\",\\r\\n    ];\\r\\n    await ns.scp(files, \\\"home\\\", target);\\r\\n}\\r\\n\",\"filename\":\"/basic/cpall.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/cpall.js\",\"url\":\"blob:file:///afe37736-7b62-4962-88be-6b606a7d02c4\",\"moduleSequenceNumber\":101707}],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"home\",\"moduleSequenceNumber\":101707,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @module crawler */\\nimport { crawl, NodeType } from 'crawler.js';\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    // should we run the share version?\\n    const flags = ns.flags([\\n        ['share', false],\\n    ]);\\n    // const shouldShare = ns.args[0] === \\\"--share\\\";\\n    const shouldShare = flags.share\\n    // SANITY CHECK\\n    if (shouldShare) {\\n        ns.tprint('Sharing flag detected!');\\n    } else {\\n        ns.tprint('Sharing flag not detected!');\\n    }\\n    // SANITY CHECK\\n\\n    const scriptName = shouldShare ? \\\"hacknshare.js\\\" : \\\"hack.js\\\";\\n\\n    /** @param {NS} ns **/\\n    function crack(ns, server) {\\n        ns.run('nuke.js', 1, server);\\n    }\\n\\n    await crawl(ns, null, null, crack, 0, NodeType.Crackable);\\n}\",\"filename\":\"/archive/crackall.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"crawler.js\",\"url\":\"blob:file:///a1ea79f5-6380-4fa5-b605-4bdb8964fc93\",\"moduleSequenceNumber\":5829},{\"filename\":\"crackall.js\",\"url\":\"blob:file:///981b77cc-3e92-46cd-b75d-43480fb41af5\",\"moduleSequenceNumber\":7165}],\"dependents\":[],\"ramUsage\":5.7,\"server\":\"home\",\"moduleSequenceNumber\":406,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from \\\"lib/getall\\\";\\r\\nexport async function main(ns) {\\r\\n    const servers = await getAllServers(ns);\\r\\n    for (const server of servers) {\\r\\n        ns.tprint(server);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/advanced/listall.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/lib/getall.js\",\"url\":\"blob:file:///ff345758-e473-4350-a000-22bd670108b0\",\"moduleSequenceNumber\":210},{\"filename\":\"/advanced/listall.js\",\"url\":\"blob:file:///9a790ff5-fe0b-4924-b192-00f8e597212a\",\"moduleSequenceNumber\":23608}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":109831,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    await getAllServers(ns);\\r\\n}\\r\\n/** @param {NS} ns **/\\r\\nexport async function getAllServers(ns) {\\r\\n    let allServers = [];\\r\\n    async function getServers(host = undefined) {\\r\\n        let localServers = ns.scan(host);\\r\\n        localServers = localServers.filter((s) => !allServers.includes(s));\\r\\n        if (localServers.length === 0)\\r\\n            return;\\r\\n        for (let server of localServers) {\\r\\n            allServers.push(server);\\r\\n            await getServers(server);\\r\\n        }\\r\\n    }\\r\\n    await getServers();\\r\\n    // This lists all contracts.\\r\\n    /*\\r\\n      for (let server of allServers) {\\r\\n          let files = ns.ls(server, 'cct');\\r\\n          if (files.length === 0) return;\\r\\n          ns.tprint(\\\"==================================\\\");\\r\\n          ns.tprint(`Files on ${server}:`);\\r\\n          for (let file of files) {\\r\\n              ns.tprint(`\\\\t${file}`);\\r\\n          }\\r\\n          ns.tprint(\\\"==================================\\\");\\r\\n      }\\r\\n      */\\r\\n    ns.tprint(`${allServers.length} servers found!`);\\r\\n    return allServers;\\r\\n}\\r\\n\",\"filename\":\"/lib/getall.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":100389,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from \\\"lib/getall\\\";\\r\\nconst minCash = 100;\\r\\nexport async function main(ns) {\\r\\n    const flags = ns.flags([[\\\"share\\\", false]]);\\r\\n    await crawl(ns, flags.share);\\r\\n}\\r\\nasync function crawl(ns, shouldShare) {\\r\\n    // Always share!\\r\\n    shouldShare = true;\\r\\n    const hackingLevel = ns.getHackingLevel();\\r\\n    const servers = await getAllServers(ns);\\r\\n    const hackableServers = servers.filter((s) => ns.getServerRequiredHackingLevel(s) <= hackingLevel &&\\r\\n        ns.hasRootAccess(s) &&\\r\\n        ns.getServerMaxMoney(s) >= minCash);\\r\\n    const runnableServers = servers.filter((s) => ns.hasRootAccess(s));\\r\\n    const scriptName = shouldShare ? \\\"/basic/hacknshare.js\\\" : \\\"/basic/hack.js\\\";\\r\\n    for (const host of runnableServers) {\\r\\n        // Don't hog the home pc\\r\\n        // if (host === 'home') continue;\\r\\n        ns.run(\\\"/basic/cpall.js\\\", 1, host);\\r\\n        if (ns.getServerRequiredHackingLevel(host) < hackingLevel) {\\r\\n            // Requires source File\\r\\n            // ns.exec('basic/backdoor.js', host);\\r\\n        }\\r\\n        for (let target of hackableServers) {\\r\\n            if (ns.isRunning(scriptName, host, target)) {\\r\\n                continue;\\r\\n            }\\r\\n            // ns.tprint(`Hacking ${target} from ${host}`)\\r\\n            if (!ns.exec(scriptName, host, 1, target))\\r\\n                break;\\r\\n            await ns.sleep(1);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/advanced/hackall.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/lib/getall.js\",\"url\":\"blob:file:///b84a2486-78d3-4e42-90b5-3092e7a06935\",\"moduleSequenceNumber\":100389},{\"filename\":\"/advanced/hackall.js\",\"url\":\"blob:file:///f0793444-13dd-4b6e-a383-676356dc141d\",\"moduleSequenceNumber\":109829}],\"dependents\":[],\"ramUsage\":6.9,\"server\":\"home\",\"moduleSequenceNumber\":109829,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from \\\"lib/getall.js\\\";\\r\\n\\r\\n/** @param {NS} ns **/\\r\\nexport async function main(ns) {}\\r\\n\",\"filename\":\"/advanced/crackall.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/lib/getall.js\",\"url\":\"blob:file:///df4eadde-6c77-48e6-aeef-2ce5f587933d\",\"moduleSequenceNumber\":100389},{\"filename\":\"/advanced/crackall.js\",\"url\":\"blob:file:///95376b27-53bf-4c0d-b3bd-25befb376522\",\"moduleSequenceNumber\":101640}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":101640,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const minuteInterval = 5;\\r\\nconst nukeScript = \\\"/advanced/nukeall.js\\\";\\r\\nconst hackScript = \\\"/advanced/hackall.js\\\";\\r\\nexport async function main(ns) {\\r\\n    while (true) {\\r\\n        ns.run(nukeScript);\\r\\n        while (ns.isRunning(nukeScript, \\\"home\\\"))\\r\\n            await ns.sleep(1);\\r\\n        ns.run(hackScript, 1, \\\"--share\\\");\\r\\n        await ns.sleep(minuteInterval * 60 * 1000);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/advanced/daemon.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/advanced/daemon.js\",\"url\":\"blob:file:///6f2e8454-5916-4eb3-8f94-64db1f98df72\",\"moduleSequenceNumber\":136176}],\"dependents\":[],\"ramUsage\":2.7,\"server\":\"home\",\"moduleSequenceNumber\":136176,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const allowancePercentage = 0.01;\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    while (true) {\\n        for (let i = 0; i < ns.hacknet.numNodes(); i++) {\\n            let gain = [0, 0, 0];\\n            let currentCash = ns.getServerMoneyAvailable('home');\\n            currentCash *= allowancePercentage;\\n\\n            if (ns.hacknet.getPurchaseNodeCost() <= currentCash) {\\n                ns.hacknet.purchaseNode();\\n                continue;\\n            }\\n\\n            const node = ns.hacknet.getNodeStats(i);\\n\\n            if (node.level < 200) {\\n                gain[0] = ((node.level + 1) * 1.6) * Math.pow(1.035, (node.ram - 1)) * ((node.cores + 5) / 6) / ns.hacknet.getLevelUpgradeCost(i,1);\\n            } else {\\n                gain[0] = 0;\\n            }\\n\\n            if (node.ram < 64) {\\n                gain[1] = (node.level * 1.6) * Math.pow(1.035, (node.ram * 2) - 1) * ((node.cores + 5) / 6) / ns.hacknet.getRamUpgradeCost(i, 1);\\n            } else {\\n                gain[1] = 0;\\n            }\\n\\n            if (node.cores < 16) {\\n                gain[2] = (node.level * 1.6) * Math.pow(1.035, node.ram - 1) * ((node.cores + 6) / 6) / ns.hacknet.getCoreUpgradeCost(i, 1);\\n            } else {\\n                gain[2] = 0;\\n            }\\n            \\n            ns.print(`Level Upgrade: ${gain[0]}`);\\n            ns.print(`Ram Upgrade: ${gain[1]}`);\\n            ns.print(`Core Upgrade: ${gain[2]}`);\\n\\n            let topgain = 0;\\n\\n            for (let g of gain) {\\n                if (g > topgain) {\\n                    topgain = g;\\n                }\\n            }\\n\\n            if (topgain === 0) {\\n                ns.print(`All Gains maxed on Node ${i}`);\\n                break;\\n            }\\n\\n            if (topgain === gain[0] && ns.hacknet.getLevelUpgradeCost(i, 1) < currentCash) {\\n                ns.print(`Upgrading Level on Node ${i}`);\\n                ns.hacknet.upgradeLevel(i, 1);\\n            }\\n            if (topgain === gain[1] && ns.hacknet.getRamUpgradeCost(i, 1) < currentCash) {\\n                ns.print(`Upgrading Ram on Node ${i}`);\\n                ns.hacknet.upgradeRam(i, 1);\\n            }\\n            if (topgain === gain[2] && ns.hacknet.getCoreUpgradeCost(i, 1) < currentCash) {\\n                ns.print(`Upgrading Cores on Node ${i}`);\\n                ns.hacknet.upgradeCore(i, 1);\\n            } else {\\n                ns.print(`Cannot afford upgrades on Node ${i}`);\\n            }\\n        }\\n        await ns.sleep(1000);\\n    }\\n\\n}\",\"filename\":\"/hacknet/daemon.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/hacknet/daemon.js\",\"url\":\"blob:file:///7fe2d4ec-db10-4110-a259-b250ba8fb2cb\",\"moduleSequenceNumber\":789}],\"dependents\":[],\"ramUsage\":5.7,\"server\":\"home\",\"moduleSequenceNumber\":789,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { solveContract } from \\\"contracts/solve-contract.js\\\";\\n\\n/** @param {NS} ns **/\\n\\nexport async function main(ns) {\\n  while (true) {\\n    await dfs(ns, null, \\\"home\\\", listContract, 0);\\n    await ns.sleep(1000);\\n  }\\n}\\n\\n/** @param {NS} ns **/\\n\\nasync function dfs(ns, parent, current, f, depth, ...args) {\\n  var hosts = ns.scan(current);\\n\\n  if (parent != null) {\\n    const index = hosts.indexOf(parent);\\n\\n    if (index > -1) {\\n      hosts.splice(index, 1);\\n    }\\n  }\\n\\n  await f(ns, current, depth, ...args);\\n\\n  for (let index = 0, len = hosts.length; index < len; ++index) {\\n    const host = hosts[index];\\n\\n    await dfs(ns, current, host, f, depth + 1, ...args);\\n  }\\n}\\n\\n/** @param {NS} ns **/\\n\\nasync function trySolveContracts(ns, host, depth) {\\n  var contracts = ns.ls(host, \\\"cct\\\");\\n\\n  for (var contract of contracts) {\\n    solveContract(ns, host, contract, 0);\\n  }\\n}\\n\\nasync function listContract(ns, host, depth) {\\n  var contracts = ns.ls(host, \\\"cct\\\");\\n\\n  for (var contract of contracts) {\\n    ns.tprint(`Contract found on ${host}: ${depth} levels in.`)\\n  }\\n}\",\"filename\":\"/contracts/contract-finder.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/contracts/solve-contract.js\",\"url\":\"blob:file:///1a49d6e6-529f-4bc2-8111-fa9b7b854d1b\",\"moduleSequenceNumber\":66},{\"filename\":\"/contracts/contract-finder.js\",\"url\":\"blob:file:///7f2b409b-53e8-4105-92bf-32454f38ea55\",\"moduleSequenceNumber\":136}],\"dependents\":[],\"ramUsage\":27,\"server\":\"home\",\"moduleSequenceNumber\":413,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getDescription\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from \\\"lib/getall.js\\\";\\r\\nimport * as solvers from \\\"contracts/solvers/index.js\\\";\\r\\nconst minuteInterval = 2;\\r\\n/** @param {NS} ns **/\\r\\nexport async function main(ns) {\\r\\n    while (true) {\\r\\n        // await dfs(ns, null, \\\"home\\\", trySolveContracts, 0);\\r\\n        const contracts = (await getAllServers(ns)).flatMap((server) => {\\r\\n            const onServer = ns.ls(server, \\\".cct\\\").map((contract) => {\\r\\n                const type = ns.codingcontract.getContractType(contract, server);\\r\\n                const data = ns.codingcontract.getData(contract, server);\\r\\n                const didSolve = solve(type, data, server, contract, ns);\\r\\n                return `${server} - ${contract} - ${type} - ${didSolve || \\\"FAILED!\\\"}`;\\r\\n            });\\r\\n            return onServer;\\r\\n        });\\r\\n        ns.tprint(`Found ${contracts.length} contracts`);\\r\\n        contracts.forEach((contract) => void ns.tprint(contract));\\r\\n        await ns.sleep(minuteInterval * 60 * 1000);\\r\\n    }\\r\\n}\\r\\nfunction solve(type, data, server, contract, ns) {\\r\\n    let solution;\\r\\n    ns.tprint(type);\\r\\n    switch (type) {\\r\\n        case \\\"Algorithmic Stock Trader I\\\":\\r\\n            solution = maxProfit([1, data]);\\r\\n            break;\\r\\n        case \\\"Algorithmic Stock Trader II\\\":\\r\\n            solution = maxProfit([Math.ceil(data.length / 2), data]);\\r\\n            break;\\r\\n        case \\\"Algorithmic Stock Trader III\\\":\\r\\n            solution = maxProfit([2, data]);\\r\\n            break;\\r\\n        case \\\"Algorithmic Stock Trader IV\\\":\\r\\n            solution = maxProfit(data);\\r\\n            break;\\r\\n        case \\\"Minimum Path Sum in a Triangle\\\":\\r\\n            solution = solveTriangleSum(data, ns);\\r\\n            break;\\r\\n        case \\\"Unique Paths in a Grid I\\\":\\r\\n            solution = uniquePathsI(data);\\r\\n            break;\\r\\n        case \\\"Unique Paths in a Grid II\\\":\\r\\n            solution = uniquePathsII(data);\\r\\n            break;\\r\\n        case \\\"Generate IP Addresses\\\":\\r\\n            solution = generateIps(data);\\r\\n            break;\\r\\n        case \\\"Find Largest Prime Factor\\\":\\r\\n            solution = factor(data);\\r\\n            break;\\r\\n        case \\\"Spiralize Matrix\\\":\\r\\n            solution = spiral(data);\\r\\n            break;\\r\\n        case \\\"Merge Overlapping Intervals\\\":\\r\\n            solution = mergeOverlap(data);\\r\\n            break;\\r\\n        case \\\"Subarray with Maximum Sum\\\":\\r\\n            solution = solveSum(data);\\r\\n            break;\\r\\n        case \\\"Array Jumping Game\\\":\\r\\n            solution = solvers.solveJump(data);\\r\\n            break;\\r\\n        case \\\"Total Ways to Sum\\\":\\r\\n            solution = solvers.totalWaysToSum(data);\\r\\n            break;\\r\\n        default:\\r\\n            ns.tprint(`Unknown contract type: ${type}`);\\r\\n    }\\r\\n    if (solution != [])\\r\\n        ns.tprint(`Submitting solution: ${solution} to ${type} - ${contract}`);\\r\\n    return solution != []\\r\\n        ? ns.codingcontract.attempt(solution, contract, server, {\\r\\n            returnReward: true,\\r\\n        })\\r\\n        : \\\"\\\";\\r\\n}\\r\\n//ALGORITHMIC STOCK TRADER\\r\\nfunction maxProfit(arrayData) {\\r\\n    let i, j, k;\\r\\n    let maxTrades = arrayData[0];\\r\\n    let stockPrices = arrayData[1];\\r\\n    // WHY?\\r\\n    let tempStr = \\\"[0\\\";\\r\\n    for (i = 0; i < stockPrices.length; i++) {\\r\\n        tempStr += \\\",0\\\";\\r\\n    }\\r\\n    tempStr += \\\"]\\\";\\r\\n    let tempArr = \\\"[\\\" + tempStr;\\r\\n    for (i = 0; i < maxTrades - 1; i++) {\\r\\n        tempArr += \\\",\\\" + tempStr;\\r\\n    }\\r\\n    tempArr += \\\"]\\\";\\r\\n    let highestProfit = JSON.parse(tempArr);\\r\\n    for (i = 0; i < maxTrades; i++) {\\r\\n        for (j = 0; j < stockPrices.length; j++) {\\r\\n            // Buy / Start\\r\\n            for (k = j; k < stockPrices.length; k++) {\\r\\n                // Sell / End\\r\\n                if (i > 0 && j > 0 && k > 0) {\\r\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i][k - 1], highestProfit[i - 1][j - 1] + stockPrices[k] - stockPrices[j]);\\r\\n                }\\r\\n                else if (i > 0 && j > 0) {\\r\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i - 1][j - 1] + stockPrices[k] - stockPrices[j]);\\r\\n                }\\r\\n                else if (i > 0 && k > 0) {\\r\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i][k - 1], stockPrices[k] - stockPrices[j]);\\r\\n                }\\r\\n                else if (j > 0 && k > 0) {\\r\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i][k - 1], stockPrices[k] - stockPrices[j]);\\r\\n                }\\r\\n                else {\\r\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], stockPrices[k] - stockPrices[j]);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    return highestProfit[maxTrades - 1][stockPrices.length - 1];\\r\\n}\\r\\n//SMALLEST TRIANGLE SUM\\r\\nfunction solveTriangleSum(arrayData, _ns) {\\r\\n    let triangle = arrayData;\\r\\n    let nextArray = [];\\r\\n    let previousArray = triangle[0];\\r\\n    for (let i = 1; i < triangle.length; i++) {\\r\\n        nextArray = [];\\r\\n        for (let j = 0; j < triangle[i].length; j++) {\\r\\n            if (j == 0) {\\r\\n                nextArray.push(previousArray[j] + triangle[i][j]);\\r\\n            }\\r\\n            else if (j == triangle[i].length - 1) {\\r\\n                nextArray.push(previousArray[j - 1] + triangle[i][j]);\\r\\n            }\\r\\n            else {\\r\\n                nextArray.push(Math.min(previousArray[j], previousArray[j - 1]) + triangle[i][j]);\\r\\n            }\\r\\n        }\\r\\n        previousArray = nextArray;\\r\\n    }\\r\\n    return Math.min.apply(null, nextArray);\\r\\n}\\r\\n//UNIQUE PATHS IN A GRID\\r\\nfunction uniquePathsI(grid) {\\r\\n    const rightMoves = grid[0] - 1;\\r\\n    const downMoves = grid[1] - 1;\\r\\n    return Math.round(factorialDivision(rightMoves + downMoves, rightMoves) / factorial(downMoves));\\r\\n}\\r\\nfunction factorial(n) {\\r\\n    return factorialDivision(n, 1);\\r\\n}\\r\\nfunction factorialDivision(n, d) {\\r\\n    if (n == 0 || n == 1 || n == d)\\r\\n        return 1;\\r\\n    return factorialDivision(n - 1, d) * n;\\r\\n}\\r\\nfunction uniquePathsII(grid, ignoreFirst = false, ignoreLast = false) {\\r\\n    const rightMoves = grid[0].length - 1;\\r\\n    const downMoves = grid.length - 1;\\r\\n    let totalPossiblePaths = Math.round(factorialDivision(rightMoves + downMoves, rightMoves) / factorial(downMoves));\\r\\n    for (let i = 0; i < grid.length; i++) {\\r\\n        for (let j = 0; j < grid[i].length; j++) {\\r\\n            if (grid[i][j] == 1 &&\\r\\n                (!ignoreFirst || i != 0 || j != 0) &&\\r\\n                (!ignoreLast || i != grid.length - 1 || j != grid[i].length - 1)) {\\r\\n                let newArray = [];\\r\\n                for (let k = i; k < grid.length; k++) {\\r\\n                    newArray.push(grid[k].slice(j, grid[i].length));\\r\\n                }\\r\\n                let removedPaths = uniquePathsII(newArray, true, ignoreLast);\\r\\n                removedPaths *= uniquePathsI([i + 1, j + 1]);\\r\\n                totalPossiblePaths -= removedPaths;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    return totalPossiblePaths;\\r\\n}\\r\\n//GENERATE IP ADDRESSES\\r\\nfunction generateIps(num) {\\r\\n    num = num.toString();\\r\\n    const length = num.length;\\r\\n    let ips = [];\\r\\n    for (let i = 1; i < length - 2; i++) {\\r\\n        for (let j = i + 1; j < length - 1; j++) {\\r\\n            for (let k = j + 1; k < length; k++) {\\r\\n                const ip = [\\r\\n                    num.slice(0, i),\\r\\n                    num.slice(i, j),\\r\\n                    num.slice(j, k),\\r\\n                    num.slice(k, num.length),\\r\\n                ];\\r\\n                let isValid = true;\\r\\n                ip.forEach((seg) => {\\r\\n                    isValid = isValid && isValidIpSegment(seg);\\r\\n                });\\r\\n                if (isValid)\\r\\n                    ips.push(ip.join(\\\".\\\"));\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    return ips;\\r\\n}\\r\\nfunction isValidIpSegment(segment) {\\r\\n    if (segment[0] == \\\"0\\\" && segment != \\\"0\\\")\\r\\n        return false;\\r\\n    segment = Number(segment);\\r\\n    if (segment < 0 || segment > 255)\\r\\n        return false;\\r\\n    return true;\\r\\n}\\r\\n//GREATEST FACTOR\\r\\nfunction factor(num) {\\r\\n    for (let div = 2; div <= Math.sqrt(num); div++) {\\r\\n        if (num % div != 0) {\\r\\n            continue;\\r\\n        }\\r\\n        num = num / div;\\r\\n        div = 1;\\r\\n    }\\r\\n    return num;\\r\\n}\\r\\n//SPIRALIZE Matrix\\r\\nfunction spiral(arr, accum = []) {\\r\\n    if (arr.length === 0 || arr[0].length === 0) {\\r\\n        return accum;\\r\\n    }\\r\\n    accum = accum.concat(arr.shift());\\r\\n    if (arr.length === 0 || arr[0].length === 0) {\\r\\n        return accum;\\r\\n    }\\r\\n    accum = accum.concat(column(arr, arr[0].length - 1));\\r\\n    if (arr.length === 0 || arr[0].length === 0) {\\r\\n        return accum;\\r\\n    }\\r\\n    accum = accum.concat(arr.pop().reverse());\\r\\n    if (arr.length === 0 || arr[0].length === 0) {\\r\\n        return accum;\\r\\n    }\\r\\n    accum = accum.concat(column(arr, 0).reverse());\\r\\n    if (arr.length === 0 || arr[0].length === 0) {\\r\\n        return accum;\\r\\n    }\\r\\n    return spiral(arr, accum);\\r\\n}\\r\\nfunction column(arr, index) {\\r\\n    let res = [];\\r\\n    for (let i = 0; i < arr.length; i++) {\\r\\n        const elm = arr[i].splice(index, 1)[0];\\r\\n        if (elm) {\\r\\n            res.push(elm);\\r\\n        }\\r\\n    }\\r\\n    return res;\\r\\n}\\r\\n// Merge Overlapping Intervals\\r\\nfunction mergeOverlap(intervals) {\\r\\n    intervals.sort(([minA], [minB]) => minA - minB);\\r\\n    for (let i = 0; i < intervals.length; i++) {\\r\\n        for (let j = i + 1; j < intervals.length; j++) {\\r\\n            const [min, max] = intervals[i];\\r\\n            const [laterMin, laterMax] = intervals[j];\\r\\n            if (laterMin <= max) {\\r\\n                const newMax = laterMax > max ? laterMax : max;\\r\\n                const newInterval = [min, newMax];\\r\\n                intervals[i] = newInterval;\\r\\n                intervals.splice(j, 1);\\r\\n                j = i;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    return intervals;\\r\\n}\\r\\nfunction solveSum(data) {\\r\\n    const arrLength = data.length;\\r\\n    let maxSum = -Infinity;\\r\\n    for (let i = 0; i < arrLength; i++) {\\r\\n        const sub = data.slice(0, i + 1);\\r\\n        for (let j = 0; j < sub.length; j++) {\\r\\n            const sub2 = sub.slice(j, sub.length);\\r\\n            // ns.tprint(`i ${i} j ${j} ${JSON.stringify(sub)} ${JSON.stringify(sub2)}`);\\r\\n            const sum = sub2.reduce((prev, cur) => (prev += cur), 0);\\r\\n            if (sum > maxSum)\\r\\n                maxSum = sum;\\r\\n            // ns.tprint(`${sum}: ${sub2}`);\\r\\n        }\\r\\n    }\\r\\n    return maxSum;\\r\\n}\\r\\n\",\"filename\":\"/contracts/daemon.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/contracts/solvers/arrayJumpingGame.js\",\"url\":\"blob:file:///1c324f17-e16c-4417-869b-58fb65b7b260\",\"moduleSequenceNumber\":136163},{\"filename\":\"/contracts/solvers/totalWaysToSum.js\",\"url\":\"blob:file:///b58928e7-e2d4-4573-bcaa-574c0e2bfd6e\",\"moduleSequenceNumber\":134931},{\"filename\":\"/contracts/solvers/index.js\",\"url\":\"blob:file:///0d2c824e-639a-42d7-8c8e-b4cae16a8d4d\",\"moduleSequenceNumber\":137465},{\"filename\":\"/lib/getall.js\",\"url\":\"blob:file:///4553a04a-ab8d-44c9-a5e4-e4894b8d9600\",\"moduleSequenceNumber\":100389},{\"filename\":\"/contracts/daemon.js\",\"url\":\"blob:file:///b5ae7a47-349a-4ed1-84a1-a2bc02ec13a0\",\"moduleSequenceNumber\":137468}],\"dependents\":[],\"ramUsage\":22,\"server\":\"home\",\"moduleSequenceNumber\":137468,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from \\\"lib/getall\\\";\\r\\nexport async function main(ns) {\\r\\n    const servers = await getAllServers(ns);\\r\\n    for (const server of servers) {\\r\\n        if (server !== \\\"home\\\") {\\r\\n            ns.killall(server);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/advanced/killall.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/lib/getall.js\",\"url\":\"blob:file:///dbc4ee10-e243-461e-a4a3-062da7ec8708\",\"moduleSequenceNumber\":100389},{\"filename\":\"/advanced/killall.js\",\"url\":\"blob:file:///5ad4e5ad-dadb-4f9a-963a-cc85dacb1d82\",\"moduleSequenceNumber\":136175}],\"dependents\":[],\"ramUsage\":2.3,\"server\":\"home\",\"moduleSequenceNumber\":136175,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/basic/backdoor.js\",\"url\":\"blob:file:///8166ac0f-f2ff-45a6-9b46-6817e6862ad7\",\"moduleSequenceNumber\":4702}],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"home\",\"moduleSequenceNumber\":416,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/basic/grownshare.js\",\"url\":\"blob:file:///4c1fae8b-0446-4540-8391-8a9af4317e3f\",\"moduleSequenceNumber\":12776}],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":100399,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from 'lib/getall.js';\\n\\nconst minCash = 100;\\n\\nconst whitelist = [\\n    'sigma-cosmetics',\\n    'omega-net',\\n]\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const flags = ns.flags([\\n        [\\\"share\\\", false],\\n    ]);\\n    await crawl(ns, flags.share);\\n}\\n\\n/**\\n * @param {NS} ns - the netscript library\\n * @param {boolean} shouldShare - should we share?\\n */\\nasync function crawl(ns, shouldShare) {\\n    /** @type {number} */\\n    let hackingLevel = ns.getHackingLevel();\\n    /** @type {string[]} */\\n    let servers = await getAllServers(ns);\\n    /** @type {string[]} */\\n    let hackableServers = servers.filter(s =>\\n        ns.getServerRequiredHackingLevel(s) <= hackingLevel &&\\n        ns.hasRootAccess(s) &&\\n        ns.getServerMaxMoney(s) >= minCash &&\\n        whitelist.includes(s)\\n    );\\n    /** @type {string[]} */\\n    let runnableServers = servers.filter(s =>\\n        ns.hasRootAccess(s)\\n    );\\n\\n    // let scriptName = shouldShare ? \\\"basic/hacknshare.js\\\" : \\\"basic/hack.js\\\";\\n    let scriptName = \\\"basic/grownshare.js\\\";\\n\\n    for (let host of runnableServers) {\\n        ns.run('basic/cpall.js', 1, host);\\n        if (ns.getServerRequiredHackingLevel(host) < hackingLevel) {\\n            // ns.exec('basic/backdoor.js', host);\\n        }\\n        for (let target of hackableServers) {\\n            // ns.tprint(`Hacking ${target} from ${host}`)\\n            ns.exec(scriptName, host, 1, target);\\n            await ns.sleep(1);\\n        }\\n    }\\n}\",\"filename\":\"/advanced/growall.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/lib/getall.js\",\"url\":\"blob:file:///fb543b23-601f-4625-a207-b2a11963b06c\",\"moduleSequenceNumber\":119},{\"filename\":\"/advanced/growall.js\",\"url\":\"blob:file:///f29184ec-43c5-4bb8-b8b1-7e17b640928a\",\"moduleSequenceNumber\":9227}],\"dependents\":[],\"ramUsage\":6.8,\"server\":\"home\",\"moduleSequenceNumber\":418,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    ns.tprint(\\\"Test Hello World Function!\\\");\\r\\n}\\r\\n\",\"filename\":\"test.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"test.js\",\"url\":\"blob:file:///720a51dd-6ca6-4554-9ec6-5916bd2f450b\",\"moduleSequenceNumber\":38694}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":92029,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// % of money to use in buying stocks\\nconst budget = 1;\\n// % at which to buy or sell stocks\\nconst buyAt = 70;\\nconst sellBellow = 60;\\n\\n// Profit amount to sell the stock at.\\nconst sellAt = 1000000000;\\n\\n// TODO short stocks\\nconst shortAt = 40;\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    while (true) {\\n        deamon(ns);\\n        await ns.sleep(6 * 1000)\\n    }\\n}\\n\\n/** @param {number} n */\\nfunction formatNumber(n) {\\n    return n.toLocaleString(undefined, { minimumFractionDigits: 2 });\\n}\\n\\n/** @param {NS} ns **/\\nfunction deamon(ns) {\\n    /** @type {string[]} */\\n    let stocks = ns.stock.getSymbols();\\n    for (let stock of stocks) {\\n        let increaseChance = ns.stock.getForecast(stock) * 100;\\n        let longOrders = ns.stock.getPosition(stock)[0];\\n        let maxShares = getMaxShares(ns, stock);\\n\\n        if (longOrders > 0) {\\n        }\\n\\n        if (increaseChance >= buyAt && longOrders < maxShares) {\\n            let cost = ns.stock.buy(stock, maxShares);\\n            ns.tprint(`${formatNumber(maxShares)} shares of ${stock} purchased for a total of \\\\$${formatNumber(cost)}\\n                because it has a ${formatNumber(increaseChance)}% chance of increasing.`);\\n        } else if (longOrders > 0) {\\n            let profit = ns.stock.getSaleGain(stock, maxShares, 'Long');\\n            if (profit >= sellAt) {\\n                let total = ns.stock.sell(stock, longOrders);\\n                ns.tprint(`${formatNumber(longOrders)} of ${stock} sold for a total of \\\\$${formatNumber(total)} \\n                    because it's profit: \\\\$${formatNumber(profit)} has reached target profit: \\\\$${formatNumber(sellAt)}.`);\\n            }\\n            if (increaseChance <= sellBellow) {\\n                let total = ns.stock.sell(stock, longOrders);\\n                ns.tprint(`${formatNumber(longOrders)} of ${stock} sold for a total of \\\\$${formatNumber(total)} \\n                    because it's growth is stopping.`);\\n            }\\n        }\\n\\n    }\\n}\\n\\n/** \\n * @param {NS} ns \\n * @param {string} sym\\n * **/\\nfunction getMaxShares(ns, sym) {\\n    let cashAvailable = ns.getServerMoneyAvailable('home') * (budget / 100);\\n    let stockCost = ns.stock.getAskPrice(sym);\\n    let maxPurchaseable = Math.min(ns.stock.getMaxShares(sym), cashAvailable / stockCost);\\n    return maxPurchaseable;\\n}\",\"filename\":\"/stocks/daemon.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/stocks/daemon.js\",\"url\":\"blob:file:///e5aac51b-7843-48fd-ada5-bb7107e1a0f0\",\"moduleSequenceNumber\":329}],\"dependents\":[],\"ramUsage\":19.2,\"server\":\"home\",\"moduleSequenceNumber\":420,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getSaleGain\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from \\\"lib/getall.js\\\";\\n\\n/**\\n * @type {fn -> string[]} getAllServers\\n */\\n\\nexport async function main(ns) {\\n    const contracts = (await getAllServers(ns)).flatMap((server) => {\\n        const onServer = ns.ls(server, \\\".cct\\\").map((contract) => {\\n            const type = ns.codingcontract.getContractType(contract, server);\\n            const data = ns.codingcontract.getData(contract, server);\\n            const didSolve = solve(type, data, server, contract, ns);\\n            return `${server} - ${contract} - ${type} - ${didSolve || \\\"FAILED!\\\"}`;\\n        });\\n        return onServer;\\n    });\\n    ns.tprint(`Found ${contracts.length} contracts`);\\n    contracts.forEach((contract) => void ns.tprint(contract));\\n}\\n\\nfunction solve(type, data, server, contract, ns) {\\n    let solution = \\\"\\\";\\n    ns.tprint(type);\\n    switch (type) {\\n        case \\\"Algorithmic Stock Trader I\\\":\\n            solution = maxProfit([1, data]);\\n            break;\\n        case \\\"Algorithmic Stock Trader II\\\":\\n            solution = maxProfit([Math.ceil(data.length / 2), data]);\\n            break;\\n        case \\\"Algorithmic Stock Trader III\\\":\\n            solution = maxProfit([2, data]);\\n            break;\\n        case \\\"Algorithmic Stock Trader IV\\\":\\n            solution = maxProfit(data);\\n            break;\\n        case \\\"Minimum Path Sum in a Triangle\\\":\\n            solution = solveTriangleSum(data, ns);\\n            break;\\n        case \\\"Unique Paths in a Grid I\\\":\\n            solution = uniquePathsI(data);\\n            break;\\n        case \\\"Unique Paths in a Grid II\\\":\\n            solution = uniquePathsII(data);\\n            break;\\n        case \\\"Generate IP Addresses\\\":\\n            solution = generateIps(data);\\n            break;\\n        case \\\"Find Largest Prime Factor\\\":\\n            solution = factor(data);\\n            break;\\n        case \\\"Spiralize Matrix\\\":\\n            solution = spiral(data);\\n            break;\\n        case \\\"Merge Overlapping Intervals\\\":\\n            solution = mergeOverlap(data);\\n            break;\\n        case \\\"Subarray with Maximum Sum\\\":\\n            solution = solveSum(data);\\n            break;\\n        case \\\"Array Jumping Game\\\":\\n            solution = solveJump(data);\\n            break;\\n        case 'Total Ways to Sum':\\n            solution = totalWaysToSum(data);\\n            break;\\n        default:\\n            ns.tprint(`Unknown contract type: ${type}`);\\n    }\\n    if (solution != '') ns.tprint(`Submitting solution: ${solution} to ${type} - ${contract}`)\\n    return (solution != \\\"\\\") ? ns.codingcontract.attempt(solution, contract, server, {\\n        returnReward: true,\\n    }) : \\\"\\\";\\n}\\n\\n//ALGORITHMIC STOCK TRADER\\n\\nfunction maxProfit(arrayData) {\\n    let i, j, k;\\n\\n    let maxTrades = arrayData[0];\\n    let stockPrices = arrayData[1];\\n\\n    // WHY?\\n    let tempStr = \\\"[0\\\";\\n    for (i = 0; i < stockPrices.length; i++) {\\n        tempStr += \\\",0\\\";\\n    }\\n    tempStr += \\\"]\\\";\\n    let tempArr = \\\"[\\\" + tempStr;\\n    for (i = 0; i < maxTrades - 1; i++) {\\n        tempArr += \\\",\\\" + tempStr;\\n    }\\n    tempArr += \\\"]\\\";\\n\\n    let highestProfit = JSON.parse(tempArr);\\n\\n    for (i = 0; i < maxTrades; i++) {\\n        for (j = 0; j < stockPrices.length; j++) { // Buy / Start\\n            for (k = j; k < stockPrices.length; k++) { // Sell / End\\n                if (i > 0 && j > 0 && k > 0) {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i][k - 1], highestProfit[i - 1][j - 1] + stockPrices[k] - stockPrices[j]);\\n                } else if (i > 0 && j > 0) {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i - 1][j - 1] + stockPrices[k] - stockPrices[j]);\\n                } else if (i > 0 && k > 0) {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i][k - 1], stockPrices[k] - stockPrices[j]);\\n                } else if (j > 0 && k > 0) {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i][k - 1], stockPrices[k] - stockPrices[j]);\\n                } else {\\n                    highestProfit[i][k] = Math.max(highestProfit[i][k], stockPrices[k] - stockPrices[j]);\\n                }\\n            }\\n        }\\n    }\\n    return highestProfit[maxTrades - 1][stockPrices.length - 1];\\n}\\n\\n//SMALLEST TRIANGLE SUM\\n\\nfunction solveTriangleSum(arrayData, ns) {\\n    let triangle = arrayData;\\n    let nextArray;\\n    let previousArray = triangle[0];\\n\\n    for (let i = 1; i < triangle.length; i++) {\\n        nextArray = [];\\n        for (let j = 0; j < triangle[i].length; j++) {\\n            if (j == 0) {\\n                nextArray.push(previousArray[j] + triangle[i][j]);\\n            } else if (j == triangle[i].length - 1) {\\n                nextArray.push(previousArray[j - 1] + triangle[i][j]);\\n            } else {\\n                nextArray.push(Math.min(previousArray[j], previousArray[j - 1]) + triangle[i][j]);\\n            }\\n\\n        }\\n\\n        previousArray = nextArray;\\n    }\\n\\n    return Math.min.apply(null, nextArray);\\n}\\n\\n//UNIQUE PATHS IN A GRID\\n\\nfunction uniquePathsI(grid) {\\n    const rightMoves = grid[0] - 1;\\n    const downMoves = grid[1] - 1;\\n\\n    return Math.round(factorialDivision(rightMoves + downMoves, rightMoves) / (factorial(downMoves)));\\n}\\n\\nfunction factorial(n) {\\n    return factorialDivision(n, 1);\\n}\\n\\nfunction factorialDivision(n, d) {\\n    if (n == 0 || n == 1 || n == d)\\n        return 1;\\n    return factorialDivision(n - 1, d) * n;\\n}\\n\\nfunction uniquePathsII(grid, ignoreFirst = false, ignoreLast = false) {\\n    const rightMoves = grid[0].length - 1;\\n    const downMoves = grid.length - 1;\\n\\n    let totalPossiblePaths = Math.round(factorialDivision(rightMoves + downMoves, rightMoves) / (factorial(downMoves)));\\n\\n    for (let i = 0; i < grid.length; i++) {\\n        for (let j = 0; j < grid[i].length; j++) {\\n\\n            if (grid[i][j] == 1 && (!ignoreFirst || (i != 0 || j != 0)) && (!ignoreLast || (i != grid.length - 1 || j != grid[i].length - 1))) {\\n                const newArray = [];\\n                for (let k = i; k < grid.length; k++) {\\n                    newArray.push(grid[k].slice(j, grid[i].length));\\n                }\\n\\n                let removedPaths = uniquePathsII(newArray, true, ignoreLast);\\n                removedPaths *= uniquePathsI([i + 1, j + 1]);\\n\\n                totalPossiblePaths -= removedPaths;\\n            }\\n        }\\n\\n    }\\n\\n    return totalPossiblePaths;\\n}\\n\\n//GENERATE IP ADDRESSES\\n\\nfunction generateIps(num) {\\n    num = num.toString();\\n\\n    const length = num.length;\\n\\n    const ips = [];\\n\\n    for (let i = 1; i < length - 2; i++) {\\n        for (let j = i + 1; j < length - 1; j++) {\\n            for (let k = j + 1; k < length; k++) {\\n                const ip = [\\n                    num.slice(0, i),\\n                    num.slice(i, j),\\n                    num.slice(j, k),\\n                    num.slice(k, num.length)\\n                ];\\n                let isValid = true;\\n\\n                ip.forEach(seg => {\\n                    isValid = isValid && isValidIpSegment(seg);\\n                });\\n\\n                if (isValid) ips.push(ip.join(\\\".\\\"));\\n\\n            }\\n\\n        }\\n    }\\n\\n    return ips;\\n\\n}\\n\\nfunction isValidIpSegment(segment) {\\n    if (segment[0] == \\\"0\\\" && segment != \\\"0\\\") return false;\\n    segment = Number(segment);\\n    if (segment < 0 || segment > 255) return false;\\n    return true;\\n}\\n\\n//GREATEST FACTOR\\n\\nfunction factor(num) {\\n    for (let div = 2; div <= Math.sqrt(num); div++) {\\n        if (num % div != 0) {\\n            continue;\\n        }\\n        num = num / div;\\n        div = 1;\\n    }\\n    return num;\\n}\\n\\n//SPIRALIZE Matrix\\n\\nfunction spiral(arr, accum = []) {\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    accum = accum.concat(arr.shift());\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    accum = accum.concat(column(arr, arr[0].length - 1));\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    accum = accum.concat(arr.pop().reverse());\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    accum = accum.concat(column(arr, 0).reverse());\\n    if (arr.length === 0 || arr[0].length === 0) {\\n        return accum;\\n    }\\n    return spiral(arr, accum);\\n}\\n\\nfunction column(arr, index) {\\n    const res = [];\\n    for (let i = 0; i < arr.length; i++) {\\n        const elm = arr[i].splice(index, 1)[0];\\n        if (elm) {\\n            res.push(elm);\\n        }\\n    }\\n    return res;\\n}\\n\\n// Merge Overlapping Intervals\\n\\nfunction mergeOverlap(intervals) {\\n    intervals.sort(([minA], [minB]) => minA - minB);\\n    for (let i = 0; i < intervals.length; i++) {\\n        for (let j = i + 1; j < intervals.length; j++) {\\n            const [min, max] = intervals[i];\\n            const [laterMin, laterMax] = intervals[j];\\n            if (laterMin <= max) {\\n                const newMax = laterMax > max ? laterMax : max;\\n                const newInterval = [min, newMax];\\n                intervals[i] = newInterval;\\n                intervals.splice(j, 1);\\n                j = i;\\n            }\\n        }\\n    }\\n    return intervals;\\n}\\n\\nfunction solveSum(data) {\\n    const arrLength = data.length;\\n    let maxSum = -Infinity;\\n\\n    for (let i = 0; i < arrLength; i++) {\\n        const sub = data.slice(0, i + 1);\\n        for (let j = 0; j < sub.length; j++) {\\n            const sub2 = sub.slice(j, sub.length);\\n            // ns.tprint(`i ${i} j ${j} ${JSON.stringify(sub)} ${JSON.stringify(sub2)}`);\\n            const sum = sub2.reduce((prev, cur) => prev += cur, 0);\\n\\n            if (sum > maxSum) maxSum = sum;\\n\\n            // ns.tprint(`${sum}: ${sub2}`);\\n        }\\n    }\\n\\n    return maxSum;\\n}\\n\\n// Array jumping game solver\\n\\nexport function solveJump(data) {\\n    // ns.tprint(JSON.stringify(data))\\n    for (let i = data[0] - 1; i > -1; i--) {\\n        if (i + 1 >= data.length) return true;\\n\\n        return solveJump(data.slice(i + 1))\\n    }\\n\\n    return false;\\n}\\n\\n// Total Ways to Sum\\n\\n/** @param {number} data */\\nexport function totalWaysToSum(data) {\\n    let N = data;\\n    let K = data - 1;\\n    // Initialize a list\\n    let dp = Array.from({ length: N + 1 }, (_, i) => 0);\\n\\n    // Update dp[0] to 1\\n    dp[0] = 1;\\n\\n    // Iterate over the range [1, K + 1]\\n    for (let row = 1; row < K + 1; row++) {\\n\\n        // Iterate over the range [1, N + 1]\\n        for (let col = 1; col < N + 1; col++) {\\n\\n            // If col is greater\\n            // than or equal to row\\n            if (col >= row)\\n\\n                // Update current\\n                // dp[col] state\\n                dp[col] = dp[col] + dp[col - row];\\n        }\\n    }\\n\\n    // Return the total number of ways\\n    return (dp[N]);\\n}\",\"filename\":\"/contracts/autoSolver.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/lib/getall.js\",\"url\":\"blob:file:///4fb8d76a-19b6-41a7-b4e7-8d8c0abf406d\",\"moduleSequenceNumber\":649},{\"filename\":\"/contracts/autoSolver.js\",\"url\":\"blob:file:///d8d09259-7b53-4767-b6e7-edec8f97d743\",\"moduleSequenceNumber\":2197}],\"dependents\":[],\"ramUsage\":22,\"server\":\"home\",\"moduleSequenceNumber\":421,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Generate IP Addresses\\n\\nfunction generateIps(num) {\\n    num = num.toString();\\n\\n    const length = num.length;\\n\\n    const ips = [];\\n\\n    for (let i = 1; i < length - 2; i++) {\\n        for (let j = i + 1; j < length - 1; j++) {\\n            for (let k = j + 1; k < length; k++) {\\n                const ip = [\\n                    num.slice(0, i),\\n                    num.slice(i, j),\\n                    num.slice(j, k),\\n                    num.slice(k, num.length)\\n                ];\\n                let isValid = true;\\n\\n                ip.forEach(seg => {\\n                    isValid = isValid && isValidIpSegment(seg);\\n                });\\n\\n                if (isValid) ips.push(ip.join(\\\".\\\"));\\n\\n            }\\n\\n        }\\n    }\\n\\n    return ips;\\n\\n}\\n\\nfunction isValidIpSegment(segment) {\\n    if (segment[0] == \\\"0\\\" && segment != \\\"0\\\") return false;\\n    segment = Number(segment);\\n    if (segment < 0 || segment > 255) return false;\\n    return true;\\n}\",\"filename\":\"/contracts/generateIps.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":422,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Find Largest Prime Factor\\n\\nexport function factor(num) {\\n  for (let div = 2; div <= Math.sqrt(num); div++) {\\n    if (num % div != 0) {\\n      continue;\\n    }\\n    num = num / div;\\n    div = 1;\\n  }\\n  return num;\\n}\",\"filename\":\"/contracts/greatestPrimeFactor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":423,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Merge Overlapping Intervals\\n\\nexport function mergeOverlap(intervals) {\\n  intervals.sort(([minA], [minB]) => minA - minB);\\n  for (let i = 0; i < intervals.length; i++) {\\n    for (let j = i + 1; j < intervals.length; j++) {\\n      const [min, max] = intervals[i];\\n      const [laterMin, laterMax] = intervals[j];\\n      if (laterMin <= max) {\\n        const newMax = laterMax > max ? laterMax : max;\\n        const newInterval = [min, newMax];\\n        intervals[i] = newInterval;\\n        intervals.splice(j, 1);\\n        j = i;\\n      }\\n    }\\n  }\\n  return intervals;\\n}\",\"filename\":\"/contracts/mergeOverlap.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":424,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Minimum Path Sum in a Triangle\\n\\nexport function solveTriangleSum(arrayData) {\\n    let triangle = arrayData;\\n    \\n    let nextArray;\\n    let previousArray = triangle[0];\\n    \\n    for (let i = 1; i < triangle.length; i++) {\\n        nextArray = [];\\n        for (let j = 0; j < triangle[i].length; i++) {\\n            \\n            if (j == 0) {\\n                nextArray.push(previousArray[j] + triangle[i][j]);\\n            } else if (j ==  triangle[i].length - 1) {\\n                nextArray.push(Math.min(previousArray[j], previousArray[j - 1]) + triangle[i][j]);\\n            } else {\\n                nextArray.push(previousArray[j - 1] + triangle[i][j]);\\n            }\\n            \\n        }\\n        previousArray = nextArray;\\n    }\\n    return Math.min(nextArray);\\n}\",\"filename\":\"/contracts/solveTriangleSum.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":425,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Spiralize Matrix\\n\\nexport function spiral(arr, accum = []) {\\n  if (arr.length === 0 || arr[0].length === 0) {\\n    return accum;\\n  }\\n  accum = accum.concat(arr.shift());\\n  if (arr.length === 0 || arr[0].length === 0) {\\n    return accum;\\n  }\\n  accum = accum.concat(column(arr, arr[0].length - 1));\\n  if (arr.length === 0 || arr[0].length === 0) {\\n    return accum;\\n  }\\n  accum = accum.concat(arr.pop().reverse());\\n  if (arr.length === 0 || arr[0].length === 0) {\\n    return accum;\\n  }\\n  accum = accum.concat(column(arr, 0).reverse());\\n  if (arr.length === 0 || arr[0].length === 0) {\\n    return accum;\\n  }\\n  return spiral(arr, accum);\\n}\\n\\nfunction column(arr, index) {\\n  const res = [];\\n  for (let i = 0; i < arr.length; i++) {\\n    const elm = arr[i].splice(index, 1)[0];\\n    if (elm) {\\n      res.push(elm);\\n    }\\n  }\\n  return res;\\n}\",\"filename\":\"/contracts/spiral.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":426,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Algorithmic Stock Trader I\\n// Algorithmic Stock Trader II\\n// Algorithmic Stock Trader III\\n// Algorithmic Stock Trader IV\\n\\nexport function maxProfit(arrayData) {\\n  let i, j, k;\\n    \\n  let maxTrades = arrayData[0];\\n  let stockPrices = arrayData[1];\\n\\n  // WHY?\\n  let tempStr = \\\"[0\\\";\\n  for (i = 0; i < stockPrices.length; i++) {\\n      tempStr += \\\",0\\\";\\n  }\\n  tempStr += \\\"]\\\";\\n  let tempArr = \\\"[\\\" + tempStr;\\n  for (i = 0; i < maxTrades - 1; i++) {\\n      tempArr += \\\",\\\" + tempStr;\\n  }\\n  tempArr += \\\"]\\\";\\n\\n  let highestProfit = JSON.parse(tempArr);\\n\\n  for (i = 0; i < maxTrades; i++) {\\n      for (j = 0; j < stockPrices.length; j++) { // Buy / Start\\n          for (k = j; k < stockPrices.length; k++) { // Sell / End\\n              if (i > 0 && j > 0 && k > 0) {\\n                  highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i][k - 1], highestProfit[i - 1][j - 1] + stockPrices[k] - stockPrices[j]);\\n              } else if (i > 0 && j > 0) {\\n                  highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i - 1][j - 1] + stockPrices[k] - stockPrices[j]);\\n              } else if (i > 0 && k > 0) {\\n                  highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i - 1][k], highestProfit[i][k - 1], stockPrices[k] - stockPrices[j]);\\n              } else if (j > 0 && k > 0) {\\n                  highestProfit[i][k] = Math.max(highestProfit[i][k], highestProfit[i][k - 1], stockPrices[k] - stockPrices[j]);\\n              } else {\\n                  highestProfit[i][k] = Math.max(highestProfit[i][k], stockPrices[k] - stockPrices[j]);\\n              }\\n          }\\n      }\\n  }\\n  return highestProfit[maxTrades - 1][stockPrices.length - 1];\\n}\",\"filename\":\"/contracts/stockSolver.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":427,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Unique Paths in a Grid I\\n// Unique Paths in a Grid II\\n\\nexport function uniquePathsI(grid) {\\n    const rightMoves = grid[0] - 1;\\n    const downMoves = grid[1] - 1;\\n\\n    return Math.round(factorialDivision(rightMoves + downMoves, rightMoves) / (factorial(downMoves)));\\n}\\n\\nfunction factorial(n) {\\n    return factorialDivision(n, 1);\\n}\\nfunction factorialDivision(n, d) {\\n    if (n == 0 || n == 1 || n == d)\\n        return 1;\\n    return factorialDivision(n - 1, d) * n;\\n}\\n\\nexport function uniquePathsII(grid, ignoreFirst = false, ignoreLast = false) {\\n    const rightMoves = grid[0].length - 1;\\n    const downMoves = grid.length - 1;\\n\\n    let totalPossiblePaths = Math.round(factorialDivision(rightMoves + downMoves, rightMoves) / (factorial(downMoves)));\\n\\n    for (let i = 0; i < grid.length; i++) {\\n        for (let j = 0; j < grid[i].length; j++) {\\n            \\n            if (grid[i][j] == 1 && (!ignoreFirst || (i != 0 || j != 0))&& (!ignoreLast || (i != grid.length - 1 || j != grid[i].length - 1))) {\\n                const newArray = [];\\n                for (let k = i; k < grid.length; k++) {\\n                    newArray.push(grid[k].slice(j, grid[i].length));\\n                }\\n             \\n                let removedPaths = uniquePathsII(newArray, true, ignoreLast);\\n                removedPaths *= uniquePathsI([i+1, j+1]);\\n\\n                totalPossiblePaths -= removedPaths;\\n            }\\n        }\\n\\n    }\\n\\n    return totalPossiblePaths;\\n}\",\"filename\":\"/contracts/uniquePaths.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":428,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    let tree = await getTree(ns);\\r\\n    ns.tprint(JSON.stringify(tree, null, 2));\\r\\n}\\r\\n/**\\r\\n * Returns the path to a specified target - or prints the entire tree.\\r\\n */\\r\\nexport async function getTree(ns) {\\r\\n    /**\\r\\n     * @typedef HashMap\\r\\n     * @type {object}\\r\\n     *\\r\\n     * @type {HashMap}\\r\\n     */\\r\\n    let serverRoot = { home: {} };\\r\\n    let allServers = [\\\"home\\\"];\\r\\n    async function getServers(host = \\\"home\\\", parent = serverRoot.home) {\\r\\n        let localServers = ns.scan(host);\\r\\n        localServers = localServers.filter((s) => !allServers.includes(s));\\r\\n        if (localServers.length === 0)\\r\\n            return;\\r\\n        for (let server of localServers) {\\r\\n            allServers.push(server);\\r\\n            parent[server] = {};\\r\\n            await getServers(server, parent[server]);\\r\\n        }\\r\\n    }\\r\\n    await getServers();\\r\\n    // This lists all contracts.\\r\\n    /*\\r\\n      for (let server of serverRoot) {\\r\\n          let files = ns.ls(server, 'cct');\\r\\n          if (files.length === 0) return;\\r\\n          ns.tprint(\\\"==================================\\\");\\r\\n          ns.tprint(`Files on ${server}:`);\\r\\n          for (let file of files) {\\r\\n              ns.tprint(`\\\\t${file}`);\\r\\n          }\\r\\n          ns.tprint(\\\"==================================\\\");\\r\\n      }\\r\\n      */\\r\\n    // ns.tprint(`${serverRoot.length} servers found!`);\\r\\n    return serverRoot;\\r\\n}\\r\\n\",\"filename\":\"/lib/gettree.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/lib/gettree.js\",\"url\":\"blob:file:///4790c1ac-10c0-460d-b66e-c37525898665\",\"moduleSequenceNumber\":62627}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":100395,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getTree } from 'lib/gettree.js';\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    let target = ns.args[0];\\n    let tree = await getTree(ns);\\n\\n    function iterate(obj, stack) {\\n        for (let property in obj) {\\n            if (obj.hasOwnProperty(property)) {\\n                if (typeof obj[property] == \\\"object\\\") {\\n                    iterate(obj[property], (stack ? stack + '; connect ' : stack) + property);\\n                } else {\\n                    ns.tprint(property + \\\"   \\\" + obj[property]);\\n                }\\n            }\\n        }\\n        if (stack.includes(target)) {\\n            ns.tprint(stack);\\n        }\\n    }\\n\\n    iterate(tree, '');\\n}\",\"filename\":\"/advanced/find.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/lib/gettree.js\",\"url\":\"blob:file:///5409c725-424f-44d5-9e91-3eb86e77ce2d\",\"moduleSequenceNumber\":92035},{\"filename\":\"/advanced/find.js\",\"url\":\"blob:file:///702fb5c9-952a-4a92-9baa-c97a255c664c\",\"moduleSequenceNumber\":98372}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":98372,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from 'lib/getall.js';\\n\\nconst minCash = 100;\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const flags = ns.flags([\\n        [\\\"share\\\", false],\\n    ]);\\n    await crawl(ns, flags.share);\\n}\\n\\n/**\\n * @param {NS} ns - the netscript library\\n * @param {boolean} shouldShare - should we share?\\n */\\nasync function crawl(ns, shouldShare) {\\n    // Always share!\\n    shouldShare = true;\\n    /** @type {number} */\\n    let hackingLevel = ns.getHackingLevel();\\n    /** @type {string[]} */\\n    let servers = await getAllServers(ns);\\n    /** @type {string[]} */\\n    let hackableServers = servers.filter(s =>\\n        ns.getServerRequiredHackingLevel(s) <= hackingLevel &&\\n        ns.hasRootAccess(s) &&\\n        ns.getServerMaxMoney(s) >= minCash\\n    );\\n\\n    let scriptName = shouldShare ? \\\"basic/hacknshare.js\\\" : \\\"basic/hack.js\\\";\\n\\n    let host = 'home';\\n\\n    for (let target of hackableServers) {\\n        // ns.tprint(`Hacking ${target} from ${host}`)\\n        if (!ns.run(scriptName, 5, target)) {\\n            ns.tprint(`Home is out of memory! reduce threads!`)\\n        }\\n        await ns.sleep(1);\\n    }\\n}\",\"filename\":\"/advanced/homehack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/lib/getall.js\",\"url\":\"blob:file:///3920185d-3846-42a3-a4c1-005f82a0355d\",\"moduleSequenceNumber\":623},{\"filename\":\"/advanced/homehack.js\",\"url\":\"blob:file:///53fbf46b-cca9-4afc-a343-db558f5c39c5\",\"moduleSequenceNumber\":11767}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"home\",\"moduleSequenceNumber\":431,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    let scripts = [\\n        'advanced/killall.js',\\n        'advanced/daemon.js',\\n        'contracts/daemon.js',\\n        'hacknet/daemon.js',\\n        'server-expansion/daemon.js',\\n        // 'initHacking.ns',\\n\\n        // This needs work before I start it.\\n        // 'stocks/daemon.js',\\n    ]\\n    for (let script of scripts) {\\n        ns.run(script);\\n    }\\n}\",\"filename\":\"daemon.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"daemon.js\",\"url\":\"blob:file:///4ba20daf-abad-4f24-8b9b-cdbc3c222541\",\"moduleSequenceNumber\":136174}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"moduleSequenceNumber\":136174,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    ns.kill('/stocks/daemon.js', 'home');\\n    /** @type {string[]} */\\n    let stocks = ns.stock.getSymbols();\\n    ns.tprint('Liquidating assets.')\\n    let total = 0;\\n    for (let stock of stocks) {\\n        let longOrders = ns.stock.getPosition(stock)[0];\\n        if (longOrders === 0) continue;\\n        if (longOrders > 0) {\\n            total += ns.stock.sell(stock, longOrders);\\n        }\\n    }\\n    ns.tprint(`All stocks sold for a total of ${total}`);\\n}\",\"filename\":\"/stocks/liquidate.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/stocks/liquidate.js\",\"url\":\"blob:file:///c83d28af-887c-4993-84bb-08a4149fa450\",\"moduleSequenceNumber\":7290}],\"dependents\":[],\"ramUsage\":8.6,\"server\":\"home\",\"moduleSequenceNumber\":433,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n  if (ns.getHostname() !== \\\"home\\\") {\\n    throw new Exception(\\\"Run the script from home\\\");\\n  }\\n\\n  await ns.wget(\\n    `https://raw.githubusercontent.com/moriakaice/bitburner/master/src/initHacking.ns?ts=${new Date().getTime()}`,\\n    \\\"initHacking.ns\\\"\\n  );\\n  ns.spawn(\\\"initHacking.ns\\\", 1);\\n}\",\"filename\":\"start.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"start.js\",\"url\":\"blob:file:///2626829e-087b-4965-84f1-d78d96091d01\",\"moduleSequenceNumber\":7939}],\"dependents\":[],\"ramUsage\":3.65,\"server\":\"home\",\"moduleSequenceNumber\":434,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const baseUrl = 'https://raw.githubusercontent.com/moriakaice/bitburner/master/src/'\\nconst filesToDownload = [\\n  'common.ns',\\n  'mainHack.ns',\\n  'spider.ns',\\n  'grow.ns',\\n  'hack.ns',\\n  'weaken.ns',\\n  'playerServers.ns',\\n  'killAll.ns',\\n  'runHacking.ns',\\n  'find.ns',\\n]\\nconst valuesToRemove = ['BB_SERVER_MAP']\\n\\nfunction localeHHMMSS(ms = 0) {\\n  if (!ms) {\\n    ms = new Date().getTime()\\n  }\\n\\n  return new Date(ms).toLocaleTimeString()\\n}\\n\\nexport async function main(ns) {\\n  ns.tprint(`[${localeHHMMSS()}] Starting initHacking.ns`)\\n\\n  let hostname = ns.getHostname()\\n\\n  if (hostname !== 'home') {\\n    throw new Exception('Run the script from home')\\n  }\\n\\n  for (let i = 0; i < filesToDownload.length; i++) {\\n    const filename = filesToDownload[i]\\n    const path = baseUrl + filename\\n    await ns.scriptKill(filename, 'home')\\n    await ns.rm(filename)\\n    await ns.sleep(200)\\n    ns.tprint(`[${localeHHMMSS()}] Trying to download ${path}`)\\n    await ns.wget(path + '?ts=' + new Date().getTime(), filename)\\n  }\\n\\n  valuesToRemove.map((value) => localStorage.removeItem(value))\\n\\n  ns.tprint(`[${localeHHMMSS()}] Spawning killAll.ns`)\\n  ns.spawn('killAll.ns', 1, 'runHacking.ns')\\n}\\n\",\"filename\":\"initHacking.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"initHacking.ns\",\"url\":\"blob:file:///c6b4867f-5fc3-4f0d-9877-aae2dea5a0b1\",\"moduleSequenceNumber\":7942}],\"dependents\":[],\"ramUsage\":5.65,\"server\":\"home\",\"moduleSequenceNumber\":435,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// % of money to use in buying stocks\\nconst budget = 1;\\n// % at which to buy or sell stocks\\nconst buyAt = 60;\\n\\n// Profit amount to sell the stock at.\\nconst sellAt = 10000000;\\n\\n// TODO short stocks\\nconst shortAt = 40;\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n    /** @type {string[]} */\\n    let stocks = ns.stock.getSymbols();\\n    for (let stock of stocks) {\\n        let increaseChance = ns.stock.getForecast(stock) * 100;\\n        ns.tprint(`${stock} - ${increaseChance.toLocaleString(undefined, {minimumFractionDigits: 2})}%`)\\n    }\\n}\",\"filename\":\"/stocks/listall.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/stocks/listall.js\",\"url\":\"blob:file:///414809e9-d5b4-4a1d-a501-f4f0d27c0479\",\"moduleSequenceNumber\":6841}],\"dependents\":[],\"ramUsage\":6.1,\"server\":\"home\",\"moduleSequenceNumber\":436,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { solveContract } from \\\"contracts/solve-contract.js\\\";\\n\\nconst minuteInterval = 2;\\n/** @param {NS} ns **/\\n\\nexport async function main(ns) {\\n  while (true) {\\n    // await dfs(ns, null, \\\"home\\\", trySolveContracts, 0);\\n    ns.run('contracts/autoSolver.js');\\n    await ns.sleep(minuteInterval * 60 * 1000);\\n  }\\n}\\n\\n/** @param {NS} ns **/\\n\\nasync function dfs(ns, parent, current, f, depth, ...args) {\\n  var hosts = ns.scan(current);\\n\\n  if (parent != null) {\\n    const index = hosts.indexOf(parent);\\n\\n    if (index > -1) {\\n      hosts.splice(index, 1);\\n    }\\n  }\\n\\n  await f(ns, current, depth, ...args);\\n\\n  for (let index = 0, len = hosts.length; index < len; ++index) {\\n    const host = hosts[index];\\n\\n    await dfs(ns, current, host, f, depth + 1, ...args);\\n  }\\n}\\n\\n/** @param {NS} ns **/\\n\\nasync function trySolveContracts(ns, host, depth) {\\n  var contracts = ns.ls(host, \\\"cct\\\");\\n\\n  for (var contract of contracts) {\\n    solveContract(ns, host, contract, 0);\\n  }\\n}\",\"filename\":\"/contracts/old-daemon.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":28,\"server\":\"home\",\"moduleSequenceNumber\":437,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getDescription\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export function settings() {\\n  return {\\n    minSecurityLevelOffset: 2,\\n    maxMoneyMultiplayer: 0.9,\\n    minSecurityWeight: 100,\\n    mapRefreshInterval: 24 * 60 * 60 * 1000,\\n    keys: {\\n      serverMap: 'BB_SERVER_MAP',\\n      hackTarget: 'BB_HACK_TARGET',\\n      action: 'BB_ACTION',\\n    },\\n  }\\n}\\n\\nexport function getItem(key) {\\n  let item = localStorage.getItem(key)\\n\\n  return item ? JSON.parse(item) : undefined\\n}\\n\\nexport function setItem(key, value) {\\n  localStorage.setItem(key, JSON.stringify(value))\\n}\\n\\nexport async function main(ns) {\\n  return {\\n    settings,\\n    getItem,\\n    setItem,\\n  }\\n}\\n\",\"filename\":\"common.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":438,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const settings = {\\n  homeRamReserved: 20,\\n  homeRamReservedBase: 20,\\n  homeRamExtraRamReserved: 12,\\n  homeRamBigMode: 64,\\n  minSecurityLevelOffset: 1,\\n  maxMoneyMultiplayer: 0.9,\\n  minSecurityWeight: 100,\\n  mapRefreshInterval: 24 * 60 * 60 * 1000,\\n  maxWeakenTime: 30 * 60 * 1000,\\n  keys: {\\n    serverMap: 'BB_SERVER_MAP',\\n  },\\n  changes: {\\n    hack: 0.002,\\n    grow: 0.004,\\n    weaken: 0.05,\\n  },\\n}\\n\\nfunction getItem(key) {\\n  let item = localStorage.getItem(key)\\n\\n  return item ? JSON.parse(item) : undefined\\n}\\n\\nfunction setItem(key, value) {\\n  localStorage.setItem(key, JSON.stringify(value))\\n}\\n\\nconst hackPrograms = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe', 'SQLInject.exe']\\nconst hackScripts = ['hack.ns', 'grow.ns', 'weaken.ns']\\n\\nfunction getPlayerDetails(ns) {\\n  let portHacks = 0\\n\\n  hackPrograms.forEach((hackProgram) => {\\n    if (ns.fileExists(hackProgram, 'home')) {\\n      portHacks += 1\\n    }\\n  })\\n\\n  return {\\n    hackingLevel: ns.getHackingLevel(),\\n    portHacks,\\n  }\\n}\\n\\nfunction convertMSToHHMMSS(ms = 0) {\\n  if (ms <= 0) {\\n    return '00:00:00'\\n  }\\n\\n  if (!ms) {\\n    ms = new Date().getTime()\\n  }\\n\\n  return new Date(ms).toISOString().substr(11, 8)\\n}\\n\\nfunction localeHHMMSS(ms = 0) {\\n  if (!ms) {\\n    ms = new Date().getTime()\\n  }\\n\\n  return new Date(ms).toLocaleTimeString()\\n}\\n\\nfunction numberWithCommas(x) {\\n  return x.toString().replace(/\\\\B(?<!\\\\.\\\\d*)(?=(\\\\d{3})+(?!\\\\d))/g, ',')\\n}\\n\\nfunction createUUID() {\\n  var dt = new Date().getTime()\\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\\n    var r = (dt + Math.random() * 16) % 16 | 0\\n    dt = Math.floor(dt / 16)\\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16)\\n  })\\n  return uuid\\n}\\n\\nfunction weakenCyclesForGrow(growCycles) {\\n  return Math.max(0, Math.ceil(growCycles * (settings.changes.grow / settings.changes.weaken)))\\n}\\n\\nfunction weakenCyclesForHack(hackCycles) {\\n  return Math.max(0, Math.ceil(hackCycles * (settings.changes.hack / settings.changes.weaken)))\\n}\\n\\nasync function getHackableServers(ns, servers) {\\n  const playerDetails = getPlayerDetails(ns)\\n\\n  const hackableServers = Object.keys(servers)\\n    .filter((hostname) => ns.serverExists(hostname))\\n    .filter((hostname) => servers[hostname].ports <= playerDetails.portHacks || ns.hasRootAccess(hostname))\\n    .filter((hostname) => servers[hostname].ram >= 2)\\n\\n  for (const hostname of hackableServers) {\\n    if (hostname === 'home') continue;\\n    if (!ns.hasRootAccess(hostname)) {\\n      hackPrograms.forEach((hackProgram) => {\\n        if (ns.fileExists(hackProgram, 'home')) {\\n          ns[hackProgram.split('.').shift().toLocaleLowerCase()](hostname)\\n        }\\n      })\\n      ns.nuke(hostname)\\n    }\\n\\n    await ns.scp(hackScripts, hostname)\\n\\n  }\\n\\n  hackableServers.sort((a, b) => servers[a].ram - servers[b].ram)\\n  return hackableServers\\n}\\n\\nfunction findTargetServer(ns, serversList, servers, serverExtraData) {\\n  const playerDetails = getPlayerDetails(ns)\\n\\n  serversList = serversList\\n    .filter((hostname) => servers[hostname].hackingLevel <= playerDetails.hackingLevel)\\n    .filter((hostname) => servers[hostname].maxMoney)\\n    .filter((hostname) => hostname !== 'home')\\n    .filter((hostname) => ns.getWeakenTime(hostname) < settings.maxWeakenTime)\\n\\n  let weightedServers = serversList.map((hostname) => {\\n    const fullHackCycles = Math.ceil(100 / Math.max(0.00000001, ns.hackAnalyze(hostname)))\\n\\n    serverExtraData[hostname] = {\\n      fullHackCycles,\\n    }\\n\\n    const serverValue = servers[hostname].maxMoney * (settings.minSecurityWeight / (servers[hostname].minSecurityLevel + ns.getServerSecurityLevel(hostname)))\\n\\n    return {\\n      hostname,\\n      serverValue,\\n      minSecurityLevel: servers[hostname].minSecurityLevel,\\n      securityLevel: ns.getServerSecurityLevel(hostname),\\n      maxMoney: servers[hostname].maxMoney,\\n    }\\n  })\\n\\n  weightedServers.sort((a, b) => b.serverValue - a.serverValue)\\n  ns.print(JSON.stringify(weightedServers, null, 2))\\n\\n  return weightedServers.map((server) => server.hostname)\\n}\\n\\nexport async function main(ns) {\\n  ns.tprint(`[${localeHHMMSS()}] Starting mainHack.ns`)\\n\\n  let hostname = ns.getHostname()\\n\\n  if (hostname !== 'home') {\\n    throw new Exception('Run the script from home')\\n  }\\n\\n  while (true) {\\n    const serverExtraData = {}\\n    const serverMap = getItem(settings.keys.serverMap)\\n    if (serverMap.servers.home.ram >= settings.homeRamBigMode) {\\n      settings.homeRamReserved = settings.homeRamReservedBase + settings.homeRamExtraRamReserved\\n    }\\n\\n    if (!serverMap || serverMap.lastUpdate < new Date().getTime() - settings.mapRefreshInterval) {\\n      ns.tprint(`[${localeHHMMSS()}] Spawning spider.ns`)\\n      ns.spawn('spider.ns', 1, 'mainHack.ns')\\n      ns.exit()\\n      return\\n    }\\n    serverMap.servers.home.ram = Math.max(0, serverMap.servers.home.ram - settings.homeRamReserved)\\n\\n    const hackableServers = await getHackableServers(ns, serverMap.servers)\\n\\n    const targetServers = findTargetServer(ns, hackableServers, serverMap.servers, serverExtraData)\\n    const bestTarget = targetServers.shift()\\n    const hackTime = ns.getHackTime(bestTarget) * 1000\\n    const growTime = ns.getGrowTime(bestTarget) * 1000\\n    const weakenTime = ns.getWeakenTime(bestTarget) * 1000\\n\\n    const growDelay = Math.max(0, weakenTime - growTime - 15 * 1000)\\n    const hackDelay = Math.max(0, growTime + growDelay - hackTime - 15 * 1000)\\n\\n    const securityLevel = ns.getServerSecurityLevel(bestTarget)\\n    const money = ns.getServerMoneyAvailable(bestTarget)\\n\\n    let action = 'weaken'\\n    if (securityLevel > serverMap.servers[bestTarget].minSecurityLevel + settings.minSecurityLevelOffset) {\\n      action = 'weaken'\\n    } else if (money < serverMap.servers[bestTarget].maxMoney * settings.maxMoneyMultiplayer) {\\n      action = 'grow'\\n    } else {\\n      action = 'hack'\\n    }\\n\\n    let hackCycles = 0\\n    let growCycles = 0\\n    let weakenCycles = 0\\n\\n    for (let i = 0; i < hackableServers.length; i++) {\\n      const server = serverMap.servers[hackableServers[i]]\\n      hackCycles += Math.floor(server.ram / 1.7)\\n      growCycles += Math.floor(server.ram / 1.75)\\n    }\\n    weakenCycles = growCycles\\n\\n    ns.tprint(\\n      `[${localeHHMMSS()}] Selected ${bestTarget} for a target. Planning to ${action} the server. Will wake up around ${localeHHMMSS(\\n        new Date().getTime() + weakenTime + 300\\n      )}`\\n    )\\n    ns.tprint(\\n      `[${localeHHMMSS()}] Stock values: baseSecurity: ${serverMap.servers[bestTarget].baseSecurityLevel}; minSecurity: ${serverMap.servers[bestTarget].minSecurityLevel\\n      }; maxMoney: $${numberWithCommas(parseInt(serverMap.servers[bestTarget].maxMoney, 10))}`\\n    )\\n    ns.tprint(`[${localeHHMMSS()}] Current values: security: ${Math.floor(securityLevel * 1000) / 1000}; money: $${numberWithCommas(parseInt(money, 10))}`)\\n    ns.tprint(\\n      `[${localeHHMMSS()}] Time to: hack: ${convertMSToHHMMSS(hackTime)}; grow: ${convertMSToHHMMSS(growTime)}; weaken: ${convertMSToHHMMSS(weakenTime)}`\\n    )\\n    ns.tprint(`[${localeHHMMSS()}] Delays: ${convertMSToHHMMSS(hackDelay)} for hacks, ${convertMSToHHMMSS(growDelay)} for grows`)\\n\\n    if (action === 'weaken') {\\n      if (settings.changes.weaken * weakenCycles > securityLevel - serverMap.servers[bestTarget].minSecurityLevel) {\\n        weakenCycles = Math.ceil((securityLevel - serverMap.servers[bestTarget].minSecurityLevel) / settings.changes.weaken)\\n        growCycles -= weakenCycles\\n        growCycles = Math.max(0, growCycles)\\n\\n        weakenCycles += weakenCyclesForGrow(growCycles)\\n        growCycles -= weakenCyclesForGrow(growCycles)\\n        growCycles = Math.max(0, growCycles)\\n      } else {\\n        growCycles = 0\\n      }\\n\\n      ns.tprint(\\n        `[${localeHHMMSS()}] Cycles ratio: ${growCycles} grow cycles; ${weakenCycles} weaken cycles; expected security reduction: ${Math.floor(settings.changes.weaken * weakenCycles * 1000) / 1000\\n        }`\\n      )\\n\\n      for (let i = 0; i < hackableServers.length; i++) {\\n        const server = serverMap.servers[hackableServers[i]]\\n        let cyclesFittable = Math.max(0, Math.floor(server.ram / 1.75))\\n        const cyclesToRun = Math.max(0, Math.min(cyclesFittable, growCycles))\\n\\n        if (growCycles) {\\n          await ns.exec('grow.ns', server.host, cyclesToRun, bestTarget, cyclesToRun, growDelay, createUUID())\\n          growCycles -= cyclesToRun\\n          cyclesFittable -= cyclesToRun\\n        }\\n\\n        if (cyclesFittable) {\\n          await ns.exec('weaken.ns', server.host, cyclesFittable, bestTarget, cyclesFittable, 0, createUUID())\\n          weakenCycles -= cyclesFittable\\n        }\\n      }\\n    } else if (action === 'grow') {\\n      weakenCycles = weakenCyclesForGrow(growCycles)\\n      growCycles -= weakenCycles\\n\\n      ns.tprint(`[${localeHHMMSS()}] Cycles ratio: ${growCycles} grow cycles; ${weakenCycles} weaken cycles`)\\n\\n      for (let i = 0; i < hackableServers.length; i++) {\\n        const server = serverMap.servers[hackableServers[i]]\\n        let cyclesFittable = Math.max(0, Math.floor(server.ram / 1.75))\\n        const cyclesToRun = Math.max(0, Math.min(cyclesFittable, growCycles))\\n\\n        if (growCycles) {\\n          await ns.exec('grow.ns', server.host, cyclesToRun, bestTarget, cyclesToRun, growDelay, createUUID())\\n          growCycles -= cyclesToRun\\n          cyclesFittable -= cyclesToRun\\n        }\\n\\n        if (cyclesFittable) {\\n          await ns.exec('weaken.ns', server.host, cyclesFittable, bestTarget, cyclesFittable, 0, createUUID())\\n          weakenCycles -= cyclesFittable\\n        }\\n      }\\n    } else {\\n      if (hackCycles > serverExtraData[bestTarget].fullHackCycles) {\\n        hackCycles = serverExtraData[bestTarget].fullHackCycles\\n\\n        if (hackCycles * 100 < growCycles) {\\n          hackCycles *= 10\\n        }\\n\\n        growCycles = Math.max(0, growCycles - Math.ceil((hackCycles * 1.7) / 1.75))\\n\\n        weakenCycles = weakenCyclesForGrow(growCycles) + weakenCyclesForHack(hackCycles)\\n        growCycles -= weakenCycles\\n        hackCycles -= Math.ceil((weakenCyclesForHack(hackCycles) * 1.75) / 1.7)\\n\\n        growCycles = Math.max(0, growCycles)\\n      } else {\\n        growCycles = 0\\n        weakenCycles = weakenCyclesForHack(hackCycles)\\n        hackCycles -= Math.ceil((weakenCycles * 1.75) / 1.7)\\n      }\\n\\n      ns.tprint(`[${localeHHMMSS()}] Cycles ratio: ${hackCycles} hack cycles; ${growCycles} grow cycles; ${weakenCycles} weaken cycles`)\\n\\n      for (let i = 0; i < hackableServers.length; i++) {\\n        const server = serverMap.servers[hackableServers[i]]\\n        let cyclesFittable = Math.max(0, Math.floor(server.ram / 1.7))\\n        const cyclesToRun = Math.max(0, Math.min(cyclesFittable, hackCycles))\\n\\n        if (hackCycles) {\\n          await ns.exec('hack.ns', server.host, cyclesToRun, bestTarget, cyclesToRun, hackDelay, createUUID())\\n          hackCycles -= cyclesToRun\\n          cyclesFittable -= cyclesToRun\\n        }\\n\\n        const freeRam = server.ram - cyclesToRun * 1.7\\n        cyclesFittable = Math.max(0, Math.floor(freeRam / 1.75))\\n\\n        if (cyclesFittable && growCycles) {\\n          const growCyclesToRun = Math.min(growCycles, cyclesFittable)\\n\\n          await ns.exec('grow.ns', server.host, growCyclesToRun, bestTarget, growCyclesToRun, growDelay, createUUID())\\n          growCycles -= growCyclesToRun\\n          cyclesFittable -= growCyclesToRun\\n        }\\n\\n        if (cyclesFittable) {\\n          await ns.exec('weaken.ns', server.host, cyclesFittable, bestTarget, cyclesFittable, 0, createUUID())\\n          weakenCycles -= cyclesFittable\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(weakenTime + 300)\\n  }\\n}\\n\",\"filename\":\"mainHack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"mainHack.ns\",\"url\":\"blob:file:///359e9cd7-7b45-47f8-96e5-c6458b038b2d\",\"moduleSequenceNumber\":3325}],\"dependents\":[],\"ramUsage\":7.65,\"server\":\"home\",\"moduleSequenceNumber\":439,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { settings, setItem } from 'common.ns'\\n\\nconst hackPrograms = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe', 'SQLInject.exe']\\n\\nfunction getPlayerDetails(ns) {\\n  let portHacks = 0\\n\\n  hackPrograms.forEach((hackProgram) => {\\n    if (ns.fileExists(hackProgram, 'home')) {\\n      portHacks += 1\\n    }\\n  })\\n\\n  return {\\n    hackingLevel: ns.getHackingLevel(),\\n    portHacks,\\n  }\\n}\\n\\nfunction allHacks(host) {\\n  ns.brutessh(host)\\n  ns.ftpcrack(host)\\n  ns.relaysmtp(host)\\n  ns.httpworm(host)\\n  ns.sqlinject(host)\\n}\\n\\nfunction localeHHMMSS(ms = 0) {\\n  if (!ms) {\\n    ms = new Date().getTime()\\n  }\\n\\n  return new Date(ms).toLocaleTimeString()\\n}\\n\\nexport async function main(ns) {\\n  ns.tprint(`[${localeHHMMSS()}] Starting spider.ns`)\\n\\n  const scriptToRunAfter = ns.args[0]\\n\\n  let hostname = ns.getHostname()\\n\\n  if (hostname !== 'home') {\\n    throw new Exception('Run the script from home')\\n  }\\n\\n  const serverMap = { servers: {}, lastUpdate: new Date().getTime() }\\n  const scanArray = ['home']\\n\\n  while (scanArray.length) {\\n    const host = scanArray.shift()\\n\\n    serverMap.servers[host] = {\\n      host,\\n      ports: ns.getServerNumPortsRequired(host),\\n      hackingLevel: ns.getServerRequiredHackingLevel(host),\\n      maxMoney: ns.getServerMaxMoney(host),\\n      growth: ns.getServerGrowth(host),\\n      minSecurityLevel: ns.getServerMinSecurityLevel(host),\\n      baseSecurityLevel: ns.getServerBaseSecurityLevel(host),\\n      ram: ns.getServerRam(host)[0],\\n      files: ns.ls(host),\\n    }\\n\\n    const playerDetails = getPlayerDetails(ns)\\n    if (!ns.hasRootAccess(host)) {\\n      if (serverMap.servers[host].ports <= playerDetails.portHacks && serverMap.servers[host].hackingLevel <= playerDetails.hackingLevel) {\\n        hackPrograms.forEach((hackProgram) => {\\n          if (ns.fileExists(hackProgram, 'home')) {\\n            ns[hackProgram.split('.').shift().toLocaleLowerCase()](host)\\n          }\\n        })\\n        ns.nuke(host)\\n      }\\n    }\\n\\n    const connections = ns.scan(host) || ['home']\\n    serverMap.servers[host].connections = connections\\n\\n    connections.filter((hostname) => !serverMap.servers[hostname]).forEach((hostname) => scanArray.push(hostname))\\n  }\\n\\n  let hasAllParents = false\\n\\n  while (!hasAllParents) {\\n    hasAllParents = true\\n\\n    Object.keys(serverMap.servers).forEach((hostname) => {\\n      const server = serverMap.servers[hostname]\\n\\n      if (!server.parent) hasAllParents = false\\n\\n      if (hostname === 'home') {\\n        server.parent = 'home'\\n        server.children = server.children ? server.children : []\\n      }\\n\\n      if (hostname.includes('pserv-')) {\\n        server.parent = 'home'\\n        server.children = []\\n\\n        if (serverMap.servers[server.parent].children) {\\n          serverMap.servers[server.parent].children.push(hostname)\\n        } else {\\n          serverMap.servers[server.parent].children = [hostname]\\n        }\\n      }\\n\\n      if (!server.parent) {\\n        if (server.connections.length === 1) {\\n          server.parent = server.connections[0]\\n          server.children = []\\n\\n          if (serverMap.servers[server.parent].children) {\\n            serverMap.servers[server.parent].children.push(hostname)\\n          } else {\\n            serverMap.servers[server.parent].children = [hostname]\\n          }\\n        } else {\\n          if (!server.children) {\\n            server.children = []\\n          }\\n\\n          if (server.children.length) {\\n            const parent = server.connections.filter((hostname) => !server.children.includes(hostname))\\n\\n            if (parent.length === 1) {\\n              server.parent = parent.shift()\\n\\n              if (serverMap.servers[server.parent].children) {\\n                serverMap.servers[server.parent].children.push(hostname)\\n              } else {\\n                serverMap.servers[server.parent].children = [hostname]\\n              }\\n            }\\n          }\\n        }\\n      }\\n    })\\n  }\\n\\n  setItem(settings().keys.serverMap, serverMap)\\n\\n  if (!scriptToRunAfter) {\\n    ns.tprint(`[${localeHHMMSS()}] Spawning mainHack.ns`)\\n    ns.spawn('mainHack.ns', 1)\\n  } else {\\n    ns.tprint(`[${localeHHMMSS()}] Spawning ${scriptToRunAfter}`)\\n    ns.spawn(scriptToRunAfter, 1)\\n  }\\n}\\n\",\"filename\":\"spider.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"common.ns\",\"url\":\"blob:file:///c44d2c0e-f196-4edb-8d50-eaabf6f956c0\",\"moduleSequenceNumber\":15685},{\"filename\":\"spider.ns\",\"url\":\"blob:file:///3a8d3ad3-2b7e-4e64-8d2d-1fde849ea8cc\",\"moduleSequenceNumber\":15705}],\"dependents\":[],\"ramUsage\":5.25,\"server\":\"home\",\"moduleSequenceNumber\":440,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerBaseSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":441,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":442,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":443,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const settings = {\\n  maxPlayerServers: 25,\\n  gbRamCost: 55000,\\n  maxGbRam: 1048576,\\n  minGbRam: 64,\\n  totalMoneyAllocation: 0.9,\\n  actions: {\\n    BUY: 'buy',\\n    UPGRADE: 'upgrade',\\n  },\\n  keys: {\\n    serverMap: 'BB_SERVER_MAP',\\n  },\\n}\\n\\nfunction getItem(key) {\\n  let item = localStorage.getItem(key)\\n\\n  return item ? JSON.parse(item) : undefined\\n}\\n\\nfunction setItem(key, value) {\\n  localStorage.setItem(key, JSON.stringify(value))\\n}\\n\\nfunction localeHHMMSS(ms = 0) {\\n  if (!ms) {\\n    ms = new Date().getTime()\\n  }\\n\\n  return new Date(ms).toLocaleTimeString()\\n}\\n\\nfunction createUUID() {\\n  var dt = new Date().getTime()\\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\\n    var r = (dt + Math.random() * 16) % 16 | 0\\n    dt = Math.floor(dt / 16)\\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16)\\n  })\\n  return uuid\\n}\\n\\nfunction updateServer(ns, serverMap, host) {\\n  serverMap.servers[host] = {\\n    host,\\n    ports: ns.getServerNumPortsRequired(host),\\n    hackingLevel: ns.getServerRequiredHackingLevel(host),\\n    maxMoney: ns.getServerMaxMoney(host),\\n    growth: ns.getServerGrowth(host),\\n    minSecurityLevel: ns.getServerMinSecurityLevel(host),\\n    baseSecurityLevel: ns.getServerBaseSecurityLevel(host),\\n    ram: ns.getServerRam(host)[0],\\n    connections: ['home'],\\n    parent: 'home',\\n    children: [],\\n  }\\n\\n  Object.keys(serverMap.servers).map((hostname) => {\\n    if (!ns.serverExists(hostname)) {\\n      delete serverMap.servers[hostname]\\n    }\\n  })\\n\\n  setItem(settings.keys.serverMap, serverMap)\\n}\\n\\nfunction getPurchasedServers(ns) {\\n  let purchasedServers = ns.getPurchasedServers()\\n  if (purchasedServers.length) {\\n    purchasedServers.sort((a, b) => {\\n      const totalRamA = ns.getServerRam(a).shift()\\n      const totalRamB = ns.getServerRam(b).shift()\\n\\n      if (totalRamA === totalRamB) {\\n        return ns.getServerRam(a).shift() - ns.getServerRam(b).shift()\\n      } else {\\n        return totalRamA - totalRamB\\n      }\\n    })\\n  }\\n\\n  return purchasedServers\\n}\\n\\nexport async function main(ns) {\\n  ns.tprint(`[${localeHHMMSS()}] Starting playerServers.ns`)\\n\\n  settings.maxGbRam = ns.getPurchasedServerMaxRam()\\n  settings.maxPlayerServers = ns.getPurchasedServerLimit()\\n  let hostname = ns.getHostname()\\n\\n  if (hostname !== 'home') {\\n    throw new Exception('Run the script from home')\\n  }\\n\\n  while (true) {\\n    let didChange = false\\n\\n    const serverMap = getItem(settings.keys.serverMap)\\n    let purchasedServers = getPurchasedServers(ns)\\n\\n    let action = purchasedServers.length < settings.maxPlayerServers ? settings.actions.BUY : settings.actions.UPGRADE\\n\\n    if (action == settings.actions.BUY) {\\n      let smallestCurrentServer = purchasedServers.length ? ns.getServerRam(purchasedServers[0]).shift() : 0\\n      let targetRam = Math.max(settings.minGbRam, smallestCurrentServer)\\n\\n      if (targetRam === settings.minGbRam) {\\n        while (ns.getServerMoneyAvailable('home') * settings.totalMoneyAllocation >= targetRam * settings.gbRamCost * settings.maxPlayerServers) {\\n          targetRam *= 2\\n        }\\n\\n        targetRam /= 2\\n      }\\n\\n      targetRam = Math.max(settings.minGbRam, targetRam)\\n      targetRam = Math.min(targetRam, settings.maxGbRam)\\n\\n      if (ns.getServerMoneyAvailable('home') * settings.totalMoneyAllocation >= targetRam * settings.gbRamCost) {\\n        let hostname = `pserv-${targetRam}-${createUUID()}`\\n        hostname = ns.purchaseServer(hostname, targetRam)\\n\\n        if (hostname) {\\n          ns.tprint(`[${localeHHMMSS()}] Bought new server: ${hostname} (${targetRam} GB)`)\\n\\n          updateServer(ns, serverMap, hostname)\\n          didChange = true\\n        }\\n      }\\n    } else {\\n      let smallestCurrentServer = Math.max(ns.getServerRam(purchasedServers[0]).shift(), settings.minGbRam)\\n      let biggestCurrentServer = ns.getServerRam(purchasedServers[purchasedServers.length - 1]).shift()\\n      let targetRam = biggestCurrentServer\\n\\n      if (smallestCurrentServer === settings.maxGbRam) {\\n        ns.tprint(`[${localeHHMMSS()}] All servers maxxed. Exiting.`)\\n        ns.exit()\\n        return\\n      }\\n\\n      if (smallestCurrentServer === biggestCurrentServer) {\\n        while (ns.getServerMoneyAvailable('home') * settings.totalMoneyAllocation >= targetRam * settings.gbRamCost) {\\n          targetRam *= 4\\n        }\\n\\n        targetRam /= 4\\n      }\\n\\n      targetRam = Math.min(targetRam, settings.maxGbRam)\\n\\n      purchasedServers = getPurchasedServers(ns)\\n      if (targetRam > ns.getServerRam(purchasedServers[0]).shift()) {\\n        didChange = true\\n        while (didChange) {\\n          didChange = false\\n          purchasedServers = getPurchasedServers(ns)\\n\\n          if (targetRam > ns.getServerRam(purchasedServers[0]).shift()) {\\n            if (ns.getServerMoneyAvailable('home') * settings.totalMoneyAllocation >= targetRam * settings.gbRamCost) {\\n              let hostname = `pserv-${targetRam}-${createUUID()}`\\n\\n              await ns.killall(purchasedServers[0])\\n              await ns.sleep(10)\\n              const serverDeleted = await ns.deleteServer(purchasedServers[0])\\n              if (serverDeleted) {\\n                hostname = await ns.purchaseServer(hostname, targetRam)\\n\\n                if (hostname) {\\n                  ns.tprint(`[${localeHHMMSS()}] Upgraded: ${purchasedServers[0]} into server: ${hostname} (${targetRam} GB)`)\\n\\n                  updateServer(ns, serverMap, hostname)\\n                  didChange = true\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n\\n    if (!didChange) {\\n      await ns.sleep(5123)\\n    }\\n  }\\n}\\n\",\"filename\":\"playerServers.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"playerServers.ns\",\"url\":\"blob:file:///ee12034a-f3ff-4eb1-9f21-ddc94cd0e05b\",\"moduleSequenceNumber\":16296}],\"dependents\":[],\"ramUsage\":9.9,\"server\":\"home\",\"moduleSequenceNumber\":444,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerBaseSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const settings = {\\n  mapRefreshInterval: 24 * 60 * 60 * 1000,\\n  keys: {\\n    serverMap: 'BB_SERVER_MAP',\\n  },\\n}\\nconst scriptsToKill = [\\n  'mainHack.ns',\\n  'spider.ns',\\n  'grow.ns',\\n  'hack.ns',\\n  'weaken.ns',\\n  'playerServers.ns',\\n  'runHacking.ns',\\n  'initHacking.ns',\\n  'start.ns',\\n  'find.ns',\\n]\\n\\nfunction getItem(key) {\\n  let item = localStorage.getItem(key)\\n\\n  return item ? JSON.parse(item) : undefined\\n}\\n\\nfunction localeHHMMSS(ms = 0) {\\n  if (!ms) {\\n    ms = new Date().getTime()\\n  }\\n\\n  return new Date(ms).toLocaleTimeString()\\n}\\n\\nexport async function main(ns) {\\n  ns.tprint(`[${localeHHMMSS()}] Starting killAll.ns`)\\n\\n  const scriptToRunAfter = ns.args[0]\\n\\n  let hostname = ns.getHostname()\\n\\n  if (hostname !== 'home') {\\n    throw new Exception('Run the script from home')\\n  }\\n\\n  const serverMap = getItem(settings.keys.serverMap)\\n\\n  if (!serverMap || serverMap.lastUpdate < new Date().getTime() - settings.mapRefreshInterval) {\\n    ns.tprint(`[${localeHHMMSS()}] Spawning spider.ns`)\\n    ns.spawn('spider.ns', 1, 'killAll.ns')\\n    ns.exit()\\n    return\\n  }\\n\\n  for (let i = 0; i < scriptsToKill.length; i++) {\\n    await ns.scriptKill(scriptsToKill[i], 'home')\\n  }\\n\\n  const killAbleServers = Object.keys(serverMap.servers)\\n    .filter((hostname) => ns.serverExists(hostname))\\n    .filter((hostname) => hostname !== 'home')\\n\\n  for (let i = 0; i < killAbleServers.length; i++) {\\n    await ns.killall(killAbleServers[i])\\n  }\\n\\n  ns.tprint(`[${localeHHMMSS()}] All processes killed`)\\n\\n  if (scriptToRunAfter) {\\n    ns.tprint(`[${localeHHMMSS()}] Spawning ${scriptToRunAfter}`)\\n    ns.spawn(scriptToRunAfter, 1)\\n  } else {\\n    ns.tprint(`[${localeHHMMSS()}] Spawning runHacking.ns`)\\n    ns.spawn('runHacking.ns', 1)\\n  }\\n}\\n\",\"filename\":\"killAll.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"killAll.ns\",\"url\":\"blob:file:///f0d1e7f9-5955-42c3-a70d-d2c01771e3ea\",\"moduleSequenceNumber\":15704}],\"dependents\":[],\"ramUsage\":5.25,\"server\":\"home\",\"moduleSequenceNumber\":445,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function localeHHMMSS(ms = 0) {\\n  if (!ms) {\\n    ms = new Date().getTime()\\n  }\\n\\n  return new Date(ms).toLocaleTimeString()\\n}\\n\\nexport async function main(ns) {\\n  ns.tprint(`[${localeHHMMSS()}] Starting runHacking.ns`)\\n\\n  let hostname = ns.getHostname()\\n\\n  if (hostname !== 'home') {\\n    throw new Exception('Run the script from home')\\n  }\\n\\n  const homeRam = ns.getServerRam('home').shift()\\n\\n  if (homeRam >= 32) {\\n    ns.tprint(`[${localeHHMMSS()}] Spawning spider.ns`)\\n    await ns.run('spider.ns', 1, 'mainHack.ns')\\n    await ns.sleep(3000)\\n    ns.tprint(`[${localeHHMMSS()}] Spawning playerServers.ns`)\\n    ns.spawn('playerServers.ns', 1)\\n  } else {\\n    ns.tprint(`[${localeHHMMSS()}] Spawning spider.ns`)\\n    ns.spawn('spider.ns', 1, 'mainHack.ns')\\n  }\\n}\\n\",\"filename\":\"runHacking.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"runHacking.ns\",\"url\":\"blob:file:///4ec3e24f-ef77-4d4f-8f96-7104ad7df6e8\",\"moduleSequenceNumber\":15706}],\"dependents\":[],\"ramUsage\":4.75,\"server\":\"home\",\"moduleSequenceNumber\":446,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const settings = {\\n  keys: {\\n    serverMap: 'BB_SERVER_MAP',\\n  },\\n}\\n\\nfunction getItem(key) {\\n  let item = localStorage.getItem(key)\\n\\n  return item ? JSON.parse(item) : undefined\\n}\\n\\nfunction localeHHMMSS(ms = 0) {\\n  if (!ms) {\\n    ms = new Date().getTime()\\n  }\\n\\n  return new Date(ms).toLocaleTimeString()\\n}\\n\\nfunction printPathToServer(servers, serverToFind) {\\n  if (serverToFind === 'home') return 'home'\\n  if (!servers[serverToFind]) return `-- Unable to locate ${serverToFind} --`\\n\\n  const jumps = []\\n\\n  let isParentHome = servers.parent === 'home'\\n  let currentServer = serverToFind\\n\\n  while (!isParentHome) {\\n    jumps.push(servers[currentServer].parent)\\n\\n    if (servers[currentServer].parent !== 'home') {\\n      currentServer = servers[currentServer].parent\\n    } else {\\n      isParentHome = true\\n    }\\n  }\\n\\n  jumps.unshift(serverToFind)\\n\\n  return jumps.reverse().join('; connect ')\\n}\\n\\nexport async function main(ns) {\\n  ns.tprint(`[${localeHHMMSS()}] Starting find.ns`)\\n\\n  const serverToFind = ns.args[0]\\n\\n  let hostname = ns.getHostname()\\n\\n  if (hostname !== 'home') {\\n    throw new Exception('Run the script from home')\\n  }\\n\\n  const serverMap = getItem(settings.keys.serverMap)\\n\\n  if (serverToFind) {\\n    if (Object.keys(serverMap.servers).includes(serverToFind)) {\\n      ns.tprint(`[${localeHHMMSS()}] Path to ${serverToFind} found:`)\\n      ns.tprint(printPathToServer(serverMap.servers, serverToFind))\\n    } else {\\n      ns.tprint(`[${localeHHMMSS()}] Unable to find the path to ${serverToFind}`)\\n    }\\n  } else {\\n    ns.tprint(`[${localeHHMMSS()}] Common servers:`)\\n    ns.tprint(`* CSEC (CyberSec faction)`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'CSEC') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`* avmnite-02h (NiteSec faction)`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'avmnite-02h') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`* I.I.I.I (The Black Hand faction)`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'I.I.I.I') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`* run4theh111z (Bitrunners faction)`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'run4theh111z') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`* w0r1d_d43m0n`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'w0r1d_d43m0n') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`[${localeHHMMSS()}] Looking for servers with coding contracts:`)\\n    Object.keys(serverMap.servers).forEach((hostname) => {\\n      const files = ns.ls(hostname)\\n      if (files && files.length) {\\n        const contract = files.find((file) => file.includes('.cct'))\\n\\n        if (!!contract) {\\n          ns.tprint('')\\n          ns.tprint(`* ${hostname} has a coding contract(s)! Connect using:`)\\n          ns.tprint(printPathToServer(serverMap.servers, hostname) + `; run ${contract};`)\\n        }\\n      }\\n    })\\n    ns.tprint('')\\n    ns.tprint('Buy all hacks command:')\\n    ns.tprint('home; connect darkweb; buy BruteSSH.exe; buy FTPCrack.exe; buy relaySMTP.exe; buy HTTPWorm.exe; buy SQLInject.exe; home;')\\n    ns.tprint('')\\n  }\\n}\\n\",\"filename\":\"find.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.85,\"server\":\"home\",\"moduleSequenceNumber\":447,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** This is just an arbitrary identifier to signal that this script has finished redeployment */\\r\\nexport const DeployKey = \\\"6uTdsrmCVG8^Bee*^UB46myYQya&4Qc#\\\";\\r\\n/** There is no way to get how this script is called, therefore it's hardcoded here */\\r\\nexport const ScriptName = \\\"init.js\\\";\\r\\nexport const DeploymenScriptFolder = \\\"/deployment/\\\";\\r\\nexport const HomeHost = \\\"home\\\";\\r\\nexport const SelfUpdateFile = \\\"self-update.js\\\";\\r\\nexport const RedeployFile = \\\"redeploy.js\\\";\\r\\nexport const SelfUpdateLocation = `${DeploymenScriptFolder}${SelfUpdateFile}`;\\r\\nexport const RedeployLocation = `${DeploymenScriptFolder}${RedeployFile}`;\\r\\n/**\\r\\n * The idea here is to wget once, then deploy onto home and run this script, automatically updating itself\\r\\n * @param {NS} ns\\r\\n */\\r\\nexport async function main(ns) {\\r\\n    ns.ps().filter(x => x.filename !== ns.getScriptName()).forEach(x => ns.kill(x.pid));\\r\\n    const pid = ns.exec(SelfUpdateLocation, HomeHost, 1, ...ns.args);\\r\\n    if (pid === 0) {\\r\\n        ns.tprint(`## FAILED to spawn self-updater, start manually with: run ${SelfUpdateLocation} -t 1`);\\r\\n        return;\\r\\n    }\\r\\n    else {\\r\\n        ns.tprint(`## Spawned self updater, PID: [${pid}]`);\\r\\n    }\\r\\n}\\r\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdC5qcyIsInNvdXJjZVJvb3QiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvc291cmNlcy8iLCJzb3VyY2VzIjpbImluaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsZ0dBQWdHO0FBQ2hHLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxrQ0FBa0MsQ0FBQTtBQUUzRCxzRkFBc0Y7QUFDdEYsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQztBQUNwQyxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxjQUFjLENBQUM7QUFDcEQsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQztBQUMvQixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsZ0JBQWdCLENBQUM7QUFDL0MsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLGFBQWEsQ0FBQztBQUUxQyxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLHFCQUFxQixHQUFHLGNBQWMsRUFBRSxDQUFBO0FBQzdFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLEdBQUcscUJBQXFCLEdBQUcsWUFBWSxFQUFFLENBQUE7QUFFekU7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUM3QixFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsS0FBSyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0lBQ25GLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqRSxJQUFHLEdBQUcsS0FBSyxDQUFDLEVBQUU7UUFDVixFQUFFLENBQUMsTUFBTSxDQUFDLDZEQUE2RCxrQkFBa0IsT0FBTyxDQUFDLENBQUM7UUFDbEcsT0FBTztLQUNWO1NBQU07UUFDSCxFQUFFLENBQUMsTUFBTSxDQUFDLGtDQUFrQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0tBQ3ZEO0FBRUwsQ0FBQyJ9\",\"filename\":\"init.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"init.js\",\"url\":\"blob:file:///1e84b216-9257-4280-b3f5-454c6cd0bca4\",\"moduleSequenceNumber\":11145}],\"dependents\":[],\"ramUsage\":3.6,\"server\":\"home\",\"moduleSequenceNumber\":448,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ps\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** This is just an arbitrary identifier to signal that this script has finished redeployment */\\r\\nexport const DeployKey = \\\"6uTdsrmCVG8^Bee*^UB46myYQya&4Qc#\\\";\\r\\n/** There is no way to get how this script is called, therefore it's hardcoded here */\\r\\nexport const InitScriptFile = \\\"init.js\\\";\\r\\nexport const DeployFolder = \\\"/\\\";\\r\\nexport const HomeHost = \\\"home\\\";\\r\\nexport const DeploymenScriptFolder = \\\"/deployment/\\\";\\r\\nexport const UtilsScriptFolder = \\\"/utils/\\\";\\r\\nexport const SelfUpdateFile = \\\"self-update.js\\\";\\r\\nexport const RedeployFile = \\\"redeploy.js\\\";\\r\\nexport const UtilsFile = \\\"patch-ns.js\\\";\\r\\nexport const SelfUpdateLocation = `${DeploymenScriptFolder}${SelfUpdateFile}`;\\r\\nexport const RedeployLocation = `${DeploymenScriptFolder}${RedeployFile}`;\\r\\nexport const UtilsLocation = `${UtilsScriptFolder}${UtilsFile}`;\\r\\nexport const Host = \\\"http://localhost:8000\\\";\\r\\n/**\\r\\n * The idea here is to wget once, then deploy onto home and run this script, automatically updating itself\\r\\n * @param {NS} ns\\r\\n */\\r\\nexport async function main(ns) {\\r\\n    ns.tprint(\\\"# Starting self updater\\\");\\r\\n    // overwrite the update script\\r\\n    ns.tprint(`## Updating '${InitScriptFile}'`);\\r\\n    // deleting the current script hardcode first, might change later\\r\\n    // ns.rm(InitScriptFile, HomeHost);\\r\\n    if (!await ns.wget(`${Host}/${InitScriptFile}`, InitScriptFile, HomeHost)) {\\r\\n        ns.tprint(`# CRITICAL failure, could not download init script file (no connection?)`);\\r\\n        return;\\r\\n    }\\r\\n    // gets all files in the deploy folder\\r\\n    const deployedFiles = ns.ls(HomeHost, \\\"/**/*.js\\\");\\r\\n    ns.tprint(`## Removing [${deployedFiles.length}] source files`);\\r\\n    // deployedFiles.forEach(x => ns.rm(x, HomeHost));\\r\\n    await ns.sleep(5);\\r\\n    ns.tprint(`## Updating '${SelfUpdateFile}', '${RedeployFile}', '${UtilsFile}'`);\\r\\n    if (!await ns.wget(`${Host}${SelfUpdateLocation}`, SelfUpdateLocation, HomeHost) ||\\r\\n        !await ns.wget(`${Host}${RedeployLocation}`, RedeployLocation, HomeHost) ||\\r\\n        !await ns.wget(`${Host}${UtilsLocation}`, UtilsLocation, HomeHost)) {\\r\\n        ns.tprint(`# CRITICAL failure, could not download deployment files (no connection?)`);\\r\\n        return;\\r\\n    }\\r\\n    const pid = ns.exec(RedeployLocation, HomeHost, 1, ...ns.args, DeployKey);\\r\\n    if (pid === 0) {\\r\\n        ns.tprint(`## FAILED to spawn redeployment, start manually with: run ${RedeployLocation} -t 1 ${DeployKey}`);\\r\\n    }\\r\\n    else {\\r\\n        ns.tprint(`## Spawned redeployment, PID: [${pid}]`);\\r\\n    }\\r\\n}\\r\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZi11cGRhdGUuanMiLCJzb3VyY2VSb290IjoiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3NvdXJjZXMvIiwic291cmNlcyI6WyJkZXBsb3ltZW50L3NlbGYtdXBkYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLGdHQUFnRztBQUNoRyxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsa0NBQWtDLENBQUE7QUFFM0Qsc0ZBQXNGO0FBQ3RGLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxTQUFTLENBQUM7QUFDeEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLEdBQUcsQ0FBQztBQUNoQyxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDO0FBRS9CLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLGNBQWMsQ0FBQztBQUNwRCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxTQUFTLENBQUM7QUFDM0MsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLGdCQUFnQixDQUFDO0FBQy9DLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxhQUFhLENBQUM7QUFDMUMsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLGFBQWEsQ0FBQTtBQUV0QyxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLHFCQUFxQixHQUFHLGNBQWMsRUFBRSxDQUFBO0FBQzdFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLEdBQUcscUJBQXFCLEdBQUcsWUFBWSxFQUFFLENBQUE7QUFDekUsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLEdBQUcsaUJBQWlCLEdBQUcsU0FBUyxFQUFFLENBQUM7QUFDaEUsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLHVCQUF1QixDQUFDO0FBRzVDOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDN0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFBO0lBRXBDLDhCQUE4QjtJQUM5QixFQUFFLENBQUMsTUFBTSxDQUFDLGdCQUFnQixjQUFjLEdBQUcsQ0FBQyxDQUFDO0lBQzdDLGlFQUFpRTtJQUNqRSxtQ0FBbUM7SUFDbkMsSUFBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxjQUFjLEVBQUUsRUFBRSxjQUFjLEVBQUUsUUFBUSxDQUFDLEVBQUU7UUFDdEUsRUFBRSxDQUFDLE1BQU0sQ0FBQywwRUFBMEUsQ0FBQyxDQUFDO1FBQ3RGLE9BQU87S0FDVjtJQUVELHNDQUFzQztJQUN0QyxNQUFNLGFBQWEsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUNsRCxFQUFFLENBQUMsTUFBTSxDQUFDLGdCQUFnQixhQUFhLENBQUMsTUFBTSxnQkFBZ0IsQ0FBQyxDQUFBO0lBQy9ELGtEQUFrRDtJQUVsRCxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsY0FBYyxPQUFPLFlBQVksT0FBTyxTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBQ2hGLElBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsa0JBQWtCLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxRQUFRLENBQUM7UUFDNUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsZ0JBQWdCLEVBQUUsRUFBRSxnQkFBZ0IsRUFBRSxRQUFRLENBQUM7UUFDeEUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsYUFBYSxFQUFFLEVBQUUsYUFBYSxFQUFFLFFBQVEsQ0FBQyxFQUFFO1FBQ25FLEVBQUUsQ0FBQyxNQUFNLENBQUMsMEVBQTBFLENBQUMsQ0FBQztRQUN0RixPQUFPO0tBQ1Y7SUFFRCxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzFFLElBQUcsR0FBRyxLQUFLLENBQUMsRUFBRTtRQUNWLEVBQUUsQ0FBQyxNQUFNLENBQUMsNkRBQTZELGdCQUFnQixTQUFTLFNBQVMsRUFBRSxDQUFDLENBQUM7S0FDaEg7U0FBTTtRQUNILEVBQUUsQ0FBQyxNQUFNLENBQUMsa0NBQWtDLEdBQUcsR0FBRyxDQUFDLENBQUM7S0FDdkQ7QUFDTCxDQUFDIn0=\",\"filename\":\"/deployment/self-update.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/deployment/self-update.js\",\"url\":\"blob:file:///967fb7b9-77ac-4c5e-bd5e-d9017c45c0bc\",\"moduleSequenceNumber\":11557}],\"dependents\":[],\"ramUsage\":3.1,\"server\":\"home\",\"moduleSequenceNumber\":449,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export const UpdateList = \\\"index.txt\\\";\\r\\nexport const DeployFolder = \\\"\\\";\\r\\nexport const HomeHost = \\\"home\\\";\\r\\nexport const BootstrapScript = \\\"processor.js\\\";\\r\\n/**\\r\\n * The idea here is to wget once, then deploy onto home and run this script, automatically updating itself\\r\\n * @param {NS} ns\\r\\n */\\r\\nexport async function main(ns) {\\r\\n    ns.tprint(\\\"# Starting redeployment\\\");\\r\\n    let lastChange = new Date(0);\\r\\n    while (true) {\\r\\n        const success = await ns.wget(\\\"http://localhost:8000/index.json\\\", UpdateList, HomeHost);\\r\\n        if (!success) {\\r\\n            await ns.sleep(10_000);\\r\\n            continue;\\r\\n        }\\r\\n        const updateList = JSON.parse(`${ns.read(UpdateList)}`);\\r\\n        const updateDate = new Date(updateList.lastChange);\\r\\n        if (updateDate <= lastChange) {\\r\\n            await ns.sleep(1_000);\\r\\n            continue;\\r\\n        }\\r\\n        lastChange = updateDate;\\r\\n        // remove the update list\\r\\n        ns.rm(UpdateList, HomeHost);\\r\\n        ns.tprint(`## Downloading [${updateList.fileList.length}] source files`);\\r\\n        for (const idx in updateList.fileList) {\\r\\n            const file = updateList.fileList[idx];\\r\\n            const location = file.includes(\\\"/\\\") ? `/${file}` : file;\\r\\n            await ns.wget(`http://localhost:8000/${file}`, location, HomeHost);\\r\\n            // avoid choking the browser and/or server\\r\\n            await ns.sleep(5);\\r\\n        }\\r\\n        ns.exec(DeployFolder, BootstrapScript);\\r\\n        ns.tprint(\\\"# Self updating complete\\\");\\r\\n        await ns.sleep(10_000);\\r\\n    }\\r\\n}\\r\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVkZXBsb3kuanMiLCJzb3VyY2VSb290IjoiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3NvdXJjZXMvIiwic291cmNlcyI6WyJkZXBsb3ltZW50L3JlZGVwbG95LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxXQUFXLENBQUM7QUFDdEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLEVBQUUsQ0FBQztBQUMvQixNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDO0FBQy9CLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxjQUFjLENBQUM7QUFROUM7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUMvQixFQUFFLENBQUMsTUFBTSxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFFckMsSUFBSSxVQUFVLEdBQUcsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFN0IsT0FBTyxJQUFJLEVBQUU7UUFDWCxNQUFNLE9BQU8sR0FBRyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQzNCLGtDQUFrQyxFQUNsQyxVQUFVLEVBQ1YsUUFBUSxDQUNULENBQUM7UUFDRixJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ1osTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3ZCLFNBQVM7U0FDVjtRQUNELE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQWUsQ0FBQztRQUN0RSxNQUFNLFVBQVUsR0FBRyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbkQsSUFBSSxVQUFVLElBQUksVUFBVSxFQUFFO1lBQzVCLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN0QixTQUFTO1NBQ1Y7UUFFRCxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQ3hCLHlCQUF5QjtRQUN6QixFQUFFLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUM1QixFQUFFLENBQUMsTUFBTSxDQUFDLG1CQUFtQixVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sZ0JBQWdCLENBQUMsQ0FBQztRQUV6RSxLQUFLLE1BQU0sR0FBRyxJQUFJLFVBQVUsQ0FBQyxRQUFRLEVBQUU7WUFDckMsTUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN0QyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDeEQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLHlCQUF5QixJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDbkUsMENBQTBDO1lBQzFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNuQjtRQUVELEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQyxDQUFDO1FBQ3ZDLEVBQUUsQ0FBQyxNQUFNLENBQUMsMEJBQTBCLENBQUMsQ0FBQztRQUN0QyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEI7QUFDSCxDQUFDIn0=\",\"filename\":\"/deployment/redeploy.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/deployment/redeploy.js\",\"url\":\"blob:file:///ac164b0f-8c85-4793-b48e-5df918c987b3\",\"moduleSequenceNumber\":11542}],\"dependents\":[],\"ramUsage\":3.9,\"server\":\"home\",\"moduleSequenceNumber\":450,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYml0YnVybmVyLnQuanMiLCJzb3VyY2VSb290IjoiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3NvdXJjZXMvIiwic291cmNlcyI6WyJiaXRidXJuZXIudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIn0=\",\"filename\":\"bitburner.t.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":451,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const processes = ns\\r\\n        .ps(\\\"home\\\")\\r\\n        .filter((x) => ![\\\"processor.js\\\", \\\"/deployment/redeploy.js\\\"].includes(x.filename));\\r\\n    processes.forEach((x) => ns.kill(x.pid));\\r\\n    // exec(ns, '/scripts/deploy-all.js', 'home', (pid) => {\\r\\n    //     ns.tprint(`# deploy-all started, pid ${pid}`);\\r\\n    // }, () => {\\r\\n    //     ns.tprint(`# deploy-all failed!`);\\r\\n    // });\\r\\n    ns.exec(\\\"/scripts/deploy-all.js\\\", \\\"home\\\");\\r\\n    // exec(ns, '/scripts/find-target.js', 'home', (pid) => {\\r\\n    //     ns.tprint(`# find-target started, pid ${pid}`);\\r\\n    // }, () => {\\r\\n    //     ns.tprint(`# find-target failed!`);\\r\\n    // });\\r\\n    ns.exec(\\\"/scripts/find-target.js\\\", \\\"home\\\");\\r\\n}\\r\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzc29yLmpzIiwic291cmNlUm9vdCI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9zb3VyY2VzLyIsInNvdXJjZXMiOlsicHJvY2Vzc29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDL0IsTUFBTSxTQUFTLEdBQUcsRUFBRTtTQUNqQixFQUFFLENBQUMsTUFBTSxDQUFDO1NBQ1YsTUFBTSxDQUNMLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsY0FBYyxFQUFFLHlCQUF5QixDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FDekUsQ0FBQztJQUNKLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFekMsd0RBQXdEO0lBQ3hELHFEQUFxRDtJQUNyRCxhQUFhO0lBQ2IseUNBQXlDO0lBQ3pDLE1BQU07SUFDTixFQUFFLENBQUMsSUFBSSxDQUFDLHdCQUF3QixFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRTFDLHlEQUF5RDtJQUN6RCxzREFBc0Q7SUFDdEQsYUFBYTtJQUNiLDBDQUEwQztJQUMxQyxNQUFNO0lBQ04sRUFBRSxDQUFDLElBQUksQ0FBQyx5QkFBeUIsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM3QyxDQUFDIn0=\",\"filename\":\"processor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.6,\"server\":\"home\",\"moduleSequenceNumber\":452,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ps\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    ns.tprint(\\\"This is a test of processor.ts\\\");\\r\\n}\\r\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbmhhY2suanMiLCJzb3VyY2VSb290IjoiaHR0cDovL2xvY2FsaG9zdDo4MDAwL3NvdXJjZXMvIiwic291cmNlcyI6WyJzY3JpcHRzL21haW5oYWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxLQUFLLFVBQVUsSUFBSSxDQUFDLEVBQU07SUFDL0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO0FBQzlDLENBQUMifQ==\",\"filename\":\"/scripts/mainhack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":453,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    ns.tprint(\\\"This is a test of processor.ts\\\");\\r\\n}\\r\\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzc29yLmpzIiwic291cmNlUm9vdCI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9zb3VyY2VzLyIsInNvdXJjZXMiOlsic2NyaXB0cy9wcm9jZXNzb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUMvQixFQUFFLENBQUMsTUFBTSxDQUFDLGdDQUFnQyxDQUFDLENBQUM7QUFDOUMsQ0FBQyJ9\",\"filename\":\"/scripts/processor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":454,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from \\\"lib/getall.js\\\";\\r\\n\\r\\n/** @param {NS} ns **/\\r\\nexport async function main(ns) {\\r\\n  const flags = ns.flags([[\\\"share\\\", false]]);\\r\\n  await crawl(ns, flags.share);\\r\\n}\\r\\n\\r\\n/**\\r\\n * @param {NS} ns - the netscript library\\r\\n * @param {boolean} shouldShare - should we share?\\r\\n */\\r\\nasync function crawl(ns, shouldShare) {\\r\\n  /** @type {string[]} */\\r\\n  let servers = await getAllServers(ns);\\r\\n  /** @type {number} */\\r\\n  let hackingLevel = ns.getHackingLevel();\\r\\n  /** @type {string[]} */\\r\\n  let hackableServers = servers.filter(\\r\\n    (s) =>\\r\\n      ns.getServerRequiredHackingLevel(s) <= hackingLevel && ns.hasRootAccess(s)\\r\\n  );\\r\\n  /** @type {string[]} */\\r\\n  let runnableServers = servers.filter((s) => ns.hasRootAccess(s));\\r\\n\\r\\n  let scriptName = shouldShare ? \\\"basic/hacknshare.js\\\" : \\\"basic/hack.js\\\";\\r\\n\\r\\n  for (let host of runnableServers) {\\r\\n    ns.run(\\\"basic/cpall.js\\\", 1, host);\\r\\n    for (let target of hackableServers) {\\r\\n      ns.tprint(`Hacking ${target} from ${host}`);\\r\\n      ns.exec(scriptName, host, 1, target);\\r\\n      await ns.sleep(1);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"filename\":\"/advanced/crawlnhack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":6.7,\"server\":\"home\",\"moduleSequenceNumber\":33170,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"\",\"filename\":\"/lib/Bitburner.t.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":92031,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServers } from \\\"lib/getall\\\";\\r\\nconst hackPrograms = [\\r\\n    \\\"BruteSSH.exe\\\",\\r\\n    \\\"FTPCrack.exe\\\",\\r\\n    \\\"relaySMTP.exe\\\",\\r\\n    \\\"HTTPWorm.exe\\\",\\r\\n    \\\"SQLInject.exe\\\",\\r\\n];\\r\\nfunction getPlayerDetails(ns) {\\r\\n    let portHacks = 0;\\r\\n    for (let hackProgram of hackPrograms) {\\r\\n        if (ns.fileExists(hackProgram, \\\"home\\\")) {\\r\\n            portHacks += 1;\\r\\n        }\\r\\n    }\\r\\n    return {\\r\\n        hackingLevel: ns.getHackingLevel(),\\r\\n        portHacks,\\r\\n    };\\r\\n}\\r\\nexport async function main(ns) {\\r\\n    const servers = await getAllServers(ns);\\r\\n    const player = getPlayerDetails(ns);\\r\\n    // get all the nukeable servers\\r\\n    let nukableServers = servers.filter((s) => ns.getServerNumPortsRequired(s) <= player.portHacks &&\\r\\n        !ns.hasRootAccess(s));\\r\\n    for (let server of nukableServers) {\\r\\n        ns.run(\\\"/basic/nuke.js\\\", 1, server);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/advanced/nukeall.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/lib/getall.js\",\"url\":\"blob:file:///5c8dd85a-4620-4043-8449-246104c182ee\",\"moduleSequenceNumber\":100389},{\"filename\":\"/advanced/nukeall.js\",\"url\":\"blob:file:///b235e8f2-a4fb-4749-b14a-3fd9617e424a\",\"moduleSequenceNumber\":136179}],\"dependents\":[],\"ramUsage\":3.1,\"server\":\"home\",\"moduleSequenceNumber\":136179,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const args = ns.flags([[\\\"help\\\", false]]);\\r\\n    const server = ns.args[0].toString();\\r\\n    if (args.help || !server) {\\r\\n        ns.tprint(\\\"This script does a more detailed analysis of a server.\\\");\\r\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\r\\n        ns.tprint(\\\"Example:\\\");\\r\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\r\\n        return;\\r\\n    }\\r\\n    // const ram = ns.getServerRam(server);\\r\\n    const ram = [ns.getServerMaxRam(server), ns.getServerUsedRam(server)];\\r\\n    const money = ns.getServerMoneyAvailable(server);\\r\\n    const maxMoney = ns.getServerMaxMoney(server);\\r\\n    const minSec = ns.getServerMinSecurityLevel(server);\\r\\n    const sec = ns.getServerSecurityLevel(server);\\r\\n    ns.tprint(`\\n\\n${server}:\\n    RAM        : ${ram[1]} / ${ram[0]} (${(ram[1] / ram[0]) * 100}%)\\n    $          : ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(maxMoney, \\\"$0.000a\\\")} (${((money / maxMoney) * 100).toFixed(2)}%)\\n    security   : ${minSec.toFixed(2)} / ${sec.toFixed(2)}\\n    growth     : ${ns.getServerGrowth(server)}\\n    hack time  : ${ns.tFormat(ns.getHackTime(server))}\\n    grow time  : ${ns.tFormat(ns.getGrowTime(server))}\\n    weaken time: ${ns.tFormat(ns.getWeakenTime(server))}\\n    grow x2    : ${ns.growthAnalyze(server, 2).toFixed(2)} threads\\n    grow x3    : ${ns.growthAnalyze(server, 3).toFixed(2)} threads\\n    grow x4    : ${ns.growthAnalyze(server, 4).toFixed(2)} threads\\n    hack 10%   : ${(0.1 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 25%   : ${(0.25 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hack 50%   : ${(0.5 / ns.hackAnalyze(server)).toFixed(2)} threads\\n    hackChance : ${(ns.hackAnalyzeChance(server) * 100).toFixed(2)}%\\n`);\\r\\n}\\r\\n\",\"filename\":\"/official/analyze_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.35,\"server\":\"home\",\"moduleSequenceNumber\":100397,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerGrowth\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const args = ns.flags([[\\\"help\\\", false]]);\\r\\n    const hostname = args._[0];\\r\\n    if (args.help || !hostname) {\\r\\n        ns.tprint(\\\"This script will generate money by hacking a target server.\\\");\\r\\n        ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\r\\n        ns.tprint(\\\"Example:\\\");\\r\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\r\\n        return;\\r\\n    }\\r\\n    while (true) {\\r\\n        if (ns.getServerSecurityLevel(hostname) >\\r\\n            ns.getServerMinSecurityLevel(hostname)) {\\r\\n            await ns.weaken(hostname);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(hostname) < ns.getServerMaxMoney(hostname)) {\\r\\n            await ns.grow(hostname);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(hostname);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/official/basic_hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":100407,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const args = ns.flags([[\\\"help\\\", false]]);\\r\\n    if (args.help) {\\r\\n        ns.tprint(\\\"This script will enhance your HUD (Heads up Display) with custom statistics.\\\");\\r\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\r\\n        ns.tprint(\\\"Example:\\\");\\r\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\r\\n        return;\\r\\n    }\\r\\n    const doc = document; // This is expensive! (25GB RAM) Perhaps there's a way around it? ;)\\r\\n    const hook0 = doc.getElementById(\\\"overview-extra-hook-0\\\");\\r\\n    const hook1 = doc.getElementById(\\\"overview-extra-hook-1\\\");\\r\\n    if (hook0 === null || hook1 === null) {\\r\\n        ns.tprint(\\\"Could not get overview hooks. Is this being run in bitburner?\\\");\\r\\n        return;\\r\\n    }\\r\\n    while (true) {\\r\\n        try {\\r\\n            let headers = [];\\r\\n            let values = [];\\r\\n            // Add script income per second\\r\\n            headers.push(\\\"ScrInc\\\");\\r\\n            values.push(ns.getScriptIncome()[0].toPrecision(5) + \\\"/sec\\\");\\r\\n            // Add script exp gain rate per second\\r\\n            headers.push(\\\"ScrExp\\\");\\r\\n            values.push(ns.getScriptExpGain().toPrecision(5) + \\\"/sec\\\");\\r\\n            // TODO: Add more neat stuff\\r\\n            // Now drop it into the placeholder elements\\r\\n            hook0.innerText = headers.join(\\\" \\\\n\\\");\\r\\n            hook1.innerText = values.join(\\\"\\\\n\\\");\\r\\n        }\\r\\n        catch (err) {\\r\\n            // This might come in handy later\\r\\n            ns.print(\\\"ERROR: Update Skipped: \\\" + String(err));\\r\\n        }\\r\\n        await ns.sleep(1000);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/official/custom-stats.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/official/custom-stats.js\",\"url\":\"blob:file:///6a705878-1ecf-43ff-9a21-aba7f5fd1f8e\",\"moduleSequenceNumber\":97967}],\"dependents\":[],\"ramUsage\":26.8,\"server\":\"home\",\"moduleSequenceNumber\":100409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"dom\",\"name\":\"document\",\"cost\":25},{\"type\":\"fn\",\"name\":\"getScriptIncome\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getScriptExpGain\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const args = ns.flags([[\\\"help\\\", false]]);\\r\\n    if (args.help || args._.length < 2) {\\r\\n        ns.tprint(\\\"This script deploys another script on a server with maximum threads possible.\\\");\\r\\n        ns.tprint(`Usage: run ${ns.getScriptName()} HOST SCRIPT ARGUMENTS`);\\r\\n        ns.tprint(\\\"Example:\\\");\\r\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles basic_hack.js foodnstuff`);\\r\\n        return;\\r\\n    }\\r\\n    const host = args._[0];\\r\\n    const script = args._[1];\\r\\n    const script_args = args._.slice(2);\\r\\n    if (!ns.serverExists(host)) {\\r\\n        ns.tprint(`Server '${host}' does not exist. Aborting.`);\\r\\n        return;\\r\\n    }\\r\\n    if (!ns.ls(ns.getHostname()).find((f) => f === script)) {\\r\\n        ns.tprint(`Script '${script}' does not exist. Aborting.`);\\r\\n        return;\\r\\n    }\\r\\n    const threads = Math.floor((ns.getServerMaxRam(host) - ns.getServerUsedRam(host)) /\\r\\n        ns.getScriptRam(script));\\r\\n    ns.tprint(`Launching script '${script}' on server '${host}' with ${threads} threads and the following arguments: ${script_args}`);\\r\\n    await ns.scp(script, ns.getHostname(), host);\\r\\n    ns.exec(script, host, threads, ...script_args);\\r\\n}\\r\\n\",\"filename\":\"/official/deploy.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"moduleSequenceNumber\":100411,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\r\\n    const children = ns.scan(server);\\r\\n    for (let child of children) {\\r\\n        if (parent == child) {\\r\\n            continue;\\r\\n        }\\r\\n        list.push(child);\\r\\n        scan(ns, server, child, list);\\r\\n    }\\r\\n}\\r\\nexport function list_servers(ns) {\\r\\n    const list = [];\\r\\n    scan(ns, \\\"\\\", \\\"home\\\", list);\\r\\n    return list;\\r\\n}\\r\\nexport async function main(ns) {\\r\\n    const args = ns.flags([[\\\"help\\\", false]]);\\r\\n    if (args.help) {\\r\\n        ns.tprint(\\\"This script helps you find an unsolved coding contract.\\\");\\r\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\r\\n        ns.tprint(\\\"Example:\\\");\\r\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\r\\n        return;\\r\\n    }\\r\\n    let servers = list_servers(ns);\\r\\n    const boughtServers = ns.getPurchasedServers();\\r\\n    servers = servers.filter((s) => !boughtServers.includes(s));\\r\\n    const hostname = servers.find((s) => ns.ls(s).find((f) => f.endsWith(\\\".cct\\\")));\\r\\n    if (!hostname) {\\r\\n        ns.tprint(\\\"No coding contract found.\\\");\\r\\n        return;\\r\\n    }\\r\\n    ns.tprint(`Found coding contract on '${hostname}'.`);\\r\\n}\\r\\n\",\"filename\":\"/official/find_coding_contract.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.25,\"server\":\"home\",\"moduleSequenceNumber\":100413,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function recursiveScan(ns, parent, server, target, route) {\\r\\n    const children = ns.scan(server);\\r\\n    for (let child of children) {\\r\\n        if (parent == child) {\\r\\n            continue;\\r\\n        }\\r\\n        if (child == target) {\\r\\n            route.unshift(child);\\r\\n            route.unshift(server);\\r\\n            return true;\\r\\n        }\\r\\n        if (recursiveScan(ns, server, child, target, route)) {\\r\\n            route.unshift(server);\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n    return false;\\r\\n}\\r\\nexport async function main(ns) {\\r\\n    const args = ns.flags([[\\\"help\\\", false]]);\\r\\n    let route = [];\\r\\n    let server = args._[0];\\r\\n    if (!server || args.help) {\\r\\n        ns.tprint(\\\"This script helps you find a server on the network and shows you the path to get to it.\\\");\\r\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\r\\n        ns.tprint(\\\"Example:\\\");\\r\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\r\\n        return;\\r\\n    }\\r\\n    recursiveScan(ns, \\\"\\\", \\\"home\\\", server, route);\\r\\n    for (const i in route) {\\r\\n        await ns.sleep(500);\\r\\n        const extra = i.length > 0 ? \\\"└ \\\" : \\\"\\\";\\r\\n        ns.tprint(`${\\\" \\\".repeat(parseInt(i))}${extra}${route[i]}`);\\r\\n    }\\r\\n}\\r\\nexport function autocomplete(data, _args) {\\r\\n    return data.servers;\\r\\n}\\r\\n\",\"filename\":\"/official/find_server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/official/find_server.js\",\"url\":\"blob:file:///d35cae28-2969-40aa-b8b7-0a067289c072\",\"moduleSequenceNumber\":98371}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":100415,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const flags = ns.flags([\\r\\n        [\\\"refreshrate\\\", 200],\\r\\n        [\\\"help\\\", false],\\r\\n    ]);\\r\\n    if (flags._.length === 0 || flags.help) {\\r\\n        ns.tprint(\\\"This script helps visualize the money and security of a server.\\\");\\r\\n        ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\r\\n        ns.tprint(\\\"Example:\\\");\\r\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\r\\n        return;\\r\\n    }\\r\\n    ns.tail();\\r\\n    ns.disableLog(\\\"ALL\\\");\\r\\n    while (true) {\\r\\n        const server = flags._[0];\\r\\n        let money = ns.getServerMoneyAvailable(server);\\r\\n        if (money === 0)\\r\\n            money = 1;\\r\\n        const maxMoney = ns.getServerMaxMoney(server);\\r\\n        const minSec = ns.getServerMinSecurityLevel(server);\\r\\n        const sec = ns.getServerSecurityLevel(server);\\r\\n        ns.clearLog();\\r\\n        ns.print(`${server}:`);\\r\\n        ns.print(` $_______: ${ns.nFormat(money, \\\"$0.000a\\\")} / ${ns.nFormat(maxMoney, \\\"$0.000a\\\")} (${((money / maxMoney) * 100).toFixed(2)}%)`);\\r\\n        ns.print(` security: +${(sec - minSec).toFixed(2)}`);\\r\\n        ns.print(` hack____: ${ns.tFormat(ns.getHackTime(server))} (t=${Math.ceil(ns.hackAnalyzeThreads(server, money))})`);\\r\\n        ns.print(` grow____: ${ns.tFormat(ns.getGrowTime(server))} (t=${Math.ceil(ns.growthAnalyze(server, maxMoney / money))})`);\\r\\n        ns.print(` weaken__: ${ns.tFormat(ns.getWeakenTime(server))} (t=${Math.ceil((sec - minSec) * 20)})`);\\r\\n        await ns.sleep(flags.refreshrate);\\r\\n    }\\r\\n}\\r\\nexport function autocomplete(data, _args) {\\r\\n    return data.servers;\\r\\n}\\r\\n\",\"filename\":\"/official/monitor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"home\",\"moduleSequenceNumber\":100417,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\r\\n    const children = ns.scan(server);\\r\\n    for (let child of children) {\\r\\n        if (parent == child) {\\r\\n            continue;\\r\\n        }\\r\\n        list.push(child);\\r\\n        scan(ns, server, child, list);\\r\\n    }\\r\\n}\\r\\nexport function list_servers(ns) {\\r\\n    const list = [];\\r\\n    scan(ns, \\\"\\\", \\\"home\\\", list);\\r\\n    return list;\\r\\n}\\r\\n/** @param {NS} ns **/\\r\\nexport async function main(ns) {\\r\\n    const args = ns.flags([[\\\"help\\\", false]]);\\r\\n    if (args.help) {\\r\\n        ns.tprint(\\\"This script lists all servers on which you can run scripts.\\\");\\r\\n        ns.tprint(`Usage: run ${ns.getScriptName()}`);\\r\\n        ns.tprint(\\\"Example:\\\");\\r\\n        ns.tprint(`> run ${ns.getScriptName()}`);\\r\\n        return;\\r\\n    }\\r\\n    const servers = list_servers(ns)\\r\\n        .filter((s) => ns.hasRootAccess(s))\\r\\n        .concat(\\\"home\\\");\\r\\n    for (const server of servers) {\\r\\n        const used = ns.getServerUsedRam(server);\\r\\n        const max = ns.getServerMaxRam(server);\\r\\n        ns.tprint(`${server} is opened. ${used} GB / ${max} GB (${((100 * used) /\\r\\n            max).toFixed(2)}%)`);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/official/opened_servers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":102529,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Total Ways to Sum\\r\\nexport function totalWaysToSum(data) {\\r\\n    let N = data;\\r\\n    let K = data - 1;\\r\\n    // Initialize a list\\r\\n    let dp = Array.from({ length: N + 1 }, () => 0);\\r\\n    // Update dp[0] to 1\\r\\n    dp[0] = 1;\\r\\n    // Iterate over the range [1, K + 1]\\r\\n    for (let row = 1; row < K + 1; row++) {\\r\\n        // Iterate over the range [1, N + 1]\\r\\n        for (let col = 1; col < N + 1; col++) {\\r\\n            // If col is greater\\r\\n            // than or equal to row\\r\\n            if (col >= row)\\r\\n                // Update current\\r\\n                // dp[col] state\\r\\n                dp[col] = dp[col] + dp[col - row];\\r\\n        }\\r\\n    }\\r\\n    // Return the total number of ways\\r\\n    return dp[N];\\r\\n}\\r\\n\",\"filename\":\"/contracts/solvers/totalWaysToSum.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":134931,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export * from \\\"contracts/solvers/totalWaysToSum.js\\\";\\r\\nexport * from \\\"contracts/solvers/arrayJumpingGame.js\\\";\\r\\n\",\"filename\":\"/contracts/solvers/index.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":137465,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Array jumping game solver\\r\\nexport function solveJump(data) {\\r\\n    // ns.tprint(JSON.stringify(data))\\r\\n    for (let i = data[0] - 1; i > -1; i--) {\\r\\n        if (i + 1 >= data.length)\\r\\n            return true;\\r\\n        return solveJump(data.slice(i + 1));\\r\\n    }\\r\\n    return false;\\r\\n}\\r\\n\",\"filename\":\"/contracts/solvers/arrayJumpingGame.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":136163,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"40.3.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":60147272558,\"moneyMax\":1503681813950,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1200,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"12.5.0.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":46327953459,\"moneyMax\":1158198836475,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1301,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"18.2.1.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":20490863016,\"moneyMax\":512271575400,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":989,\"serverGrowth\":76}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"10.7.0.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":29664701079,\"moneyMax\":741617526975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1082,\"serverGrowth\":74}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"21.5.0.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\",\"ecorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":29861763489,\"moneyMax\":746544087225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1061,\"serverGrowth\":74}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"82.3.6.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":24507394640,\"moneyMax\":612684866000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1000,\"serverGrowth\":65}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"90.7.8.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"blade\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":97,\"minDifficulty\":32,\"moneyAvailable\":14628466293,\"moneyMax\":365711657325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1095,\"serverGrowth\":95}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"8.7.9.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":16549500452,\"moneyMax\":413737511300,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1091,\"serverGrowth\":88}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"67.3.0.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"b-and-a\",\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":22072172673,\"moneyMax\":551804316825,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1167,\"serverGrowth\":94}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"67.4.9.7\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"titan-labs\",\"omnitek\",\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":1591467387,\"moneyMax\":39786684675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1073,\"serverGrowth\":87}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"73.4.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1469,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"76.2.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":1188012333,\"moneyMax\":29700308325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1034,\"serverGrowth\":86}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"2.3.6.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":866848593,\"moneyMax\":21671214825,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":919,\"serverGrowth\":48}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"5.8.2.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\",\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":771975308,\"moneyMax\":19299382700,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":933,\"serverGrowth\":61}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"72.7.4.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":724979349,\"moneyMax\":18124483725,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":850,\"serverGrowth\":76}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"24.8.8.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":720140696,\"moneyMax\":18003517400,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":854,\"serverGrowth\":67}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"94.8.3.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":978725318,\"moneyMax\":24468132950,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":857,\"serverGrowth\":94}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"11.5.0.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[19558,3,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":59.61177887532324,\"onlineMoneyMade\":19558,\"onlineRunningTime\":139.81000000000063,\"pid\":9966,\"ramUsage\":5.6,\"server\":\"univ-energy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1b802014-1846-4384-ad86-5f86ee499705\",\"moduleSequenceNumber\":136207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9967,\"ramUsage\":5.6,\"server\":\"univ-energy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1b802014-1846-4384-ad86-5f86ee499705\",\"moduleSequenceNumber\":136207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9968,\"ramUsage\":5.6,\"server\":\"univ-energy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1b802014-1846-4384-ad86-5f86ee499705\",\"moduleSequenceNumber\":136207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9969,\"ramUsage\":5.6,\"server\":\"univ-energy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1b802014-1846-4384-ad86-5f86ee499705\",\"moduleSequenceNumber\":136207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9970,\"ramUsage\":5.6,\"server\":\"univ-energy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1b802014-1846-4384-ad86-5f86ee499705\",\"moduleSequenceNumber\":136207}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1b802014-1846-4384-ad86-5f86ee499705\",\"moduleSequenceNumber\":136207}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"univ-energy\",\"moduleSequenceNumber\":136207,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"univ-energy\",\"moduleSequenceNumber\":93442,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"univ-energy\",\"moduleSequenceNumber\":93443,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"univ-energy\",\"moduleSequenceNumber\":458,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"unitalife\",\"infocomm\",\"taiyang-digital\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1144119705,\"moneyMax\":28602992625,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":800,\"serverGrowth\":83}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"58.3.4.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":807243283,\"moneyMax\":20181082075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":831,\"serverGrowth\":71}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"63.0.1.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\",\"stormtech\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":573162250,\"moneyMax\":14329056250,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":851,\"serverGrowth\":89}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-384551.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"())(()(\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"79.9.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":897342162,\"moneyMax\":22433554050,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":852,\"serverGrowth\":74}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"12.5.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":840735133,\"moneyMax\":21018378325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":865,\"serverGrowth\":85}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"55.0.5.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\",\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":1064942293,\"moneyMax\":26623557325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":881,\"serverGrowth\":56}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"59.8.3.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"snap-fitness\",\"defcomm\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":945275877,\"moneyMax\":23631896925,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":927,\"serverGrowth\":69}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"15.1.2.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"zb-def\",\"moduleSequenceNumber\":93444,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"zb-def\",\"moduleSequenceNumber\":93445,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"zb-def\",\"moduleSequenceNumber\":93446,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"zb-def\",\"moduleSequenceNumber\":462,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"univ-energy\",\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":951163767,\"moneyMax\":23779094175,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":804,\"serverGrowth\":74}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"67.3.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":93399,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":93400,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":93401,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":466,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":961947686,\"moneyMax\":24048692150,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":826,\"serverGrowth\":74}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"71.6.8.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":798033444,\"moneyMax\":19950836100,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":774,\"serverGrowth\":79}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"18.4.6.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aerocorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1465939502,\"moneyMax\":36648487550,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":857,\"serverGrowth\":53}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"20.7.5.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[17055,3,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":59.61177887532324,\"onlineMoneyMade\":17055,\"onlineRunningTime\":139.81000000000063,\"pid\":9973,\"ramUsage\":5.6,\"server\":\"global-pharm\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8af228fe-249b-40ef-88a8-79ef3805bd7d\",\"moduleSequenceNumber\":136208}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9974,\"ramUsage\":5.6,\"server\":\"global-pharm\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8af228fe-249b-40ef-88a8-79ef3805bd7d\",\"moduleSequenceNumber\":136208}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8af228fe-249b-40ef-88a8-79ef3805bd7d\",\"moduleSequenceNumber\":136208}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"global-pharm\",\"moduleSequenceNumber\":136208,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"global-pharm\",\"moduleSequenceNumber\":93448,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"global-pharm\",\"moduleSequenceNumber\":93449,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"global-pharm\",\"moduleSequenceNumber\":470,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":1540861922,\"moneyMax\":38521548050,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":817,\"serverGrowth\":84}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"13.1.5.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"nova-med\",\"moduleSequenceNumber\":93396,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"nova-med\",\"moduleSequenceNumber\":93397,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"nova-med\",\"moduleSequenceNumber\":93398,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"nova-med\",\"moduleSequenceNumber\":474,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"icarus\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":1167339259,\"moneyMax\":29183481475,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":843,\"serverGrowth\":80}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"24.8.6.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":1386889910,\"moneyMax\":34672247750,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":842,\"serverGrowth\":75}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-811461-TianDiHui.cct\",\"type\":\"Array Jumping Game\",\"data\":[8,8,4,7,1,8,0,0,0,4,0,0,10,9,7,5,1,3,5,0,0,0],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"77.2.6.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[37935,6,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":81.96619595356945,\"onlineMoneyMade\":37935,\"onlineRunningTime\":139.81000000000063,\"pid\":9963,\"ramUsage\":5.6,\"server\":\"unitalife\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///04fa1c13-e692-4e52-9b31-92bffed3f7a3\",\"moduleSequenceNumber\":136206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9964,\"ramUsage\":5.6,\"server\":\"unitalife\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///04fa1c13-e692-4e52-9b31-92bffed3f7a3\",\"moduleSequenceNumber\":136206}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///04fa1c13-e692-4e52-9b31-92bffed3f7a3\",\"moduleSequenceNumber\":136206}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"unitalife\",\"moduleSequenceNumber\":136206,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"unitalife\",\"moduleSequenceNumber\":93439,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"unitalife\",\"moduleSequenceNumber\":93440,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"unitalife\",\"moduleSequenceNumber\":478,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"galactic-cyber\",\"univ-energy\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1000302147,\"moneyMax\":25007553675,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":778,\"serverGrowth\":72}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"84.8.8.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[19781,3,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":59.61177887532324,\"onlineMoneyMade\":19781,\"onlineRunningTime\":141.21000000000055,\"pid\":9820,\"ramUsage\":5.6,\"server\":\"lexo-corp\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0ead263a-c3b0-424b-bd73-275c607c0c76\",\"moduleSequenceNumber\":136194}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9821,\"ramUsage\":5.6,\"server\":\"lexo-corp\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0ead263a-c3b0-424b-bd73-275c607c0c76\",\"moduleSequenceNumber\":136194}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0ead263a-c3b0-424b-bd73-275c607c0c76\",\"moduleSequenceNumber\":136194}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":136194,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":93391,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":93392,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":482,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"syscore\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":798047173,\"moneyMax\":19951179325,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":710,\"serverGrowth\":56}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"42.4.9.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[24813,4,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.06325123473864,\"onlineMoneyMade\":24813,\"onlineRunningTime\":140.01000000000062,\"pid\":9951,\"ramUsage\":5.6,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7a0a06cb-9b72-4433-a0c2-9ed99ffc9876\",\"moduleSequenceNumber\":136204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9952,\"ramUsage\":5.6,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7a0a06cb-9b72-4433-a0c2-9ed99ffc9876\",\"moduleSequenceNumber\":136204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9953,\"ramUsage\":5.6,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7a0a06cb-9b72-4433-a0c2-9ed99ffc9876\",\"moduleSequenceNumber\":136204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9954,\"ramUsage\":5.6,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7a0a06cb-9b72-4433-a0c2-9ed99ffc9876\",\"moduleSequenceNumber\":136204}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9955,\"ramUsage\":5.6,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7a0a06cb-9b72-4433-a0c2-9ed99ffc9876\",\"moduleSequenceNumber\":136204}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7a0a06cb-9b72-4433-a0c2-9ed99ffc9876\",\"moduleSequenceNumber\":136204}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"rho-construction\",\"moduleSequenceNumber\":136204,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"rho-construction\",\"moduleSequenceNumber\":93433,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"rho-construction\",\"moduleSequenceNumber\":93434,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"rho-construction\",\"moduleSequenceNumber\":486,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rho-construction\",\"moduleSequenceNumber\":487,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///1db75b25-6821-49e7-a0cc-9faa072fa562\",\"moduleSequenceNumber\":15858}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"rho-construction\",\"moduleSequenceNumber\":488,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.ns\",\"url\":\"blob:file:///aa37ce00-df05-4de3-9e3c-444a9f5ad817\",\"moduleSequenceNumber\":8291}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"rho-construction\",\"moduleSequenceNumber\":489,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":34.44687500000138,\"minDifficulty\":20,\"moneyAvailable\":666605600,\"moneyMax\":16665140000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":482,\"serverGrowth\":46}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"38.6.4.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":123.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[26792,4,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.06325123473864,\"onlineMoneyMade\":26792,\"onlineRunningTime\":141.01000000000056,\"pid\":9857,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9858,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[181834,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":181834,\"onlineRunningTime\":140.81000000000057,\"pid\":9859,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9860,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9861,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9862,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9863,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9864,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9865,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9866,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9867,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9868,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9869,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9870,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.81000000000057,\"pid\":9871,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9872,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9873,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9874,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9875,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9876,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9877,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9878,\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///bbae2856-264e-4ab5-87c4-f372c1f40821\",\"moduleSequenceNumber\":136197}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":136197,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":93409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":93410,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":493,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":35.44687500000138,\"minDifficulty\":20,\"moneyAvailable\":706042238,\"moneyMax\":17651055950,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":503,\"serverGrowth\":53}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"41.3.3.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[31402,5,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":74.51472359415405,\"onlineMoneyMade\":31402,\"onlineRunningTime\":140.4100000000006,\"pid\":9921,\"ramUsage\":5.6,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a8f9909f-65fd-4253-aebb-430067b89c8f\",\"moduleSequenceNumber\":136201}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9922,\"ramUsage\":5.6,\"server\":\"aevum-police\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a8f9909f-65fd-4253-aebb-430067b89c8f\",\"moduleSequenceNumber\":136201}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a8f9909f-65fd-4253-aebb-430067b89c8f\",\"moduleSequenceNumber\":136201}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"aevum-police\",\"moduleSequenceNumber\":136201,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"aevum-police\",\"moduleSequenceNumber\":93421,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"aevum-police\",\"moduleSequenceNumber\":93422,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"aevum-police\",\"moduleSequenceNumber\":497,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":46.44687500000142,\"minDifficulty\":24,\"moneyAvailable\":345319025,\"moneyMax\":8632975625,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":400,\"serverGrowth\":31}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"16.7.5.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[25036,4,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.06325123473864,\"onlineMoneyMade\":25036,\"onlineRunningTime\":141.41000000000054,\"pid\":9800,\"ramUsage\":5.6,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///ef11a410-bdac-4a20-a3d5-3055983c060a\",\"moduleSequenceNumber\":136192}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9801,\"ramUsage\":5.6,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///ef11a410-bdac-4a20-a3d5-3055983c060a\",\"moduleSequenceNumber\":136192}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9802,\"ramUsage\":5.6,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///ef11a410-bdac-4a20-a3d5-3055983c060a\",\"moduleSequenceNumber\":136192}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9803,\"ramUsage\":5.6,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///ef11a410-bdac-4a20-a3d5-3055983c060a\",\"moduleSequenceNumber\":136192}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9804,\"ramUsage\":5.6,\"server\":\"rothman-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///ef11a410-bdac-4a20-a3d5-3055983c060a\",\"moduleSequenceNumber\":136192}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///ef11a410-bdac-4a20-a3d5-3055983c060a\",\"moduleSequenceNumber\":136192}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":136192,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":93379,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":93380,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":501,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":502,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///522ce76e-a924-419a-8676-1c8c32c6965a\",\"moduleSequenceNumber\":8289}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":503,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.ns\",\"url\":\"blob:file:///0daa2b5b-433d-4b02-80d8-988480b19473\",\"moduleSequenceNumber\":8290}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":504,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":47,\"hackDifficulty\":38.965624999998916,\"minDifficulty\":16,\"moneyAvailable\":283259968.6462035,\"moneyMax\":4723231425,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":385,\"serverGrowth\":45}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"2.8.3.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":837460763,\"moneyMax\":20936519075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":749,\"serverGrowth\":84}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"60.7.0.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":61.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[32213,5,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":74.51472359415405,\"onlineMoneyMade\":32213,\"onlineRunningTime\":141.41000000000054,\"pid\":9806,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9807,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[183427,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":183427,\"onlineRunningTime\":141.21000000000055,\"pid\":9808,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9809,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9810,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9811,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9812,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9813,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9814,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9815,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9816,\"ramUsage\":5.6,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///39f6f4ed-f076-449a-8286-a0a65f1accd3\",\"moduleSequenceNumber\":136193}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"summit-uni\",\"moduleSequenceNumber\":136193,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"summit-uni\",\"moduleSequenceNumber\":93382,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"summit-uni\",\"moduleSequenceNumber\":93383,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"summit-uni\",\"moduleSequenceNumber\":508,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"summit-uni\",\"moduleSequenceNumber\":509,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///f105ae3e-8ddf-4f26-b1cc-bfbc82386699\",\"moduleSequenceNumber\":15862}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"summit-uni\",\"moduleSequenceNumber\":510,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.ns\",\"url\":\"blob:file:///ef7085a0-5600-427e-91bd-0aeb45b18f07\",\"moduleSequenceNumber\":8295}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"summit-uni\",\"moduleSequenceNumber\":511,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":32.39687500000113,\"minDifficulty\":19,\"moneyAvailable\":280800232.09848,\"moneyMax\":6254318125,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":471,\"serverGrowth\":55}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"5.1.5.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"syscore\",\"moduleSequenceNumber\":93387,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"syscore\",\"moduleSequenceNumber\":93388,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"syscore\",\"moduleSequenceNumber\":93389,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"syscore\",\"moduleSequenceNumber\":515,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"johnson-ortho\",\"lexo-corp\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":67.94062500000024,\"minDifficulty\":24,\"moneyAvailable\":518046121,\"moneyMax\":12951153025,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":649,\"serverGrowth\":61}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"19.3.3.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":123.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[17502,3,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":59.61177887532324,\"onlineMoneyMade\":17502,\"onlineRunningTime\":140.61000000000058,\"pid\":9898,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9899,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[180255,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":180255,\"onlineRunningTime\":140.4100000000006,\"pid\":9900,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9901,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9902,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9903,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9904,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9905,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9906,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9907,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9908,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9909,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9910,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9911,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9912,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9913,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9914,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9915,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9916,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9917,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9918,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.4100000000006,\"pid\":9919,\"ramUsage\":5.6,\"server\":\"catalyst\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///631c223b-8d6a-4c83-a161-8fa0a59a1f63\",\"moduleSequenceNumber\":136200}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"catalyst\",\"moduleSequenceNumber\":136200,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"catalyst\",\"moduleSequenceNumber\":93418,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"catalyst\",\"moduleSequenceNumber\":93419,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"catalyst\",\"moduleSequenceNumber\":519,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"catalyst\",\"moduleSequenceNumber\":520,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///0dfc3713-8077-4c28-923b-60f10ead14ca\",\"moduleSequenceNumber\":15883}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"catalyst\",\"moduleSequenceNumber\":521,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.ns\",\"url\":\"blob:file:///5357ef56-a033-4ece-8854-a6fb4fff4be9\",\"moduleSequenceNumber\":8296}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"catalyst\",\"moduleSequenceNumber\":522,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":32.82812500000068,\"minDifficulty\":21,\"moneyAvailable\":596370757.1680237,\"moneyMax\":10080150050,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":438,\"serverGrowth\":30}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"4.9.8.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":61.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[29882,5,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":74.51472359415405,\"onlineMoneyMade\":29882,\"onlineRunningTime\":140.61000000000058,\"pid\":9886,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9887,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[181043,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":181043,\"onlineRunningTime\":140.61000000000058,\"pid\":9888,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9889,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9890,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9891,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9892,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9893,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9894,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9895,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9896,\"ramUsage\":5.6,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///891e9b39-cd7d-42ec-a32c-4da7aff0ec02\",\"moduleSequenceNumber\":136199}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"the-hub\",\"moduleSequenceNumber\":136199,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"the-hub\",\"moduleSequenceNumber\":93415,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"the-hub\",\"moduleSequenceNumber\":93416,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"the-hub\",\"moduleSequenceNumber\":526,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"the-hub\",\"moduleSequenceNumber\":527,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///39ea52a5-9776-4d48-b27e-8c0d27fcc91e\",\"moduleSequenceNumber\":15861}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"the-hub\",\"moduleSequenceNumber\":528,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.ns\",\"url\":\"blob:file:///f7df68d8-1861-4b6a-9f66-c11996455d35\",\"moduleSequenceNumber\":8294}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"the-hub\",\"moduleSequenceNumber\":529,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"phantasy\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":39,\"hackDifficulty\":42.33562499999729,\"minDifficulty\":13,\"moneyAvailable\":392809966.94258726,\"moneyMax\":4772097825,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":302,\"serverGrowth\":52}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":false,\"ip\":\"65.6.2.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"comptek\",\"moduleSequenceNumber\":93375,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"comptek\",\"moduleSequenceNumber\":93376,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"comptek\",\"moduleSequenceNumber\":93377,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"comptek\",\"moduleSequenceNumber\":533,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"neo-net\",\"rothman-uni\",\"zb-institute\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":43.3968749999995,\"minDifficulty\":19,\"moneyAvailable\":327104141.1753843,\"moneyMax\":5753950600,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":344,\"serverGrowth\":55}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"25.3.3.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[31979,5,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79.48237183376432,\"onlineMoneyMade\":31979,\"onlineRunningTime\":141.61000000000053,\"pid\":9784,\"ramUsage\":5.6,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2bf65e4c-d5ee-4346-acb3-4799784b1412\",\"moduleSequenceNumber\":136188}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9785,\"ramUsage\":5.6,\"server\":\"netlink\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2bf65e4c-d5ee-4346-acb3-4799784b1412\",\"moduleSequenceNumber\":136188}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2bf65e4c-d5ee-4346-acb3-4799784b1412\",\"moduleSequenceNumber\":136188}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"netlink\",\"moduleSequenceNumber\":136188,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"netlink\",\"moduleSequenceNumber\":93364,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"netlink\",\"moduleSequenceNumber\":93365,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"netlink\",\"moduleSequenceNumber\":537,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"netlink\",\"moduleSequenceNumber\":538,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///3e4ab8d2-a2ec-4781-9d30-8bde0a081b69\",\"moduleSequenceNumber\":8281}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"netlink\",\"moduleSequenceNumber\":539,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"netlink\",\"moduleSequenceNumber\":540,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":38.08487500000069,\"minDifficulty\":21,\"moneyAvailable\":325074960.36778426,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":404,\"serverGrowth\":47}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"65.6.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":93384,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":93385,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":93386,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":544,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"neo-net\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":38,\"hackDifficulty\":41.8469999999972,\"minDifficulty\":13,\"moneyAvailable\":143513354.50984877,\"moneyMax\":1866901525,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":294,\"serverGrowth\":45}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"81.7.5.1\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"n00dles\",\"moduleSequenceNumber\":93339,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"n00dles\",\"moduleSequenceNumber\":93340,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"n00dles\",\"moduleSequenceNumber\":93341,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"n00dles\",\"moduleSequenceNumber\":548,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"n00dles\",\"moduleSequenceNumber\":549,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///2db61e67-f541-4190-abcf-d604b9489ed5\",\"moduleSequenceNumber\":8273}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"n00dles\",\"moduleSequenceNumber\":550,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"n00dles\",\"moduleSequenceNumber\":551,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":57.24487500005185,\"minDifficulty\":1,\"moneyAvailable\":1274576,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"98.7.1.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[20254,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":20254,\"onlineRunningTime\":142.0100000000005,\"pid\":9749,\"ramUsage\":5.6,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///707913fe-a4ec-43a2-b3cd-3dddc48b61a1\",\"moduleSequenceNumber\":136181}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.8100000000005,\"pid\":9750,\"ramUsage\":5.6,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///707913fe-a4ec-43a2-b3cd-3dddc48b61a1\",\"moduleSequenceNumber\":136181}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///707913fe-a4ec-43a2-b3cd-3dddc48b61a1\",\"moduleSequenceNumber\":136181}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":136181,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":93343,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":93344,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":555,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":556,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///4929d2ca-d581-4349-ad15-88515fb0fb0d\",\"moduleSequenceNumber\":8275}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":557,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":558,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":58.38812499988906,\"minDifficulty\":3,\"moneyAvailable\":36333594.16302585,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"46.1.5.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[25731,4,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.03089947434891,\"onlineMoneyMade\":25731,\"onlineRunningTime\":141.8100000000005,\"pid\":9752,\"ramUsage\":5.6,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c69cb936-6a11-496c-82c9-64da76c97f7f\",\"moduleSequenceNumber\":136182}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.8100000000005,\"pid\":9753,\"ramUsage\":5.6,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c69cb936-6a11-496c-82c9-64da76c97f7f\",\"moduleSequenceNumber\":136182}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c69cb936-6a11-496c-82c9-64da76c97f7f\",\"moduleSequenceNumber\":136182}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":136182,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":93346,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":93347,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":562,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":563,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///bc1543ac-bdb2-469b-9791-d21135a5f61a\",\"moduleSequenceNumber\":8276}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":564,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":565,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":58.58299999994482,\"minDifficulty\":3,\"moneyAvailable\":39907127.88890916,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"44.5.1.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[24522,4,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.03089947434891,\"onlineMoneyMade\":24522,\"onlineRunningTime\":141.8100000000005,\"pid\":9761,\"ramUsage\":5.6,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0a5551c1-1db1-4189-a93d-add3f9298042\",\"moduleSequenceNumber\":136184}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9762,\"ramUsage\":5.6,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0a5551c1-1db1-4189-a93d-add3f9298042\",\"moduleSequenceNumber\":136184}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0a5551c1-1db1-4189-a93d-add3f9298042\",\"moduleSequenceNumber\":136184}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"joesguns\",\"moduleSequenceNumber\":136184,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"joesguns\",\"moduleSequenceNumber\":93352,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"joesguns\",\"moduleSequenceNumber\":93353,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"joesguns\",\"moduleSequenceNumber\":569,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"joesguns\",\"moduleSequenceNumber\":570,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///0c2fe7f7-b608-4551-b99b-87b79926e1c3\",\"moduleSequenceNumber\":8277}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"moduleSequenceNumber\":571,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"moduleSequenceNumber\":572,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":58.552749999962145,\"minDifficulty\":5,\"moneyAvailable\":46770294.88308995,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"94.4.7.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[6637,1,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":49.6764823961027,\"onlineMoneyMade\":6637,\"onlineRunningTime\":141.8100000000005,\"pid\":9755,\"ramUsage\":5.6,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///18e1c9b3-fabc-49d5-89fb-167c2483f895\",\"moduleSequenceNumber\":136183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.8100000000005,\"pid\":9756,\"ramUsage\":5.6,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///18e1c9b3-fabc-49d5-89fb-167c2483f895\",\"moduleSequenceNumber\":136183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[185034,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":185034,\"onlineRunningTime\":141.8100000000005,\"pid\":9757,\"ramUsage\":5.6,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///18e1c9b3-fabc-49d5-89fb-167c2483f895\",\"moduleSequenceNumber\":136183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.8100000000005,\"pid\":9758,\"ramUsage\":5.6,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///18e1c9b3-fabc-49d5-89fb-167c2483f895\",\"moduleSequenceNumber\":136183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.8100000000005,\"pid\":9759,\"ramUsage\":5.6,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///18e1c9b3-fabc-49d5-89fb-167c2483f895\",\"moduleSequenceNumber\":136183}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///18e1c9b3-fabc-49d5-89fb-167c2483f895\",\"moduleSequenceNumber\":136183}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"zer0\",\"moduleSequenceNumber\":136183,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"zer0\",\"moduleSequenceNumber\":93349,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"zer0\",\"moduleSequenceNumber\":93350,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"zer0\",\"moduleSequenceNumber\":576,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zer0\",\"moduleSequenceNumber\":577,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///dd315673-71e3-4ff1-97b3-f2025a38c768\",\"moduleSequenceNumber\":8284}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"moduleSequenceNumber\":578,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"moduleSequenceNumber\":579,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":53.1499999999906,\"minDifficulty\":8,\"moneyAvailable\":140560532.02560565,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"75.9.4.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[31584,5,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":74.51472359415405,\"onlineMoneyMade\":31584,\"onlineRunningTime\":141.61000000000053,\"pid\":9790,\"ramUsage\":5.6,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b963d79e-0435-42c3-bacb-d0a2e03dee3e\",\"moduleSequenceNumber\":136190}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9791,\"ramUsage\":5.6,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b963d79e-0435-42c3-bacb-d0a2e03dee3e\",\"moduleSequenceNumber\":136190}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b963d79e-0435-42c3-bacb-d0a2e03dee3e\",\"moduleSequenceNumber\":136190}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"nectar-net\",\"moduleSequenceNumber\":136190,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"nectar-net\",\"moduleSequenceNumber\":93370,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"nectar-net\",\"moduleSequenceNumber\":93371,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"nectar-net\",\"moduleSequenceNumber\":583,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nectar-net\",\"moduleSequenceNumber\":584,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///c8fd1209-ea6a-49b2-af33-23e4bffeb96c\",\"moduleSequenceNumber\":8280}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nectar-net\",\"moduleSequenceNumber\":585,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nectar-net\",\"moduleSequenceNumber\":586,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"neo-net\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":57.929874999982395,\"minDifficulty\":7,\"moneyAvailable\":49369909.55937214,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"8.7.2.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[24214,4,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.06325123473864,\"onlineMoneyMade\":24214,\"onlineRunningTime\":141.41000000000054,\"pid\":9793,\"ramUsage\":5.6,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///67b1583f-d2fa-4db7-8501-d3dbed6a03eb\",\"moduleSequenceNumber\":136191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9794,\"ramUsage\":5.6,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///67b1583f-d2fa-4db7-8501-d3dbed6a03eb\",\"moduleSequenceNumber\":136191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9795,\"ramUsage\":5.6,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///67b1583f-d2fa-4db7-8501-d3dbed6a03eb\",\"moduleSequenceNumber\":136191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9796,\"ramUsage\":5.6,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///67b1583f-d2fa-4db7-8501-d3dbed6a03eb\",\"moduleSequenceNumber\":136191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.41000000000054,\"pid\":9797,\"ramUsage\":5.6,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///67b1583f-d2fa-4db7-8501-d3dbed6a03eb\",\"moduleSequenceNumber\":136191}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///67b1583f-d2fa-4db7-8501-d3dbed6a03eb\",\"moduleSequenceNumber\":136191}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"neo-net\",\"moduleSequenceNumber\":136191,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"neo-net\",\"moduleSequenceNumber\":93373,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"neo-net\",\"moduleSequenceNumber\":93374,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"neo-net\",\"moduleSequenceNumber\":590,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"neo-net\",\"moduleSequenceNumber\":591,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///4fb43cc2-667e-4bc9-8903-899bf19a15d5\",\"moduleSequenceNumber\":8287}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"moduleSequenceNumber\":592,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"moduleSequenceNumber\":593,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"nectar-net\",\"comptek\",\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":54.55599999998956,\"minDifficulty\":8,\"moneyAvailable\":44854949.098921955,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"58.0.7.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":61.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[19992,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":19992,\"onlineRunningTime\":141.61000000000053,\"pid\":9766,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9767,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9768,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9769,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9770,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9771,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9772,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9773,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9774,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9775,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9776,\"ramUsage\":5.6,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c7566326-d9db-4fa5-a33a-52f65b47f4d3\",\"moduleSequenceNumber\":136186}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"silver-helix\",\"moduleSequenceNumber\":136186,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"silver-helix\",\"moduleSequenceNumber\":93358,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"silver-helix\",\"moduleSequenceNumber\":93359,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"silver-helix\",\"moduleSequenceNumber\":597,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"silver-helix\",\"moduleSequenceNumber\":598,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///0ebaa290-e915-41e5-9244-20fe28d018f7\",\"moduleSequenceNumber\":15860}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"moduleSequenceNumber\":599,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.ns\",\"url\":\"blob:file:///377c8913-d1f2-4646-94d9-a3b3f7f91b19\",\"moduleSequenceNumber\":8293}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"moduleSequenceNumber\":600,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":41.915999999995115,\"minDifficulty\":10,\"moneyAvailable\":138999996.6208585,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"12.1.5.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[31839,5,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79.48237183376432,\"onlineMoneyMade\":31839,\"onlineRunningTime\":141.61000000000053,\"pid\":9787,\"ramUsage\":5.6,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///537a7747-18e9-44cd-bdad-db57f11aeace\",\"moduleSequenceNumber\":136189}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9788,\"ramUsage\":5.6,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///537a7747-18e9-44cd-bdad-db57f11aeace\",\"moduleSequenceNumber\":136189}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///537a7747-18e9-44cd-bdad-db57f11aeace\",\"moduleSequenceNumber\":136189}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":136189,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":93367,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":93368,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":604,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":605,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///f4197131-f4aa-4b09-9d8a-7bddea65643e\",\"moduleSequenceNumber\":8278}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":606,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":607,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":58.1517499999884,\"minDifficulty\":5,\"moneyAvailable\":52807073.31748338,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"9.6.8.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[37636,6,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":81.96619595356945,\"onlineMoneyMade\":37636,\"onlineRunningTime\":139.81000000000063,\"pid\":9976,\"ramUsage\":5.6,\"server\":\"harakiri-sushi\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///5714dd57-c04b-457c-bf6d-7e22f3083110\",\"moduleSequenceNumber\":136209}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9977,\"ramUsage\":5.6,\"server\":\"harakiri-sushi\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///5714dd57-c04b-457c-bf6d-7e22f3083110\",\"moduleSequenceNumber\":136209}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///5714dd57-c04b-457c-bf6d-7e22f3083110\",\"moduleSequenceNumber\":136209}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":136209,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":93451,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":93452,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":611,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":612,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///0cd79186-34e7-4989-ac57-e2d745147963\",\"moduleSequenceNumber\":8279}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":613,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":614,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":49.429999999996106,\"minDifficulty\":5,\"moneyAvailable\":69901220.27466977,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"57.5.6.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[24335,4,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.06325123473864,\"onlineMoneyMade\":24335,\"onlineRunningTime\":140.61000000000058,\"pid\":9880,\"ramUsage\":5.6,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c811771d-fb04-40ee-939e-39dce0a08f28\",\"moduleSequenceNumber\":136198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9881,\"ramUsage\":5.6,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c811771d-fb04-40ee-939e-39dce0a08f28\",\"moduleSequenceNumber\":136198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9882,\"ramUsage\":5.6,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c811771d-fb04-40ee-939e-39dce0a08f28\",\"moduleSequenceNumber\":136198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9883,\"ramUsage\":5.6,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c811771d-fb04-40ee-939e-39dce0a08f28\",\"moduleSequenceNumber\":136198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.61000000000058,\"pid\":9884,\"ramUsage\":5.6,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c811771d-fb04-40ee-939e-39dce0a08f28\",\"moduleSequenceNumber\":136198}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///c811771d-fb04-40ee-939e-39dce0a08f28\",\"moduleSequenceNumber\":136198}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"phantasy\",\"moduleSequenceNumber\":136198,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"phantasy\",\"moduleSequenceNumber\":93412,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"phantasy\",\"moduleSequenceNumber\":93413,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"phantasy\",\"moduleSequenceNumber\":618,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"phantasy\",\"moduleSequenceNumber\":619,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///3edc6f8d-fd00-47ea-9377-dec5df6b196c\",\"moduleSequenceNumber\":8288}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"moduleSequenceNumber\":620,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"moduleSequenceNumber\":621,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"nectar-net\",\"the-hub\",\"crush-fitness\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":39.183999999999834,\"minDifficulty\":7,\"moneyAvailable\":338614305.52863365,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"56.5.4.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[16933,3,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":59.61177887532324,\"onlineMoneyMade\":16933,\"onlineRunningTime\":139.81000000000063,\"pid\":9979,\"ramUsage\":5.6,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///50398233-8ef0-41f1-9507-d2ce9d9bfd62\",\"moduleSequenceNumber\":136210}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9980,\"ramUsage\":5.6,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///50398233-8ef0-41f1-9507-d2ce9d9bfd62\",\"moduleSequenceNumber\":136210}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9981,\"ramUsage\":5.6,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///50398233-8ef0-41f1-9507-d2ce9d9bfd62\",\"moduleSequenceNumber\":136210}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9982,\"ramUsage\":5.6,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///50398233-8ef0-41f1-9507-d2ce9d9bfd62\",\"moduleSequenceNumber\":136210}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9983,\"ramUsage\":5.6,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///50398233-8ef0-41f1-9507-d2ce9d9bfd62\",\"moduleSequenceNumber\":136210}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///50398233-8ef0-41f1-9507-d2ce9d9bfd62\",\"moduleSequenceNumber\":136210}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"max-hardware\",\"moduleSequenceNumber\":136210,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"max-hardware\",\"moduleSequenceNumber\":93454,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"max-hardware\",\"moduleSequenceNumber\":93455,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"max-hardware\",\"moduleSequenceNumber\":625,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"max-hardware\",\"moduleSequenceNumber\":626,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///d2053f7d-4b9c-4f28-a60d-29bb3535e89a\",\"moduleSequenceNumber\":8285}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"moduleSequenceNumber\":627,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"moduleSequenceNumber\":628,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"harakiri-sushi\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":38.24000000000183,\"minDifficulty\":5,\"moneyAvailable\":178474028.09097776,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"89.7.7.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":42.225010036687294,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9778,\"ramUsage\":5.6,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///84bbe57b-4947-467a-8183-cd93f69b1174\",\"moduleSequenceNumber\":136187}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9779,\"ramUsage\":5.6,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///84bbe57b-4947-467a-8183-cd93f69b1174\",\"moduleSequenceNumber\":136187}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[184229,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":184229,\"onlineRunningTime\":141.61000000000053,\"pid\":9780,\"ramUsage\":5.6,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///84bbe57b-4947-467a-8183-cd93f69b1174\",\"moduleSequenceNumber\":136187}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9781,\"ramUsage\":5.6,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///84bbe57b-4947-467a-8183-cd93f69b1174\",\"moduleSequenceNumber\":136187}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.61000000000053,\"pid\":9782,\"ramUsage\":5.6,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///84bbe57b-4947-467a-8183-cd93f69b1174\",\"moduleSequenceNumber\":136187}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///84bbe57b-4947-467a-8183-cd93f69b1174\",\"moduleSequenceNumber\":136187}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"omega-net\",\"moduleSequenceNumber\":136187,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"omega-net\",\"moduleSequenceNumber\":93361,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"omega-net\",\"moduleSequenceNumber\":93362,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"omega-net\",\"moduleSequenceNumber\":632,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omega-net\",\"moduleSequenceNumber\":633,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///2442c727-6922-4776-868c-c6413c6db4e1\",\"moduleSequenceNumber\":8286}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omega-net\",\"moduleSequenceNumber\":634,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omega-net\",\"moduleSequenceNumber\":635,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"CSEC\",\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":28,\"hackDifficulty\":36.99662499999868,\"minDifficulty\":9,\"moneyAvailable\":254477816.46827528,\"moneyMax\":1745240725,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":209,\"serverGrowth\":39}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"49.1.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":93423,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":93424,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":93425,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":639,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":36,\"hackDifficulty\":41.29324999999658,\"minDifficulty\":12,\"moneyAvailable\":73238812.67723906,\"moneyMax\":1056748075,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":250,\"serverGrowth\":30}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"7.7.3.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[25594,4,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.06325123473864,\"onlineMoneyMade\":25594,\"onlineRunningTime\":139.81000000000063,\"pid\":9985,\"ramUsage\":5.6,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9df6ed03-9921-4003-a0f3-bb2a9269de92\",\"moduleSequenceNumber\":136211}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9986,\"ramUsage\":5.6,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9df6ed03-9921-4003-a0f3-bb2a9269de92\",\"moduleSequenceNumber\":136211}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[177913,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":177913,\"onlineRunningTime\":139.61000000000064,\"pid\":9987,\"ramUsage\":5.6,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9df6ed03-9921-4003-a0f3-bb2a9269de92\",\"moduleSequenceNumber\":136211}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":9988,\"ramUsage\":5.6,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9df6ed03-9921-4003-a0f3-bb2a9269de92\",\"moduleSequenceNumber\":136211}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":9989,\"ramUsage\":5.6,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9df6ed03-9921-4003-a0f3-bb2a9269de92\",\"moduleSequenceNumber\":136211}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9df6ed03-9921-4003-a0f3-bb2a9269de92\",\"moduleSequenceNumber\":136211}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"iron-gym\",\"moduleSequenceNumber\":136211,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"iron-gym\",\"moduleSequenceNumber\":93457,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"iron-gym\",\"moduleSequenceNumber\":93458,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"iron-gym\",\"moduleSequenceNumber\":643,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"iron-gym\",\"moduleSequenceNumber\":644,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///d594371e-3722-4fca-977c-0dd247abb05b\",\"moduleSequenceNumber\":8283}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"moduleSequenceNumber\":645,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"moduleSequenceNumber\":646,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":43.89599999999401,\"minDifficulty\":10,\"moneyAvailable\":47085994.111338824,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"70.5.6.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":28,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[22941,4,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.06325123473864,\"onlineMoneyMade\":22941,\"onlineRunningTime\":140.01000000000062,\"pid\":9957,\"ramUsage\":5.6,\"server\":\"millenium-fitness\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///cd822ffc-760b-4ec7-87a7-19c00897f862\",\"moduleSequenceNumber\":136205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9958,\"ramUsage\":5.6,\"server\":\"millenium-fitness\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///cd822ffc-760b-4ec7-87a7-19c00897f862\",\"moduleSequenceNumber\":136205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[178690,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":178690,\"onlineRunningTime\":139.81000000000063,\"pid\":9959,\"ramUsage\":5.6,\"server\":\"millenium-fitness\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///cd822ffc-760b-4ec7-87a7-19c00897f862\",\"moduleSequenceNumber\":136205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9960,\"ramUsage\":5.6,\"server\":\"millenium-fitness\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///cd822ffc-760b-4ec7-87a7-19c00897f862\",\"moduleSequenceNumber\":136205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.81000000000063,\"pid\":9961,\"ramUsage\":5.6,\"server\":\"millenium-fitness\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///cd822ffc-760b-4ec7-87a7-19c00897f862\",\"moduleSequenceNumber\":136205}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///cd822ffc-760b-4ec7-87a7-19c00897f862\",\"moduleSequenceNumber\":136205}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":136205,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":93436,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":93437,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":650,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":651,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///501d0378-f07a-40a7-b36a-288ebd7df19d\",\"moduleSequenceNumber\":15859}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":652,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.ns\",\"url\":\"blob:file:///e4fcfd18-d4e8-4b94-ad43-b1053aec5519\",\"moduleSequenceNumber\":8292}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":653,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":28.4288750000011,\"minDifficulty\":17,\"moneyAvailable\":262788715.32951584,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":514,\"serverGrowth\":29}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"95.0.8.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1039,\"serverGrowth\":60}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"25.1.0.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":93393,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":93394,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":93395,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":657,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"lexo-corp\",\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":48,\"hackDifficulty\":48,\"minDifficulty\":16,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":755,\"serverGrowth\":49}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"67.0.6.5\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[32040,5,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":74.51472359415405,\"onlineMoneyMade\":32040,\"onlineRunningTime\":141.21000000000055,\"pid\":9826,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.21000000000055,\"pid\":9827,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[182629,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":182629,\"onlineRunningTime\":141.21000000000055,\"pid\":9828,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9829,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9830,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9831,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9832,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9833,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9834,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9835,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9836,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9837,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9838,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9839,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9840,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9841,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9842,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9843,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9844,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9845,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9846,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9847,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9848,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9849,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[373595,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":373595,\"onlineRunningTime\":141.01000000000056,\"pid\":9850,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9851,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9852,\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///be5909db-14c4-40a6-bac0-c3300cd7c2de\",\"moduleSequenceNumber\":136195}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":136195,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":93403,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":93404,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":661,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"nova-med\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":525,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"33.9.1.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":123.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[30496,5,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":74.51472359415405,\"onlineMoneyMade\":30496,\"onlineRunningTime\":140.2100000000006,\"pid\":9928,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.2100000000006,\"pid\":9929,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[179471,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":179471,\"onlineRunningTime\":140.2100000000006,\"pid\":9930,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.2100000000006,\"pid\":9931,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.2100000000006,\"pid\":9932,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.2100000000006,\"pid\":9933,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9934,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9935,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9936,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9937,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9938,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9939,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9940,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9941,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9942,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9943,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9944,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9945,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9946,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9947,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9948,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.01000000000062,\"pid\":9949,\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2f3e2da1-40f5-4ce5-a11a-08c0f56379e3\",\"moduleSequenceNumber\":136203}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":136203,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":93430,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":93431,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":665,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":666,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///988cfe94-2bb8-4dcd-a850-940f6398cda0\",\"moduleSequenceNumber\":15884}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":667,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.ns\",\"url\":\"blob:file:///cbaa7d2e-cfca-4144-a986-593e95afe374\",\"moduleSequenceNumber\":8297}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":668,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"avmnite-02h\",\"rho-construction\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":359,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"77.9.6.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[18808,3,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":59.61177887532324,\"onlineMoneyMade\":18808,\"onlineRunningTime\":140.4100000000006,\"pid\":9925,\"ramUsage\":5.6,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///20a41363-8489-4c5a-a6f2-a996a44d1705\",\"moduleSequenceNumber\":136202}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":140.2100000000006,\"pid\":9926,\"ramUsage\":5.6,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///20a41363-8489-4c5a-a6f2-a996a44d1705\",\"moduleSequenceNumber\":136202}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///20a41363-8489-4c5a-a6f2-a996a44d1705\",\"moduleSequenceNumber\":136202}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":136202,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":93427,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":93428,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":672,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":673,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///ca94fa1d-3382-4780-b158-880121ae0f68\",\"moduleSequenceNumber\":8282}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":674,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":675,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"phantasy\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":211,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"33.7.9.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":11.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[24847,4,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.06325123473864,\"onlineMoneyMade\":24847,\"onlineRunningTime\":141.01000000000056,\"pid\":9854,\"ramUsage\":5.6,\"server\":\".\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///ed2a6474-3a9a-4472-9e88-69543002fa09\",\"moduleSequenceNumber\":136196}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":126.44922791735232,\"onlineMoneyMade\":0,\"onlineRunningTime\":141.01000000000056,\"pid\":9855,\"ramUsage\":5.6,\"server\":\".\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///ed2a6474-3a9a-4472-9e88-69543002fa09\",\"moduleSequenceNumber\":136196}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///ed2a6474-3a9a-4472-9e88-69543002fa09\",\"moduleSequenceNumber\":136196}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\".\",\"moduleSequenceNumber\":136196,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\".\",\"moduleSequenceNumber\":93406,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\".\",\"moduleSequenceNumber\":93407,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\".\",\"moduleSequenceNumber\":679,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":532,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"85.9.5.8\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":5.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[12074,2,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":57.127954755518104,\"onlineMoneyMade\":12074,\"onlineRunningTime\":141.61000000000053,\"pid\":9764,\"ramUsage\":5.6,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb198f37-a1ef-4545-9c1e-1efe3e6e052b\",\"moduleSequenceNumber\":136185}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb198f37-a1ef-4545-9c1e-1efe3e6e052b\",\"moduleSequenceNumber\":136185}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"CSEC\",\"moduleSequenceNumber\":136185,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"CSEC\",\"moduleSequenceNumber\":93355,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"CSEC\",\"moduleSequenceNumber\":93356,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"CSEC\",\"moduleSequenceNumber\":683,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"CSEC\",\"moduleSequenceNumber\":684,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///d127659b-6abb-479c-ac60-8287fbdc5127\",\"moduleSequenceNumber\":8274}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"moduleSequenceNumber\":685,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"moduleSequenceNumber\":686,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"joesguns\",\"silver-helix\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":59,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"92.5.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"59.8.5.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":0}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"67.1.0.2\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"httpPortOpen\":false,\"ip\":\"66.3.8.4\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5112,1,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":44.70883415649243,\"onlineMoneyMade\":5112,\"onlineRunningTime\":139.61000000000064,\"pid\":9991,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":9992,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[177139,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":177139,\"onlineRunningTime\":139.61000000000064,\"pid\":9993,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":9994,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":9995,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":9996,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":9997,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":9998,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":9999,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":10000,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.61000000000064,\"pid\":10001,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10002,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10003,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10004,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10005,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10006,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10007,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10008,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10009,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10010,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10011,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10012,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10013,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10014,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10015,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10016,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10017,\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///70332bc8-a846-452c-9b18-5076eb8bb88e\",\"moduleSequenceNumber\":136212}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"moduleSequenceNumber\":136212,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"moduleSequenceNumber\":93460,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"moduleSequenceNumber\":93461,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-5db7f80d-a25d-41b5-b5fd-da294800100b\",\"moduleSequenceNumber\":690,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"httpPortOpen\":false,\"ip\":\"21.7.1.6\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[18206,3,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":59.61177887532324,\"onlineMoneyMade\":18206,\"onlineRunningTime\":139.41000000000065,\"pid\":10019,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10020,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10021,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10022,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10023,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10024,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.41000000000065,\"pid\":10025,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10026,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10027,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10028,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10029,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10030,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10031,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10032,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10033,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10034,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10035,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10036,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10037,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10038,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10039,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10040,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10041,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10042,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[371727,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":371727,\"onlineRunningTime\":139.21000000000066,\"pid\":10043,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10044,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10045,\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///64e67ec0-e2eb-4731-85f7-662758120843\",\"moduleSequenceNumber\":136213}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"moduleSequenceNumber\":136213,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"moduleSequenceNumber\":93463,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"moduleSequenceNumber\":93464,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-b7d06b0d-76b7-422d-944d-335e931da52d\",\"moduleSequenceNumber\":694,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"httpPortOpen\":false,\"ip\":\"76.9.0.0\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[26567,4,2,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.06325123473864,\"onlineMoneyMade\":26567,\"onlineRunningTime\":139.21000000000066,\"pid\":10047,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10048,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10049,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10050,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10051,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10052,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10053,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10054,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.21000000000066,\"pid\":10055,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10056,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10057,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10058,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10059,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10060,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10061,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10062,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10063,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10064,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10065,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10066,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10067,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10068,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10069,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10070,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.01000000000067,\"pid\":10071,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10072,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10073,\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///8669a100-2cf3-43b1-8daa-c2bbfd345937\",\"moduleSequenceNumber\":136214}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"moduleSequenceNumber\":136214,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"moduleSequenceNumber\":93466,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"moduleSequenceNumber\":93467,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-1253164e-bebc-497a-950b-accac14cc3ed\",\"moduleSequenceNumber\":698,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"httpPortOpen\":false,\"ip\":\"77.2.7.4\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[13011,2,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":57.127954755518104,\"onlineMoneyMade\":13011,\"onlineRunningTime\":138.81000000000068,\"pid\":10075,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10076,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[176368,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":176368,\"onlineRunningTime\":138.81000000000068,\"pid\":10077,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10078,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10079,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10080,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10081,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10082,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10083,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10084,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10085,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10086,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10087,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10088,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10089,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10090,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.81000000000068,\"pid\":10091,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10092,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10093,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10094,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10095,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10096,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10097,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10098,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[369869,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":369869,\"onlineRunningTime\":138.6100000000007,\"pid\":10099,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10100,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10101,\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///37032d96-6a3f-447f-a8af-39e38ca30e3a\",\"moduleSequenceNumber\":136215}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"moduleSequenceNumber\":136215,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"moduleSequenceNumber\":93469,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"moduleSequenceNumber\":93470,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-ad796d97-3271-4faf-b0e3-8054f38e817f\",\"moduleSequenceNumber\":702,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"httpPortOpen\":false,\"ip\":\"88.4.0.9\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[13007,2,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":57.127954755518104,\"onlineMoneyMade\":13007,\"onlineRunningTime\":138.6100000000007,\"pid\":10103,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10104,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[175601,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":175601,\"onlineRunningTime\":138.6100000000007,\"pid\":10105,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10106,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10107,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10108,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10109,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10110,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10111,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10112,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10113,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10114,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10115,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10116,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10117,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.6100000000007,\"pid\":10118,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10119,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10120,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10121,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10122,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10123,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10124,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10125,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10126,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[368020,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":368020,\"onlineRunningTime\":138.4100000000007,\"pid\":10127,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10128,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10129,\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7ac5c9fd-e515-406b-adbb-6fa13bf1eb67\",\"moduleSequenceNumber\":136216}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"moduleSequenceNumber\":136216,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"moduleSequenceNumber\":93472,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"moduleSequenceNumber\":93473,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-8f55ff8e-e002-46f7-a822-94f4564606c2\",\"moduleSequenceNumber\":706,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"httpPortOpen\":false,\"ip\":\"60.4.1.3\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[27074,4,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.03089947434891,\"onlineMoneyMade\":27074,\"onlineRunningTime\":138.4100000000007,\"pid\":10131,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10132,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10133,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10134,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10135,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10136,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10137,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10138,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10139,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10140,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10141,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.4100000000007,\"pid\":10142,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10143,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10144,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10145,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10146,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10147,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10148,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10149,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10150,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10151,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10152,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10153,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10154,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10155,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10156,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10157,\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///fb9c0b22-f9f2-4ab3-b2d7-e2548ac55c45\",\"moduleSequenceNumber\":136624}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"moduleSequenceNumber\":136624,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"moduleSequenceNumber\":93475,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"moduleSequenceNumber\":93476,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-5abb9798-f2c5-4064-92c9-d93fc5daf0eb\",\"moduleSequenceNumber\":710,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"httpPortOpen\":false,\"ip\":\"90.5.4.0\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[21278,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":21278,\"onlineRunningTime\":138.21000000000072,\"pid\":10159,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.21000000000072,\"pid\":10160,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[174837,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":174837,\"onlineRunningTime\":138.01000000000073,\"pid\":10161,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10162,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10163,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10164,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10165,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10166,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10167,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10168,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10169,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10170,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10171,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10172,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10173,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10174,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10175,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10176,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10177,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10178,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10179,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10180,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10181,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":138.01000000000073,\"pid\":10182,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10183,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10184,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10185,\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///494be897-c7fe-4a97-be02-a011a6ed4399\",\"moduleSequenceNumber\":136625}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"moduleSequenceNumber\":136625,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"moduleSequenceNumber\":93478,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"moduleSequenceNumber\":93479,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-b0a82c70-99e9-478c-b89a-d91001373beb\",\"moduleSequenceNumber\":714,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"httpPortOpen\":false,\"ip\":\"98.6.6.5\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[18513,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":18513,\"onlineRunningTime\":137.81000000000074,\"pid\":10187,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10188,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[174076,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":174076,\"onlineRunningTime\":137.81000000000074,\"pid\":10189,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10190,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10191,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10192,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10193,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10194,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10195,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10196,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10197,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10198,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10199,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10200,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10201,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10202,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10203,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10204,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.81000000000074,\"pid\":10205,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10206,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10207,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10208,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10209,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10210,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10211,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10212,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10213,\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///a54c2a88-2ca4-4964-947c-861ebc8c9668\",\"moduleSequenceNumber\":136626}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"moduleSequenceNumber\":136626,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"moduleSequenceNumber\":93481,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"moduleSequenceNumber\":93482,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-620ebcdb-0933-460d-a1c8-dcef84f95a5d\",\"moduleSequenceNumber\":718,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"httpPortOpen\":false,\"ip\":\"24.4.7.5\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[19591,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":19591,\"onlineRunningTime\":137.61000000000075,\"pid\":10215,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10216,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[173319,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":173319,\"onlineRunningTime\":137.61000000000075,\"pid\":10217,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10218,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10219,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10220,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10221,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10222,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10223,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10224,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10225,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10226,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10227,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10228,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10229,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10230,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10231,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10232,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10233,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.61000000000075,\"pid\":10234,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10235,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10236,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10237,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10238,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[366180,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":366180,\"onlineRunningTime\":137.41000000000076,\"pid\":10239,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10240,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10241,\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///9d72534f-bc7a-4845-9584-81ae1c0092a9\",\"moduleSequenceNumber\":136627}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"moduleSequenceNumber\":136627,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"moduleSequenceNumber\":93484,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"moduleSequenceNumber\":93485,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-10b48c7c-20b7-4105-b3f3-bbd986a0e626\",\"moduleSequenceNumber\":722,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"httpPortOpen\":false,\"ip\":\"93.0.0.8\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[20308,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":20308,\"onlineRunningTime\":137.41000000000076,\"pid\":10243,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10244,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[172565,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":172565,\"onlineRunningTime\":137.41000000000076,\"pid\":10245,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10246,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10247,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10248,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10249,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10250,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10251,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10252,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.41000000000076,\"pid\":10253,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10254,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10255,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10256,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10257,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10258,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10259,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10260,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10261,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10262,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10263,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10264,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10265,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10266,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[364349,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":364349,\"onlineRunningTime\":137.21000000000078,\"pid\":10267,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10268,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10269,\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1e5950e9-7de2-45d6-b35d-1f684f556cc5\",\"moduleSequenceNumber\":136628}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"moduleSequenceNumber\":136628,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"moduleSequenceNumber\":93487,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"moduleSequenceNumber\":93488,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-7dd5d0f0-8fb4-4c91-8d30-12fa1721dc0c\",\"moduleSequenceNumber\":726,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"httpPortOpen\":false,\"ip\":\"2.8.0.0\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[7464,1,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":49.6764823961027,\"onlineMoneyMade\":7464,\"onlineRunningTime\":137.21000000000078,\"pid\":10271,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10272,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000078,\"pid\":10273,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10274,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10275,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10276,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10277,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10278,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10279,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10280,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10281,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10282,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10283,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10284,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10285,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10286,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10287,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10288,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10289,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10290,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10291,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10292,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10293,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10294,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[362528,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":362528,\"onlineRunningTime\":137.0100000000008,\"pid\":10295,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10296,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10297,\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///b558008a-a175-4892-923d-dceb2a6de861\",\"moduleSequenceNumber\":136629}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"moduleSequenceNumber\":136629,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"moduleSequenceNumber\":93490,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"moduleSequenceNumber\":93491,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-8fe53619-b794-4f80-8253-0ad461f9fee1\",\"moduleSequenceNumber\":730,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"httpPortOpen\":false,\"ip\":\"84.0.5.3\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[25756,4,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.03089947434891,\"onlineMoneyMade\":25756,\"onlineRunningTime\":137.0100000000008,\"pid\":10299,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10300,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":76.77274552124963,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10301,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10302,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.0100000000008,\"pid\":10303,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10304,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10305,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10306,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10307,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10308,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10309,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10310,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10311,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10312,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10313,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10314,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10315,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10316,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10317,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10318,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10319,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10320,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10321,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10322,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[360716,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":360716,\"onlineRunningTime\":136.8100000000008,\"pid\":10323,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10324,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10325,\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///2710faa8-ac46-45c0-a627-2dbec03eaabd\",\"moduleSequenceNumber\":136630}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"moduleSequenceNumber\":136630,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"moduleSequenceNumber\":93493,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"moduleSequenceNumber\":93494,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-30934766-7170-4b01-9ac0-2c0fa7d97c9e\",\"moduleSequenceNumber\":734,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"httpPortOpen\":false,\"ip\":\"29.8.9.2\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[20964,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":20964,\"onlineRunningTime\":136.8100000000008,\"pid\":10327,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10328,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[171815,1,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":90.32087708382309,\"onlineMoneyMade\":171815,\"onlineRunningTime\":136.8100000000008,\"pid\":10329,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10330,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.8100000000008,\"pid\":10331,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10332,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10333,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10334,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10335,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10336,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10337,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10338,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10339,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10340,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10341,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10342,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10343,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.6100000000008,\"pid\":10344,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10345,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10346,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10347,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10348,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10349,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10350,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10351,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10352,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10353,\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7f18711b-67c5-4edb-8a28-a2f74f897d5b\",\"moduleSequenceNumber\":136631}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"moduleSequenceNumber\":136631,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"moduleSequenceNumber\":93496,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"moduleSequenceNumber\":93497,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-3d37cb13-8e00-4aa1-8049-5b88d3c740ba\",\"moduleSequenceNumber\":738,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"httpPortOpen\":false,\"ip\":\"8.6.1.7\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[32801,5,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":79.48237183376432,\"onlineMoneyMade\":32801,\"onlineRunningTime\":136.41000000000082,\"pid\":10355,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10356,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10357,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10358,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10359,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10360,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10361,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10362,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10363,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10364,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10365,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.41000000000082,\"pid\":10366,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10367,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10368,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10369,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10370,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10371,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10372,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10373,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10374,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10375,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10376,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10377,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10378,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[358913,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":358913,\"onlineRunningTime\":136.21000000000083,\"pid\":10379,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10380,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10381,\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///3f7c85d6-bb05-433e-9ae8-a12f81a1ab3d\",\"moduleSequenceNumber\":136632}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"moduleSequenceNumber\":136632,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"moduleSequenceNumber\":93499,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"moduleSequenceNumber\":93500,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-cb2cd9a9-dbe5-47c4-92e0-de454cab6067\",\"moduleSequenceNumber\":742,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"httpPortOpen\":false,\"ip\":\"40.4.8.2\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[11784,2,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":57.127954755518104,\"onlineMoneyMade\":11784,\"onlineRunningTime\":136.21000000000083,\"pid\":10383,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10384,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10385,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10386,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10387,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10388,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10389,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10390,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10391,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10392,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10393,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10394,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.21000000000083,\"pid\":10395,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10396,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10397,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10398,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10399,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10400,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10401,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10402,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10403,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10404,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10405,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10406,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10407,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10408,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10409,\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///25ba33ea-6f99-4884-8189-5857650e46a3\",\"moduleSequenceNumber\":136633}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"moduleSequenceNumber\":136633,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"moduleSequenceNumber\":93502,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"moduleSequenceNumber\":93503,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-7eb83425-9cad-4e8b-9715-2461f3a993d3\",\"moduleSequenceNumber\":746,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"httpPortOpen\":false,\"ip\":\"13.1.2.9\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[25417,4,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.03089947434891,\"onlineMoneyMade\":25417,\"onlineRunningTime\":136.01000000000084,\"pid\":10411,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10412,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10413,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10414,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10415,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10416,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10417,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.01000000000084,\"pid\":10418,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10419,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10420,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10421,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10422,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10423,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10424,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10425,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10426,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10427,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10428,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10429,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10430,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10431,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10432,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10433,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10434,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10435,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10436,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.81000000000085,\"pid\":10437,\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///71baf78f-88db-49e3-8a55-1af564964fc9\",\"moduleSequenceNumber\":136634}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"moduleSequenceNumber\":136634,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"moduleSequenceNumber\":93505,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"moduleSequenceNumber\":93506,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-fba53022-68dd-4b83-b10b-c5ace5f885db\",\"moduleSequenceNumber\":750,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"httpPortOpen\":false,\"ip\":\"89.8.4.5\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[18995,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":18995,\"onlineRunningTime\":135.81000000000085,\"pid\":10439,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10440,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10441,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10442,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10443,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10444,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10445,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10446,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10447,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10448,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10449,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10450,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10451,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10452,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10453,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10454,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10455,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10456,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10457,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.61000000000087,\"pid\":10458,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10459,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10460,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10461,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10462,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10463,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10464,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10465,\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///0b95a140-ebfc-44d2-aea3-10f9a11660ed\",\"moduleSequenceNumber\":136635}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"moduleSequenceNumber\":136635,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"moduleSequenceNumber\":93508,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"moduleSequenceNumber\":93509,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-4b791a04-5cd8-49d8-99cf-ac1ffb7cf3ae\",\"moduleSequenceNumber\":754,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"httpPortOpen\":false,\"ip\":\"65.2.5.1\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[20758,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":20758,\"onlineRunningTime\":135.41000000000088,\"pid\":10467,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10468,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10469,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10470,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10471,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10472,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10473,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10474,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10475,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":54.19252625029386,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10476,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10477,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10478,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10479,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10480,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10481,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.41000000000088,\"pid\":10482,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10483,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10484,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10485,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10486,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10487,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10488,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10489,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10490,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[357119,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":357119,\"onlineRunningTime\":135.2100000000009,\"pid\":10491,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10492,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10493,\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///df9559e3-d847-4daf-b6bc-bc1f51f2a3d6\",\"moduleSequenceNumber\":136636}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"moduleSequenceNumber\":136636,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"moduleSequenceNumber\":93511,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"moduleSequenceNumber\":93512,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-1a08471d-4686-47dd-b81b-e3588e2414c9\",\"moduleSequenceNumber\":758,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"httpPortOpen\":false,\"ip\":\"94.1.8.2\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[7128,1,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":49.6764823961027,\"onlineMoneyMade\":7128,\"onlineRunningTime\":135.2100000000009,\"pid\":10495,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10496,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10497,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10498,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10499,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10500,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10501,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10502,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10503,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27.09626312514693,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10504,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10505,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10506,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10507,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10508,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10509,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10510,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.2100000000009,\"pid\":10511,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10512,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10513,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10514,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10515,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10516,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10517,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10518,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[355334,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":355334,\"onlineRunningTime\":135.0100000000009,\"pid\":10519,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10520,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10521,\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///7fe81e38-385c-431c-8250-72f0811ac59f\",\"moduleSequenceNumber\":136637}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"moduleSequenceNumber\":136637,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"moduleSequenceNumber\":93514,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"moduleSequenceNumber\":93515,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-0b18a33e-632a-4217-b7eb-75bea0c315e6\",\"moduleSequenceNumber\":762,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"httpPortOpen\":false,\"ip\":\"85.4.9.7\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[18833,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":18833,\"onlineRunningTime\":135.0100000000009,\"pid\":10523,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10524,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10525,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10526,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10527,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10528,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10529,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10530,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10531,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27.09626312514693,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10532,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10533,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10534,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10535,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10536,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10537,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":135.0100000000009,\"pid\":10538,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10539,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10540,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10541,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10542,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10543,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10544,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10545,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10546,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[353558,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":353558,\"onlineRunningTime\":134.8100000000009,\"pid\":10547,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10548,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.8100000000009,\"pid\":10549,\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///feb85b46-5148-44e9-9953-4513ffc928e2\",\"moduleSequenceNumber\":136638}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"moduleSequenceNumber\":136638,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"moduleSequenceNumber\":93517,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"moduleSequenceNumber\":93518,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-f1099dac-c7e1-4139-8a19-63446335d789\",\"moduleSequenceNumber\":766,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"httpPortOpen\":false,\"ip\":\"49.8.2.5\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[18480,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":18480,\"onlineRunningTime\":134.8100000000009,\"pid\":10551,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10552,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10553,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10554,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10555,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10556,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10557,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10558,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10559,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27.09626312514693,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10560,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10561,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10562,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10563,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10564,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10565,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10566,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10567,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10568,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10569,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10570,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10571,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10572,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10573,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.61000000000092,\"pid\":10574,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[351791,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":351791,\"onlineRunningTime\":134.61000000000092,\"pid\":10575,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10576,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10577,\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///6ed78d92-9f5a-458c-81d1-23917e786b0b\",\"moduleSequenceNumber\":136639}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"moduleSequenceNumber\":136639,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"moduleSequenceNumber\":93520,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"moduleSequenceNumber\":93521,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-d73b88fc-7900-49ba-9cd1-20e8a25431f0\",\"moduleSequenceNumber\":770,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"httpPortOpen\":false,\"ip\":\"28.2.7.2\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[24459,4,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.03089947434891,\"onlineMoneyMade\":24459,\"onlineRunningTime\":134.41000000000093,\"pid\":10579,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10580,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10581,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10582,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10583,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10584,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10585,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10586,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10587,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27.09626312514693,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10588,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10589,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10590,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10591,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10592,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10593,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10594,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10595,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10596,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10597,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10598,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10599,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10600,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10601,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10602,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10603,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10604,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.41000000000093,\"pid\":10605,\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///1a02a6f8-8474-4b03-9b7b-8ff011ba55c5\",\"moduleSequenceNumber\":136640}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"moduleSequenceNumber\":136640,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"moduleSequenceNumber\":93523,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"moduleSequenceNumber\":93524,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-e9306103-e1a1-4001-acac-f6c31268f2e1\",\"moduleSequenceNumber\":774,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"httpPortOpen\":false,\"ip\":\"20.6.6.6\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[18237,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":18237,\"onlineRunningTime\":134.21000000000095,\"pid\":10607,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10608,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10609,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10610,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10611,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10612,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10613,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10614,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10615,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27.09626312514693,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10616,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10617,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10618,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10619,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10620,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10621,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10622,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10623,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10624,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10625,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10626,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10627,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10628,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10629,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.21000000000095,\"pid\":10630,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28.225274088694718,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10631,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10632,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10633,\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///f91abc70-caa9-4403-8c3d-3da852cbf4c3\",\"moduleSequenceNumber\":136641}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"moduleSequenceNumber\":136641,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"moduleSequenceNumber\":93526,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"moduleSequenceNumber\":93527,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-b023f924-a20b-484e-8b47-8fd7fb30a208\",\"moduleSequenceNumber\":778,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"httpPortOpen\":false,\"ip\":\"96.4.8.0\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[18224,3,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64.57942711493351,\"onlineMoneyMade\":18224,\"onlineRunningTime\":134.01000000000096,\"pid\":10635,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10636,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10637,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10638,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10639,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10640,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10641,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10642,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10643,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27.09626312514693,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10644,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":134.01000000000096,\"pid\":10645,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10646,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10647,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10648,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10649,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10650,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10651,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10652,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10653,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10654,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10655,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10656,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10657,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10658,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[350033,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":350033,\"onlineRunningTime\":133.81000000000097,\"pid\":10659,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10660,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10661,\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///164d0f46-84c0-40de-8172-edffa7eda6c7\",\"moduleSequenceNumber\":136642}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"moduleSequenceNumber\":136642,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"moduleSequenceNumber\":93529,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"moduleSequenceNumber\":93530,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-2048-2e65ca20-edf3-4a0e-8746-ff2cde6ed09b\",\"moduleSequenceNumber\":782,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"httpPortOpen\":false,\"ip\":\"96.0.4.2\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":151.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[24938,4,2,1]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.03089947434891,\"onlineMoneyMade\":24938,\"onlineRunningTime\":133.81000000000097,\"pid\":10663,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,6,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":108.3850525005877,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10664,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,4,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":72.25670166705848,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10665,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10666,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,3,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":67.74065781286731,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.81000000000097,\"pid\":10667,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10668,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10669,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10670,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10671,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27.09626312514693,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10672,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":31.612306979338083,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10673,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10674,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10675,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10676,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10677,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10678,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10679,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10680,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10681,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10682,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10683,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10684,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10685,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10686,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[348283,1,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":45.160438541911546,\"onlineMoneyMade\":348283,\"onlineRunningTime\":133.61000000000098,\"pid\":10687,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1,0]},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":22.580219270955773,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10688,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"/basic/hacknshare.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":133.61000000000098,\"pid\":10689,\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"threads\":1,\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"const targetChance = 60;\\r\\nconst targetMoney = 0.75;\\r\\nexport async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        if (ns.hackAnalyzeChance(target) * 100 < targetChance) {\\r\\n            await ns.weaken(target);\\r\\n        }\\r\\n        else if (ns.getServerMoneyAvailable(target) <\\r\\n            ns.getServerMaxMoney(target) * targetMoney) {\\r\\n            await ns.grow(target);\\r\\n        }\\r\\n        else {\\r\\n            await ns.hack(target);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hacknshare.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/basic/hacknshare.js\",\"url\":\"blob:file:///db77fdde-caee-4e75-a254-dd8b4f9006c2\",\"moduleSequenceNumber\":136643}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"moduleSequenceNumber\":136643,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (true) {\\r\\n        await ns.share();\\r\\n        await ns.grow(target, {\\r\\n            stock: true,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/grownshare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.15,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"moduleSequenceNumber\":93532,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    const target = ns.args[0].toString();\\r\\n    while (ns.getServerSecurityLevel(target) >\\r\\n        ns.getServerMinSecurityLevel(target) + 5)\\r\\n        await ns.weaken(target);\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.grow(target);\\r\\n        await ns.weaken(target);\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\\r\\n\",\"filename\":\"/basic/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.2,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"moduleSequenceNumber\":93533,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    await ns.installBackdoor();\\n}\",\"filename\":\"/basic/backdoor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"pserv-32768-fca4508e-1813-455d-8607-75180dc4743d\",\"moduleSequenceNumber\":786,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":32}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":23.964,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":25.3044,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":42.6323,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":33.7588,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0249,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":18.1578,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.01,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.1161,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":73.7498,\"isBanned\":false,\"isMember\":true,\"name\":\"BitRunners\",\"playerReputation\":899.4769187447564}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":121.1943,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":105587.60215188902}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":115.8133,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":104771.57304134413}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":2.6456,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":110.5354,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":168468.04079490647}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":108.0499,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":101252.33817248278}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":24.5674,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":302465.47833517706}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":97.6801,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":96427.70837015627}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{\"nuke\":\"run nuke.js\",\"profile\":\"run ServerProfiler.exe\",\"scanall\":\"scan-analyze\",\"scn\":\"cls;scan-analyze 10\",\"track\":\"run fl1ght.exe\",\"cb\":\"connect\",\"crackall\":\"run advanced/crackall.js\",\"restart\":\"killall;run daemon.js\",\"hackall\":\"run advanced/hackall.js\",\"darkweb\":\"home;connect darkweb\",\"killeverything\":\"killall;run advanced/killall.js\",\"scn5\":\"cls;scan-analyze 5\",\"scn3\":\"cls;scan-analyze 3\",\"listall\":\"run advanced/listall.js\",\"find\":\"run advanced/find.js\",\"killstocks\":\"kill /stocks/daemon.js\",\"liquidate\":\"run stocks/liquidate.js\",\"init\":\"wget http://localhost:8000/init.js init.js; wget http://localhost:8000/deployment/self-update.js deployment/self-update.js\"}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":true}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":true}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":11807.416007407202,\"lastPrice\":11801.85872150255,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.4,\"b\":false,\"otlkMag\":21.99137714186213,\"otlkMagForecast\":30.470096805553435,\"cap\":230156685,\"spreadPerc\":0.1,\"shareTxForMovement\":35886,\"shareTxUntilMovement\":35886,\"totalShares\":117100000,\"maxShares\":23400000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":20807.037457128215,\"lastPrice\":20795.531567022976,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.47,\"b\":false,\"otlkMag\":18.44498636248903,\"otlkMagForecast\":31.523947961145513,\"cap\":229126332,\"spreadPerc\":0.1,\"shareTxForMovement\":79725,\"shareTxUntilMovement\":79725,\"totalShares\":79500000,\"maxShares\":15900000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":41258.718814087384,\"lastPrice\":41220.868971019794,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":true,\"otlkMag\":11.149691474140448,\"otlkMagForecast\":61.041569806221595,\"cap\":24507307,\"spreadPerc\":0.4,\"shareTxForMovement\":67851,\"shareTxUntilMovement\":67851,\"totalShares\":70500000,\"maxShares\":14100000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":61580.88961635186,\"lastPrice\":61528.01489383463,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":9.935462650269919,\"otlkMagForecast\":61.19422075639977,\"cap\":236602928,\"spreadPerc\":0.3,\"shareTxForMovement\":35857,\"shareTxUntilMovement\":35857,\"totalShares\":113700000,\"maxShares\":22700000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":15454.613080366533,\"lastPrice\":15465.71096764231,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":false,\"otlkMag\":14.615270246490935,\"otlkMagForecast\":34.53455087687934,\"cap\":377238536,\"spreadPerc\":0.2,\"shareTxForMovement\":83108,\"shareTxUntilMovement\":83108,\"totalShares\":47600000,\"maxShares\":9500000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":27829.635504939466,\"lastPrice\":27865.017605410794,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.08,\"b\":false,\"otlkMag\":16.515681227127597,\"otlkMagForecast\":33.972294065949754,\"cap\":1285824765,\"spreadPerc\":1,\"shareTxForMovement\":40129,\"shareTxUntilMovement\":40129,\"totalShares\":25100000,\"maxShares\":5000000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":32157.681286319897,\"lastPrice\":32186.83056346556,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":false,\"otlkMag\":10.4215151044593,\"otlkMagForecast\":40.30458987006554,\"cap\":337320170,\"spreadPerc\":0.3,\"shareTxForMovement\":45064,\"shareTxUntilMovement\":45064,\"totalShares\":96900000,\"maxShares\":19400000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":42213.65522365932,\"lastPrice\":42274.28209082635,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.22,\"b\":true,\"otlkMag\":9.138603946269514,\"otlkMagForecast\":58.26322844961767,\"cap\":519423178,\"spreadPerc\":1,\"shareTxForMovement\":54793,\"shareTxUntilMovement\":54793,\"totalShares\":55800000,\"maxShares\":11200000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":7408.25473925101,\"lastPrice\":7415.667622683234,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.85,\"b\":true,\"otlkMag\":6.482525316905926,\"otlkMagForecast\":55.40206247622177,\"cap\":80951187,\"spreadPerc\":0.6,\"shareTxForMovement\":59221,\"shareTxUntilMovement\":59221,\"totalShares\":49500000,\"maxShares\":9900000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":4297.426403802773,\"lastPrice\":4300.46177658731,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":10.365253423897657,\"otlkMagForecast\":58.68251247205579,\"cap\":89348900,\"spreadPerc\":0.2,\"shareTxForMovement\":48701,\"shareTxUntilMovement\":48701,\"totalShares\":71600000,\"maxShares\":14300000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":20733.114603789236,\"lastPrice\":20746.782601989566,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":true,\"otlkMag\":7.270779771063887,\"otlkMagForecast\":58.690226366660305,\"cap\":220304825,\"spreadPerc\":0.4,\"shareTxForMovement\":82571,\"shareTxUntilMovement\":82571,\"totalShares\":59500000,\"maxShares\":11900000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":7906.906250139866,\"lastPrice\":7913.887291170701,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":false,\"otlkMag\":6.6090199688972495,\"otlkMagForecast\":42.19143404498237,\"cap\":220649674,\"spreadPerc\":0.2,\"shareTxForMovement\":55584,\"shareTxUntilMovement\":55584,\"totalShares\":103800000,\"maxShares\":20800000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":16749.644349914437,\"lastPrice\":16737.625137523,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":6.49436533927634,\"otlkMagForecast\":56.99614669993944,\"cap\":122181672,\"spreadPerc\":0.5,\"shareTxForMovement\":102743,\"shareTxUntilMovement\":102743,\"totalShares\":34300000,\"maxShares\":6900000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":32018.29495205974,\"lastPrice\":31997.2012718406,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":true,\"otlkMag\":8.135577788652316,\"otlkMagForecast\":60.290718813054866,\"cap\":104476298,\"spreadPerc\":0.2,\"shareTxForMovement\":82795,\"shareTxUntilMovement\":82795,\"totalShares\":36500000,\"maxShares\":7300000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":6318.885271476857,\"lastPrice\":6323.199675392153,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":true,\"otlkMag\":5.548926543561629,\"otlkMagForecast\":53.86718728306683,\"cap\":110362025,\"spreadPerc\":0.9,\"shareTxForMovement\":54650,\"shareTxUntilMovement\":54650,\"totalShares\":50600000,\"maxShares\":10100000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":3309.469300616426,\"lastPrice\":3312.274367305865,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.72,\"b\":true,\"otlkMag\":5.080623976794372,\"otlkMagForecast\":51.36621380634157,\"cap\":198914050,\"spreadPerc\":0.7,\"shareTxForMovement\":108486,\"shareTxUntilMovement\":108486,\"totalShares\":67800000,\"maxShares\":13600000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":75403.17066576162,\"lastPrice\":75467.96914386546,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":9.889808504163764,\"otlkMagForecast\":59.44698336285685,\"cap\":374558131,\"spreadPerc\":1.1,\"shareTxForMovement\":45394,\"shareTxUntilMovement\":45394,\"totalShares\":28700000,\"maxShares\":5700000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":7042.726813456178,\"lastPrice\":7038.004261780595,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.57,\"b\":true,\"otlkMag\":9.196244798691467,\"otlkMagForecast\":58.768620067487625,\"cap\":36940745,\"spreadPerc\":1,\"shareTxForMovement\":94968,\"shareTxUntilMovement\":94968,\"totalShares\":49700000,\"maxShares\":9900000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":42130.75133610868,\"lastPrice\":42091.11142078185,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":5.910893129216006,\"otlkMagForecast\":55.717538507383736,\"cap\":474368055,\"spreadPerc\":0.4,\"shareTxForMovement\":63895,\"shareTxUntilMovement\":63895,\"totalShares\":30700000,\"maxShares\":6100000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":510.62875745766127,\"lastPrice\":509.070627329587,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.6,\"b\":true,\"otlkMag\":23.621047474298564,\"otlkMagForecast\":73.35133859390571,\"cap\":63766214,\"spreadPerc\":0.6,\"shareTxForMovement\":20080,\"shareTxUntilMovement\":20080,\"totalShares\":105800000,\"maxShares\":21200000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":7509.566591990765,\"lastPrice\":7498.6205930190135,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.24,\"b\":false,\"otlkMag\":6.5329021791387225,\"otlkMagForecast\":43.93247664444011,\"cap\":183821915,\"spreadPerc\":0.7,\"shareTxForMovement\":72566,\"shareTxUntilMovement\":72566,\"totalShares\":38000000,\"maxShares\":7600000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":9224.65422885274,\"lastPrice\":9217.817930426134,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":true,\"otlkMag\":6.174020001171325,\"otlkMagForecast\":55.77406138865318,\"cap\":56240354,\"spreadPerc\":0.7,\"shareTxForMovement\":109242,\"shareTxUntilMovement\":109242,\"totalShares\":41900000,\"maxShares\":8400000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":2864.71798336488,\"lastPrice\":2871.496431375342,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.01,\"b\":true,\"otlkMag\":15.998302208157524,\"otlkMagForecast\":61.10486562758479,\"cap\":80890381,\"spreadPerc\":0.6,\"shareTxForMovement\":52188,\"shareTxUntilMovement\":52188,\"totalShares\":35600000,\"maxShares\":7100000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":1202.8377175811634,\"lastPrice\":1200.4494503525793,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.69,\"b\":true,\"otlkMag\":5.675782377766025,\"otlkMagForecast\":56.473690703043616,\"cap\":42812759,\"spreadPerc\":1.1,\"shareTxForMovement\":89617,\"shareTxUntilMovement\":89617,\"totalShares\":58000000,\"maxShares\":11600000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":2442.379020903895,\"lastPrice\":2439.937558866965,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.85,\"b\":true,\"otlkMag\":5.1808548909080345,\"otlkMagForecast\":50.22389602764793,\"cap\":21733460,\"spreadPerc\":0.6,\"shareTxForMovement\":100325,\"shareTxUntilMovement\":100325,\"totalShares\":101900000,\"maxShares\":20400000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":363.24099430754103,\"lastPrice\":364.27580893606836,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.42,\"b\":false,\"otlkMag\":7.341246721780856,\"otlkMagForecast\":43.083989334554836,\"cap\":41031063,\"spreadPerc\":1.3,\"shareTxForMovement\":32971,\"shareTxUntilMovement\":32971,\"totalShares\":28100000,\"maxShares\":5600000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":7841.322792291469,\"lastPrice\":7849.630556833089,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.9,\"b\":false,\"otlkMag\":5.887342690543289,\"otlkMagForecast\":47.48890946013423,\"cap\":38582524,\"spreadPerc\":0.6,\"shareTxForMovement\":42818,\"shareTxUntilMovement\":42818,\"totalShares\":9300000,\"maxShares\":1900000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":354.9170270565928,\"lastPrice\":355.24291911349127,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":false,\"otlkMag\":5.20406958932464,\"otlkMagForecast\":45.248794600235506,\"cap\":6014714,\"spreadPerc\":0.9,\"shareTxForMovement\":80700,\"shareTxUntilMovement\":80700,\"totalShares\":84600000,\"maxShares\":16900000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":6968.651180838619,\"lastPrice\":6954.814733078984,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.69,\"b\":true,\"otlkMag\":5.653735605566917,\"otlkMagForecast\":55.83779962917864,\"cap\":61059812,\"spreadPerc\":1.3,\"shareTxForMovement\":48344,\"shareTxUntilMovement\":48344,\"totalShares\":10500000,\"maxShares\":2100000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":1.0033378371286654,\"lastPrice\":0.9996544566532759,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.13,\"b\":true,\"otlkMag\":14.791485180765303,\"otlkMagForecast\":62.522370480539635,\"cap\":636285,\"spreadPerc\":1.2,\"shareTxForMovement\":27092,\"shareTxUntilMovement\":27092,\"totalShares\":155000000,\"maxShares\":31000000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":1629.7802051127248,\"lastPrice\":1633.0226162384265,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.69,\"b\":false,\"otlkMag\":5.266357752802157,\"otlkMagForecast\":44.01899915780877,\"cap\":2940933,\"spreadPerc\":1.1,\"shareTxForMovement\":38283,\"shareTxUntilMovement\":38283,\"totalShares\":100200000,\"maxShares\":20000000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":49047.49792335824,\"lastPrice\":49091.37955701188,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":false,\"otlkMag\":5.167046446588177,\"otlkMagForecast\":44.1324051671619,\"cap\":147955052,\"spreadPerc\":0.3,\"shareTxForMovement\":119154,\"shareTxUntilMovement\":119154,\"totalShares\":13100000,\"maxShares\":2600000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":56395.48083995476,\"lastPrice\":56353.6867165796,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":false,\"otlkMag\":8.837876508743772,\"otlkMagForecast\":40.35125182708416,\"cap\":512557602,\"spreadPerc\":0.9,\"shareTxForMovement\":118018,\"shareTxUntilMovement\":118018,\"totalShares\":18700000,\"maxShares\":3700000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":307423,\"lastUpdate\":1645756315154,\"ticksUntilCycle\":60}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":5,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":true,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":true,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"solarized-dark\",\"MonacoInsertSpaces\":true,\"MonacoFontSize\":24,\"MonacoVim\":true,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#E0E0BC\",\"primary\":\"#CCCCAE\",\"primarydark\":\"#B8B89C\",\"successlight\":\"#00F000\",\"success\":\"#00D200\",\"successdark\":\"#00B400\",\"errorlight\":\"#F00000\",\"error\":\"#C80000\",\"errordark\":\"#A00000\",\"secondarylight\":\"#B4AEAE\",\"secondary\":\"#969090\",\"secondarydark\":\"#787272\",\"warninglight\":\"#F0F000\",\"warning\":\"#C8C800\",\"warningdark\":\"#A0A000\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#1E1E1E\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#1E1E1E\",\"backgroundsecondary\":\"#252525\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Fira Code, Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-76,\"y\":365,\"opened\":true}}","VersionSave":"10","AllGangsSave":"","LastExportBonus":"1645756317982","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}"}}